

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 28 13:43:57 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18446
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    95                           	dabs	1,0xCA0,32
    96                           	dabs	1,0xC20,80
    97                           	dabs	1,0xBA0,80
    98                           	dabs	1,0xB20,80
    99                           	dabs	1,0xAA0,80
   100                           	dabs	1,0xA20,80
   101                           	dabs	1,0x9A0,80
   102                           	dabs	1,0x920,80
   103                           	dabs	1,0x8A0,80
   104                           	dabs	1,0x820,80
   105                           	dabs	1,0x7C0,48
   106                           	dabs	1,0x24D0,0,_sampleArray
   107                           	dabs	1,0x7E,2
   108  0000                     
   109                           ; Version 2.30
   110                           ; Generated 15/09/2020 GMT
   111                           ; 
   112                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC16F18446 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  008C                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  010F                     	;# 
   199  0110                     	;# 
   200  0111                     	;# 
   201  0112                     	;# 
   202  0113                     	;# 
   203  0114                     	;# 
   204  0115                     	;# 
   205  0116                     	;# 
   206  0117                     	;# 
   207  0118                     	;# 
   208  0119                     	;# 
   209  0119                     	;# 
   210  0119                     	;# 
   211  011A                     	;# 
   212  011A                     	;# 
   213  011A                     	;# 
   214  011B                     	;# 
   215  011B                     	;# 
   216  011B                     	;# 
   217  011B                     	;# 
   218  011B                     	;# 
   219  011C                     	;# 
   220  011C                     	;# 
   221  011C                     	;# 
   222  011D                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  011E                     	;# 
   226  011E                     	;# 
   227  011E                     	;# 
   228  011F                     	;# 
   229  011F                     	;# 
   230  011F                     	;# 
   231  011F                     	;# 
   232  011F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  018E                     	;# 
   236  018F                     	;# 
   237  0190                     	;# 
   238  0191                     	;# 
   239  0192                     	;# 
   240  0196                     	;# 
   241  0197                     	;# 
   242  0198                     	;# 
   243  0199                     	;# 
   244  019A                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  020C                     	;# 
   248  020D                     	;# 
   249  020E                     	;# 
   250  020E                     	;# 
   251  020F                     	;# 
   252  020F                     	;# 
   253  0210                     	;# 
   254  0210                     	;# 
   255  0211                     	;# 
   256  0211                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0214                     	;# 
   260  0214                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0216                     	;# 
   264  0216                     	;# 
   265  0217                     	;# 
   266  0217                     	;# 
   267  0218                     	;# 
   268  0219                     	;# 
   269  021A                     	;# 
   270  021A                     	;# 
   271  021B                     	;# 
   272  021B                     	;# 
   273  021C                     	;# 
   274  021C                     	;# 
   275  021D                     	;# 
   276  021D                     	;# 
   277  021E                     	;# 
   278  021F                     	;# 
   279  028C                     	;# 
   280  028C                     	;# 
   281  028D                     	;# 
   282  028D                     	;# 
   283  028E                     	;# 
   284  028F                     	;# 
   285  0290                     	;# 
   286  0291                     	;# 
   287  0292                     	;# 
   288  0292                     	;# 
   289  0293                     	;# 
   290  0293                     	;# 
   291  0294                     	;# 
   292  0295                     	;# 
   293  0296                     	;# 
   294  0297                     	;# 
   295  0298                     	;# 
   296  0298                     	;# 
   297  0299                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  029B                     	;# 
   301  029C                     	;# 
   302  029D                     	;# 
   303  029F                     	;# 
   304  030C                     	;# 
   305  030C                     	;# 
   306  030D                     	;# 
   307  030E                     	;# 
   308  030F                     	;# 
   309  0310                     	;# 
   310  0310                     	;# 
   311  0311                     	;# 
   312  0312                     	;# 
   313  0313                     	;# 
   314  0314                     	;# 
   315  0314                     	;# 
   316  0315                     	;# 
   317  0316                     	;# 
   318  0317                     	;# 
   319  0318                     	;# 
   320  0318                     	;# 
   321  0319                     	;# 
   322  031A                     	;# 
   323  031B                     	;# 
   324  038C                     	;# 
   325  038C                     	;# 
   326  038D                     	;# 
   327  038E                     	;# 
   328  0390                     	;# 
   329  0390                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  048C                     	;# 
   333  048C                     	;# 
   334  048D                     	;# 
   335  048E                     	;# 
   336  048F                     	;# 
   337  048F                     	;# 
   338  0490                     	;# 
   339  0491                     	;# 
   340  0492                     	;# 
   341  0492                     	;# 
   342  0493                     	;# 
   343  0494                     	;# 
   344  0495                     	;# 
   345  0495                     	;# 
   346  0496                     	;# 
   347  0497                     	;# 
   348  0498                     	;# 
   349  0499                     	;# 
   350  049A                     	;# 
   351  049B                     	;# 
   352  049C                     	;# 
   353  049D                     	;# 
   354  058C                     	;# 
   355  058C                     	;# 
   356  058D                     	;# 
   357  058E                     	;# 
   358  058F                     	;# 
   359  058F                     	;# 
   360  0590                     	;# 
   361  0591                     	;# 
   362  0592                     	;# 
   363  0593                     	;# 
   364  059C                     	;# 
   365  059C                     	;# 
   366  059D                     	;# 
   367  059D                     	;# 
   368  059E                     	;# 
   369  059F                     	;# 
   370  060C                     	;# 
   371  060C                     	;# 
   372  060D                     	;# 
   373  060D                     	;# 
   374  060E                     	;# 
   375  060F                     	;# 
   376  0610                     	;# 
   377  0611                     	;# 
   378  0612                     	;# 
   379  0613                     	;# 
   380  0614                     	;# 
   381  0616                     	;# 
   382  0616                     	;# 
   383  0617                     	;# 
   384  0617                     	;# 
   385  0618                     	;# 
   386  0619                     	;# 
   387  061A                     	;# 
   388  061B                     	;# 
   389  061C                     	;# 
   390  061D                     	;# 
   391  061E                     	;# 
   392  070C                     	;# 
   393  070D                     	;# 
   394  070E                     	;# 
   395  070F                     	;# 
   396  0710                     	;# 
   397  0711                     	;# 
   398  0712                     	;# 
   399  0713                     	;# 
   400  0714                     	;# 
   401  0716                     	;# 
   402  0717                     	;# 
   403  0718                     	;# 
   404  0719                     	;# 
   405  071A                     	;# 
   406  071B                     	;# 
   407  071C                     	;# 
   408  071D                     	;# 
   409  071E                     	;# 
   410  0796                     	;# 
   411  0797                     	;# 
   412  0798                     	;# 
   413  0799                     	;# 
   414  079A                     	;# 
   415  079B                     	;# 
   416  079C                     	;# 
   417  079D                     	;# 
   418  080C                     	;# 
   419  080D                     	;# 
   420  080E                     	;# 
   421  080F                     	;# 
   422  0810                     	;# 
   423  0811                     	;# 
   424  0812                     	;# 
   425  0813                     	;# 
   426  0814                     	;# 
   427  081A                     	;# 
   428  081A                     	;# 
   429  081B                     	;# 
   430  081C                     	;# 
   431  081C                     	;# 
   432  081D                     	;# 
   433  081E                     	;# 
   434  081F                     	;# 
   435  088C                     	;# 
   436  088D                     	;# 
   437  088E                     	;# 
   438  088F                     	;# 
   439  0890                     	;# 
   440  0891                     	;# 
   441  0892                     	;# 
   442  0893                     	;# 
   443  0895                     	;# 
   444  0896                     	;# 
   445  0897                     	;# 
   446  0898                     	;# 
   447  0899                     	;# 
   448  089A                     	;# 
   449  089B                     	;# 
   450  090C                     	;# 
   451  090E                     	;# 
   452  090F                     	;# 
   453  091F                     	;# 
   454  098F                     	;# 
   455  098F                     	;# 
   456  0990                     	;# 
   457  0991                     	;# 
   458  0992                     	;# 
   459  0993                     	;# 
   460  0994                     	;# 
   461  0995                     	;# 
   462  0996                     	;# 
   463  0997                     	;# 
   464  1E0F                     	;# 
   465  1E10                     	;# 
   466  1E11                     	;# 
   467  1E12                     	;# 
   468  1E13                     	;# 
   469  1E14                     	;# 
   470  1E15                     	;# 
   471  1E16                     	;# 
   472  1E17                     	;# 
   473  1E18                     	;# 
   474  1E19                     	;# 
   475  1E1A                     	;# 
   476  1E1B                     	;# 
   477  1E1C                     	;# 
   478  1E1D                     	;# 
   479  1E1E                     	;# 
   480  1E1F                     	;# 
   481  1E20                     	;# 
   482  1E21                     	;# 
   483  1E22                     	;# 
   484  1E23                     	;# 
   485  1E24                     	;# 
   486  1E25                     	;# 
   487  1E26                     	;# 
   488  1E27                     	;# 
   489  1E28                     	;# 
   490  1E29                     	;# 
   491  1E2A                     	;# 
   492  1E2B                     	;# 
   493  1E2C                     	;# 
   494  1E2D                     	;# 
   495  1E2E                     	;# 
   496  1E2F                     	;# 
   497  1E30                     	;# 
   498  1E31                     	;# 
   499  1E32                     	;# 
   500  1E33                     	;# 
   501  1E34                     	;# 
   502  1E35                     	;# 
   503  1E36                     	;# 
   504  1E37                     	;# 
   505  1E8F                     	;# 
   506  1E90                     	;# 
   507  1E91                     	;# 
   508  1E92                     	;# 
   509  1E93                     	;# 
   510  1E94                     	;# 
   511  1E95                     	;# 
   512  1E96                     	;# 
   513  1E97                     	;# 
   514  1E9C                     	;# 
   515  1E9D                     	;# 
   516  1E9E                     	;# 
   517  1EA1                     	;# 
   518  1EA2                     	;# 
   519  1EA3                     	;# 
   520  1EA4                     	;# 
   521  1EA9                     	;# 
   522  1EAA                     	;# 
   523  1EB1                     	;# 
   524  1EB2                     	;# 
   525  1EB8                     	;# 
   526  1EB9                     	;# 
   527  1EBA                     	;# 
   528  1EBB                     	;# 
   529  1EBC                     	;# 
   530  1EBD                     	;# 
   531  1EBE                     	;# 
   532  1EC3                     	;# 
   533  1EC5                     	;# 
   534  1EC6                     	;# 
   535  1EC7                     	;# 
   536  1EC8                     	;# 
   537  1EC9                     	;# 
   538  1ECA                     	;# 
   539  1ECB                     	;# 
   540  1ECB                     	;# 
   541  1ECB                     	;# 
   542  1ECC                     	;# 
   543  1ECC                     	;# 
   544  1ECC                     	;# 
   545  1F10                     	;# 
   546  1F11                     	;# 
   547  1F12                     	;# 
   548  1F14                     	;# 
   549  1F15                     	;# 
   550  1F1C                     	;# 
   551  1F1D                     	;# 
   552  1F1E                     	;# 
   553  1F1F                     	;# 
   554  1F20                     	;# 
   555  1F21                     	;# 
   556  1F22                     	;# 
   557  1F23                     	;# 
   558  1F24                     	;# 
   559  1F25                     	;# 
   560  1F26                     	;# 
   561  1F27                     	;# 
   562  1F38                     	;# 
   563  1F39                     	;# 
   564  1F3A                     	;# 
   565  1F3B                     	;# 
   566  1F3C                     	;# 
   567  1F3D                     	;# 
   568  1F3E                     	;# 
   569  1F3F                     	;# 
   570  1F43                     	;# 
   571  1F44                     	;# 
   572  1F45                     	;# 
   573  1F46                     	;# 
   574  1F47                     	;# 
   575  1F48                     	;# 
   576  1F49                     	;# 
   577  1F4A                     	;# 
   578  1F4E                     	;# 
   579  1F4F                     	;# 
   580  1F50                     	;# 
   581  1F51                     	;# 
   582  1F52                     	;# 
   583  1F53                     	;# 
   584  1F54                     	;# 
   585  1F55                     	;# 
   586  1FE4                     	;# 
   587  1FE5                     	;# 
   588  1FE6                     	;# 
   589  1FE7                     	;# 
   590  1FE8                     	;# 
   591  1FE8                     	;# 
   592  1FE9                     	;# 
   593  1FEA                     	;# 
   594  1FEB                     	;# 
   595  1FED                     	;# 
   596  1FEE                     	;# 
   597  1FEF                     	;# 
   598  0000                     	;# 
   599  0001                     	;# 
   600  0002                     	;# 
   601  0003                     	;# 
   602  0004                     	;# 
   603  0005                     	;# 
   604  0006                     	;# 
   605  0007                     	;# 
   606  0008                     	;# 
   607  0009                     	;# 
   608  000A                     	;# 
   609  000B                     	;# 
   610  000C                     	;# 
   611  000D                     	;# 
   612  000E                     	;# 
   613  0012                     	;# 
   614  0013                     	;# 
   615  0014                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  001A                     	;# 
   619  008C                     	;# 
   620  008C                     	;# 
   621  008D                     	;# 
   622  008E                     	;# 
   623  008E                     	;# 
   624  008F                     	;# 
   625  0090                     	;# 
   626  0090                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0092                     	;# 
   630  0093                     	;# 
   631  0094                     	;# 
   632  0094                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0096                     	;# 
   636  0097                     	;# 
   637  0098                     	;# 
   638  0099                     	;# 
   639  009A                     	;# 
   640  009B                     	;# 
   641  009B                     	;# 
   642  009C                     	;# 
   643  009D                     	;# 
   644  009D                     	;# 
   645  009E                     	;# 
   646  009F                     	;# 
   647  010C                     	;# 
   648  010C                     	;# 
   649  010D                     	;# 
   650  010E                     	;# 
   651  010F                     	;# 
   652  010F                     	;# 
   653  0110                     	;# 
   654  0111                     	;# 
   655  0112                     	;# 
   656  0113                     	;# 
   657  0114                     	;# 
   658  0115                     	;# 
   659  0116                     	;# 
   660  0117                     	;# 
   661  0118                     	;# 
   662  0119                     	;# 
   663  0119                     	;# 
   664  0119                     	;# 
   665  011A                     	;# 
   666  011A                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011B                     	;# 
   672  011B                     	;# 
   673  011C                     	;# 
   674  011C                     	;# 
   675  011C                     	;# 
   676  011D                     	;# 
   677  011D                     	;# 
   678  011D                     	;# 
   679  011E                     	;# 
   680  011E                     	;# 
   681  011E                     	;# 
   682  011F                     	;# 
   683  011F                     	;# 
   684  011F                     	;# 
   685  011F                     	;# 
   686  011F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  018E                     	;# 
   690  018F                     	;# 
   691  0190                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0196                     	;# 
   695  0197                     	;# 
   696  0198                     	;# 
   697  0199                     	;# 
   698  019A                     	;# 
   699  019B                     	;# 
   700  019C                     	;# 
   701  020C                     	;# 
   702  020D                     	;# 
   703  020E                     	;# 
   704  020E                     	;# 
   705  020F                     	;# 
   706  020F                     	;# 
   707  0210                     	;# 
   708  0210                     	;# 
   709  0211                     	;# 
   710  0211                     	;# 
   711  0212                     	;# 
   712  0213                     	;# 
   713  0214                     	;# 
   714  0214                     	;# 
   715  0215                     	;# 
   716  0215                     	;# 
   717  0216                     	;# 
   718  0216                     	;# 
   719  0217                     	;# 
   720  0217                     	;# 
   721  0218                     	;# 
   722  0219                     	;# 
   723  021A                     	;# 
   724  021A                     	;# 
   725  021B                     	;# 
   726  021B                     	;# 
   727  021C                     	;# 
   728  021C                     	;# 
   729  021D                     	;# 
   730  021D                     	;# 
   731  021E                     	;# 
   732  021F                     	;# 
   733  028C                     	;# 
   734  028C                     	;# 
   735  028D                     	;# 
   736  028D                     	;# 
   737  028E                     	;# 
   738  028F                     	;# 
   739  0290                     	;# 
   740  0291                     	;# 
   741  0292                     	;# 
   742  0292                     	;# 
   743  0293                     	;# 
   744  0293                     	;# 
   745  0294                     	;# 
   746  0295                     	;# 
   747  0296                     	;# 
   748  0297                     	;# 
   749  0298                     	;# 
   750  0298                     	;# 
   751  0299                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029F                     	;# 
   758  030C                     	;# 
   759  030C                     	;# 
   760  030D                     	;# 
   761  030E                     	;# 
   762  030F                     	;# 
   763  0310                     	;# 
   764  0310                     	;# 
   765  0311                     	;# 
   766  0312                     	;# 
   767  0313                     	;# 
   768  0314                     	;# 
   769  0314                     	;# 
   770  0315                     	;# 
   771  0316                     	;# 
   772  0317                     	;# 
   773  0318                     	;# 
   774  0318                     	;# 
   775  0319                     	;# 
   776  031A                     	;# 
   777  031B                     	;# 
   778  038C                     	;# 
   779  038C                     	;# 
   780  038D                     	;# 
   781  038E                     	;# 
   782  0390                     	;# 
   783  0390                     	;# 
   784  0391                     	;# 
   785  0392                     	;# 
   786  048C                     	;# 
   787  048C                     	;# 
   788  048D                     	;# 
   789  048E                     	;# 
   790  048F                     	;# 
   791  048F                     	;# 
   792  0490                     	;# 
   793  0491                     	;# 
   794  0492                     	;# 
   795  0492                     	;# 
   796  0493                     	;# 
   797  0494                     	;# 
   798  0495                     	;# 
   799  0495                     	;# 
   800  0496                     	;# 
   801  0497                     	;# 
   802  0498                     	;# 
   803  0499                     	;# 
   804  049A                     	;# 
   805  049B                     	;# 
   806  049C                     	;# 
   807  049D                     	;# 
   808  058C                     	;# 
   809  058C                     	;# 
   810  058D                     	;# 
   811  058E                     	;# 
   812  058F                     	;# 
   813  058F                     	;# 
   814  0590                     	;# 
   815  0591                     	;# 
   816  0592                     	;# 
   817  0593                     	;# 
   818  059C                     	;# 
   819  059C                     	;# 
   820  059D                     	;# 
   821  059D                     	;# 
   822  059E                     	;# 
   823  059F                     	;# 
   824  060C                     	;# 
   825  060C                     	;# 
   826  060D                     	;# 
   827  060D                     	;# 
   828  060E                     	;# 
   829  060F                     	;# 
   830  0610                     	;# 
   831  0611                     	;# 
   832  0612                     	;# 
   833  0613                     	;# 
   834  0614                     	;# 
   835  0616                     	;# 
   836  0616                     	;# 
   837  0617                     	;# 
   838  0617                     	;# 
   839  0618                     	;# 
   840  0619                     	;# 
   841  061A                     	;# 
   842  061B                     	;# 
   843  061C                     	;# 
   844  061D                     	;# 
   845  061E                     	;# 
   846  070C                     	;# 
   847  070D                     	;# 
   848  070E                     	;# 
   849  070F                     	;# 
   850  0710                     	;# 
   851  0711                     	;# 
   852  0712                     	;# 
   853  0713                     	;# 
   854  0714                     	;# 
   855  0716                     	;# 
   856  0717                     	;# 
   857  0718                     	;# 
   858  0719                     	;# 
   859  071A                     	;# 
   860  071B                     	;# 
   861  071C                     	;# 
   862  071D                     	;# 
   863  071E                     	;# 
   864  0796                     	;# 
   865  0797                     	;# 
   866  0798                     	;# 
   867  0799                     	;# 
   868  079A                     	;# 
   869  079B                     	;# 
   870  079C                     	;# 
   871  079D                     	;# 
   872  080C                     	;# 
   873  080D                     	;# 
   874  080E                     	;# 
   875  080F                     	;# 
   876  0810                     	;# 
   877  0811                     	;# 
   878  0812                     	;# 
   879  0813                     	;# 
   880  0814                     	;# 
   881  081A                     	;# 
   882  081A                     	;# 
   883  081B                     	;# 
   884  081C                     	;# 
   885  081C                     	;# 
   886  081D                     	;# 
   887  081E                     	;# 
   888  081F                     	;# 
   889  088C                     	;# 
   890  088D                     	;# 
   891  088E                     	;# 
   892  088F                     	;# 
   893  0890                     	;# 
   894  0891                     	;# 
   895  0892                     	;# 
   896  0893                     	;# 
   897  0895                     	;# 
   898  0896                     	;# 
   899  0897                     	;# 
   900  0898                     	;# 
   901  0899                     	;# 
   902  089A                     	;# 
   903  089B                     	;# 
   904  090C                     	;# 
   905  090E                     	;# 
   906  090F                     	;# 
   907  091F                     	;# 
   908  098F                     	;# 
   909  098F                     	;# 
   910  0990                     	;# 
   911  0991                     	;# 
   912  0992                     	;# 
   913  0993                     	;# 
   914  0994                     	;# 
   915  0995                     	;# 
   916  0996                     	;# 
   917  0997                     	;# 
   918  1E0F                     	;# 
   919  1E10                     	;# 
   920  1E11                     	;# 
   921  1E12                     	;# 
   922  1E13                     	;# 
   923  1E14                     	;# 
   924  1E15                     	;# 
   925  1E16                     	;# 
   926  1E17                     	;# 
   927  1E18                     	;# 
   928  1E19                     	;# 
   929  1E1A                     	;# 
   930  1E1B                     	;# 
   931  1E1C                     	;# 
   932  1E1D                     	;# 
   933  1E1E                     	;# 
   934  1E1F                     	;# 
   935  1E20                     	;# 
   936  1E21                     	;# 
   937  1E22                     	;# 
   938  1E23                     	;# 
   939  1E24                     	;# 
   940  1E25                     	;# 
   941  1E26                     	;# 
   942  1E27                     	;# 
   943  1E28                     	;# 
   944  1E29                     	;# 
   945  1E2A                     	;# 
   946  1E2B                     	;# 
   947  1E2C                     	;# 
   948  1E2D                     	;# 
   949  1E2E                     	;# 
   950  1E2F                     	;# 
   951  1E30                     	;# 
   952  1E31                     	;# 
   953  1E32                     	;# 
   954  1E33                     	;# 
   955  1E34                     	;# 
   956  1E35                     	;# 
   957  1E36                     	;# 
   958  1E37                     	;# 
   959  1E8F                     	;# 
   960  1E90                     	;# 
   961  1E91                     	;# 
   962  1E92                     	;# 
   963  1E93                     	;# 
   964  1E94                     	;# 
   965  1E95                     	;# 
   966  1E96                     	;# 
   967  1E97                     	;# 
   968  1E9C                     	;# 
   969  1E9D                     	;# 
   970  1E9E                     	;# 
   971  1EA1                     	;# 
   972  1EA2                     	;# 
   973  1EA3                     	;# 
   974  1EA4                     	;# 
   975  1EA9                     	;# 
   976  1EAA                     	;# 
   977  1EB1                     	;# 
   978  1EB2                     	;# 
   979  1EB8                     	;# 
   980  1EB9                     	;# 
   981  1EBA                     	;# 
   982  1EBB                     	;# 
   983  1EBC                     	;# 
   984  1EBD                     	;# 
   985  1EBE                     	;# 
   986  1EC3                     	;# 
   987  1EC5                     	;# 
   988  1EC6                     	;# 
   989  1EC7                     	;# 
   990  1EC8                     	;# 
   991  1EC9                     	;# 
   992  1ECA                     	;# 
   993  1ECB                     	;# 
   994  1ECB                     	;# 
   995  1ECB                     	;# 
   996  1ECC                     	;# 
   997  1ECC                     	;# 
   998  1ECC                     	;# 
   999  1F10                     	;# 
  1000  1F11                     	;# 
  1001  1F12                     	;# 
  1002  1F14                     	;# 
  1003  1F15                     	;# 
  1004  1F1C                     	;# 
  1005  1F1D                     	;# 
  1006  1F1E                     	;# 
  1007  1F1F                     	;# 
  1008  1F20                     	;# 
  1009  1F21                     	;# 
  1010  1F22                     	;# 
  1011  1F23                     	;# 
  1012  1F24                     	;# 
  1013  1F25                     	;# 
  1014  1F26                     	;# 
  1015  1F27                     	;# 
  1016  1F38                     	;# 
  1017  1F39                     	;# 
  1018  1F3A                     	;# 
  1019  1F3B                     	;# 
  1020  1F3C                     	;# 
  1021  1F3D                     	;# 
  1022  1F3E                     	;# 
  1023  1F3F                     	;# 
  1024  1F43                     	;# 
  1025  1F44                     	;# 
  1026  1F45                     	;# 
  1027  1F46                     	;# 
  1028  1F47                     	;# 
  1029  1F48                     	;# 
  1030  1F49                     	;# 
  1031  1F4A                     	;# 
  1032  1F4E                     	;# 
  1033  1F4F                     	;# 
  1034  1F50                     	;# 
  1035  1F51                     	;# 
  1036  1F52                     	;# 
  1037  1F53                     	;# 
  1038  1F54                     	;# 
  1039  1F55                     	;# 
  1040  1FE4                     	;# 
  1041  1FE5                     	;# 
  1042  1FE6                     	;# 
  1043  1FE7                     	;# 
  1044  1FE8                     	;# 
  1045  1FE8                     	;# 
  1046  1FE9                     	;# 
  1047  1FEA                     	;# 
  1048  1FEB                     	;# 
  1049  1FED                     	;# 
  1050  1FEE                     	;# 
  1051  1FEF                     	;# 
  1052  0000                     	;# 
  1053  0001                     	;# 
  1054  0002                     	;# 
  1055  0003                     	;# 
  1056  0004                     	;# 
  1057  0005                     	;# 
  1058  0006                     	;# 
  1059  0007                     	;# 
  1060  0008                     	;# 
  1061  0009                     	;# 
  1062  000A                     	;# 
  1063  000B                     	;# 
  1064  000C                     	;# 
  1065  000D                     	;# 
  1066  000E                     	;# 
  1067  0012                     	;# 
  1068  0013                     	;# 
  1069  0014                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  008C                     	;# 
  1074  008C                     	;# 
  1075  008D                     	;# 
  1076  008E                     	;# 
  1077  008E                     	;# 
  1078  008F                     	;# 
  1079  0090                     	;# 
  1080  0090                     	;# 
  1081  0091                     	;# 
  1082  0092                     	;# 
  1083  0092                     	;# 
  1084  0093                     	;# 
  1085  0094                     	;# 
  1086  0094                     	;# 
  1087  0095                     	;# 
  1088  0096                     	;# 
  1089  0096                     	;# 
  1090  0097                     	;# 
  1091  0098                     	;# 
  1092  0099                     	;# 
  1093  009A                     	;# 
  1094  009B                     	;# 
  1095  009B                     	;# 
  1096  009C                     	;# 
  1097  009D                     	;# 
  1098  009D                     	;# 
  1099  009E                     	;# 
  1100  009F                     	;# 
  1101  010C                     	;# 
  1102  010C                     	;# 
  1103  010D                     	;# 
  1104  010E                     	;# 
  1105  010F                     	;# 
  1106  010F                     	;# 
  1107  0110                     	;# 
  1108  0111                     	;# 
  1109  0112                     	;# 
  1110  0113                     	;# 
  1111  0114                     	;# 
  1112  0115                     	;# 
  1113  0116                     	;# 
  1114  0117                     	;# 
  1115  0118                     	;# 
  1116  0119                     	;# 
  1117  0119                     	;# 
  1118  0119                     	;# 
  1119  011A                     	;# 
  1120  011A                     	;# 
  1121  011A                     	;# 
  1122  011B                     	;# 
  1123  011B                     	;# 
  1124  011B                     	;# 
  1125  011B                     	;# 
  1126  011B                     	;# 
  1127  011C                     	;# 
  1128  011C                     	;# 
  1129  011C                     	;# 
  1130  011D                     	;# 
  1131  011D                     	;# 
  1132  011D                     	;# 
  1133  011E                     	;# 
  1134  011E                     	;# 
  1135  011E                     	;# 
  1136  011F                     	;# 
  1137  011F                     	;# 
  1138  011F                     	;# 
  1139  011F                     	;# 
  1140  011F                     	;# 
  1141  018C                     	;# 
  1142  018D                     	;# 
  1143  018E                     	;# 
  1144  018F                     	;# 
  1145  0190                     	;# 
  1146  0191                     	;# 
  1147  0192                     	;# 
  1148  0196                     	;# 
  1149  0197                     	;# 
  1150  0198                     	;# 
  1151  0199                     	;# 
  1152  019A                     	;# 
  1153  019B                     	;# 
  1154  019C                     	;# 
  1155  020C                     	;# 
  1156  020D                     	;# 
  1157  020E                     	;# 
  1158  020E                     	;# 
  1159  020F                     	;# 
  1160  020F                     	;# 
  1161  0210                     	;# 
  1162  0210                     	;# 
  1163  0211                     	;# 
  1164  0211                     	;# 
  1165  0212                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0216                     	;# 
  1172  0216                     	;# 
  1173  0217                     	;# 
  1174  0217                     	;# 
  1175  0218                     	;# 
  1176  0219                     	;# 
  1177  021A                     	;# 
  1178  021A                     	;# 
  1179  021B                     	;# 
  1180  021B                     	;# 
  1181  021C                     	;# 
  1182  021C                     	;# 
  1183  021D                     	;# 
  1184  021D                     	;# 
  1185  021E                     	;# 
  1186  021F                     	;# 
  1187  028C                     	;# 
  1188  028C                     	;# 
  1189  028D                     	;# 
  1190  028D                     	;# 
  1191  028E                     	;# 
  1192  028F                     	;# 
  1193  0290                     	;# 
  1194  0291                     	;# 
  1195  0292                     	;# 
  1196  0292                     	;# 
  1197  0293                     	;# 
  1198  0293                     	;# 
  1199  0294                     	;# 
  1200  0295                     	;# 
  1201  0296                     	;# 
  1202  0297                     	;# 
  1203  0298                     	;# 
  1204  0298                     	;# 
  1205  0299                     	;# 
  1206  0299                     	;# 
  1207  029A                     	;# 
  1208  029B                     	;# 
  1209  029C                     	;# 
  1210  029D                     	;# 
  1211  029F                     	;# 
  1212  030C                     	;# 
  1213  030C                     	;# 
  1214  030D                     	;# 
  1215  030E                     	;# 
  1216  030F                     	;# 
  1217  0310                     	;# 
  1218  0310                     	;# 
  1219  0311                     	;# 
  1220  0312                     	;# 
  1221  0313                     	;# 
  1222  0314                     	;# 
  1223  0314                     	;# 
  1224  0315                     	;# 
  1225  0316                     	;# 
  1226  0317                     	;# 
  1227  0318                     	;# 
  1228  0318                     	;# 
  1229  0319                     	;# 
  1230  031A                     	;# 
  1231  031B                     	;# 
  1232  038C                     	;# 
  1233  038C                     	;# 
  1234  038D                     	;# 
  1235  038E                     	;# 
  1236  0390                     	;# 
  1237  0390                     	;# 
  1238  0391                     	;# 
  1239  0392                     	;# 
  1240  048C                     	;# 
  1241  048C                     	;# 
  1242  048D                     	;# 
  1243  048E                     	;# 
  1244  048F                     	;# 
  1245  048F                     	;# 
  1246  0490                     	;# 
  1247  0491                     	;# 
  1248  0492                     	;# 
  1249  0492                     	;# 
  1250  0493                     	;# 
  1251  0494                     	;# 
  1252  0495                     	;# 
  1253  0495                     	;# 
  1254  0496                     	;# 
  1255  0497                     	;# 
  1256  0498                     	;# 
  1257  0499                     	;# 
  1258  049A                     	;# 
  1259  049B                     	;# 
  1260  049C                     	;# 
  1261  049D                     	;# 
  1262  058C                     	;# 
  1263  058C                     	;# 
  1264  058D                     	;# 
  1265  058E                     	;# 
  1266  058F                     	;# 
  1267  058F                     	;# 
  1268  0590                     	;# 
  1269  0591                     	;# 
  1270  0592                     	;# 
  1271  0593                     	;# 
  1272  059C                     	;# 
  1273  059C                     	;# 
  1274  059D                     	;# 
  1275  059D                     	;# 
  1276  059E                     	;# 
  1277  059F                     	;# 
  1278  060C                     	;# 
  1279  060C                     	;# 
  1280  060D                     	;# 
  1281  060D                     	;# 
  1282  060E                     	;# 
  1283  060F                     	;# 
  1284  0610                     	;# 
  1285  0611                     	;# 
  1286  0612                     	;# 
  1287  0613                     	;# 
  1288  0614                     	;# 
  1289  0616                     	;# 
  1290  0616                     	;# 
  1291  0617                     	;# 
  1292  0617                     	;# 
  1293  0618                     	;# 
  1294  0619                     	;# 
  1295  061A                     	;# 
  1296  061B                     	;# 
  1297  061C                     	;# 
  1298  061D                     	;# 
  1299  061E                     	;# 
  1300  070C                     	;# 
  1301  070D                     	;# 
  1302  070E                     	;# 
  1303  070F                     	;# 
  1304  0710                     	;# 
  1305  0711                     	;# 
  1306  0712                     	;# 
  1307  0713                     	;# 
  1308  0714                     	;# 
  1309  0716                     	;# 
  1310  0717                     	;# 
  1311  0718                     	;# 
  1312  0719                     	;# 
  1313  071A                     	;# 
  1314  071B                     	;# 
  1315  071C                     	;# 
  1316  071D                     	;# 
  1317  071E                     	;# 
  1318  0796                     	;# 
  1319  0797                     	;# 
  1320  0798                     	;# 
  1321  0799                     	;# 
  1322  079A                     	;# 
  1323  079B                     	;# 
  1324  079C                     	;# 
  1325  079D                     	;# 
  1326  080C                     	;# 
  1327  080D                     	;# 
  1328  080E                     	;# 
  1329  080F                     	;# 
  1330  0810                     	;# 
  1331  0811                     	;# 
  1332  0812                     	;# 
  1333  0813                     	;# 
  1334  0814                     	;# 
  1335  081A                     	;# 
  1336  081A                     	;# 
  1337  081B                     	;# 
  1338  081C                     	;# 
  1339  081C                     	;# 
  1340  081D                     	;# 
  1341  081E                     	;# 
  1342  081F                     	;# 
  1343  088C                     	;# 
  1344  088D                     	;# 
  1345  088E                     	;# 
  1346  088F                     	;# 
  1347  0890                     	;# 
  1348  0891                     	;# 
  1349  0892                     	;# 
  1350  0893                     	;# 
  1351  0895                     	;# 
  1352  0896                     	;# 
  1353  0897                     	;# 
  1354  0898                     	;# 
  1355  0899                     	;# 
  1356  089A                     	;# 
  1357  089B                     	;# 
  1358  090C                     	;# 
  1359  090E                     	;# 
  1360  090F                     	;# 
  1361  091F                     	;# 
  1362  098F                     	;# 
  1363  098F                     	;# 
  1364  0990                     	;# 
  1365  0991                     	;# 
  1366  0992                     	;# 
  1367  0993                     	;# 
  1368  0994                     	;# 
  1369  0995                     	;# 
  1370  0996                     	;# 
  1371  0997                     	;# 
  1372  1E0F                     	;# 
  1373  1E10                     	;# 
  1374  1E11                     	;# 
  1375  1E12                     	;# 
  1376  1E13                     	;# 
  1377  1E14                     	;# 
  1378  1E15                     	;# 
  1379  1E16                     	;# 
  1380  1E17                     	;# 
  1381  1E18                     	;# 
  1382  1E19                     	;# 
  1383  1E1A                     	;# 
  1384  1E1B                     	;# 
  1385  1E1C                     	;# 
  1386  1E1D                     	;# 
  1387  1E1E                     	;# 
  1388  1E1F                     	;# 
  1389  1E20                     	;# 
  1390  1E21                     	;# 
  1391  1E22                     	;# 
  1392  1E23                     	;# 
  1393  1E24                     	;# 
  1394  1E25                     	;# 
  1395  1E26                     	;# 
  1396  1E27                     	;# 
  1397  1E28                     	;# 
  1398  1E29                     	;# 
  1399  1E2A                     	;# 
  1400  1E2B                     	;# 
  1401  1E2C                     	;# 
  1402  1E2D                     	;# 
  1403  1E2E                     	;# 
  1404  1E2F                     	;# 
  1405  1E30                     	;# 
  1406  1E31                     	;# 
  1407  1E32                     	;# 
  1408  1E33                     	;# 
  1409  1E34                     	;# 
  1410  1E35                     	;# 
  1411  1E36                     	;# 
  1412  1E37                     	;# 
  1413  1E8F                     	;# 
  1414  1E90                     	;# 
  1415  1E91                     	;# 
  1416  1E92                     	;# 
  1417  1E93                     	;# 
  1418  1E94                     	;# 
  1419  1E95                     	;# 
  1420  1E96                     	;# 
  1421  1E97                     	;# 
  1422  1E9C                     	;# 
  1423  1E9D                     	;# 
  1424  1E9E                     	;# 
  1425  1EA1                     	;# 
  1426  1EA2                     	;# 
  1427  1EA3                     	;# 
  1428  1EA4                     	;# 
  1429  1EA9                     	;# 
  1430  1EAA                     	;# 
  1431  1EB1                     	;# 
  1432  1EB2                     	;# 
  1433  1EB8                     	;# 
  1434  1EB9                     	;# 
  1435  1EBA                     	;# 
  1436  1EBB                     	;# 
  1437  1EBC                     	;# 
  1438  1EBD                     	;# 
  1439  1EBE                     	;# 
  1440  1EC3                     	;# 
  1441  1EC5                     	;# 
  1442  1EC6                     	;# 
  1443  1EC7                     	;# 
  1444  1EC8                     	;# 
  1445  1EC9                     	;# 
  1446  1ECA                     	;# 
  1447  1ECB                     	;# 
  1448  1ECB                     	;# 
  1449  1ECB                     	;# 
  1450  1ECC                     	;# 
  1451  1ECC                     	;# 
  1452  1ECC                     	;# 
  1453  1F10                     	;# 
  1454  1F11                     	;# 
  1455  1F12                     	;# 
  1456  1F14                     	;# 
  1457  1F15                     	;# 
  1458  1F1C                     	;# 
  1459  1F1D                     	;# 
  1460  1F1E                     	;# 
  1461  1F1F                     	;# 
  1462  1F20                     	;# 
  1463  1F21                     	;# 
  1464  1F22                     	;# 
  1465  1F23                     	;# 
  1466  1F24                     	;# 
  1467  1F25                     	;# 
  1468  1F26                     	;# 
  1469  1F27                     	;# 
  1470  1F38                     	;# 
  1471  1F39                     	;# 
  1472  1F3A                     	;# 
  1473  1F3B                     	;# 
  1474  1F3C                     	;# 
  1475  1F3D                     	;# 
  1476  1F3E                     	;# 
  1477  1F3F                     	;# 
  1478  1F43                     	;# 
  1479  1F44                     	;# 
  1480  1F45                     	;# 
  1481  1F46                     	;# 
  1482  1F47                     	;# 
  1483  1F48                     	;# 
  1484  1F49                     	;# 
  1485  1F4A                     	;# 
  1486  1F4E                     	;# 
  1487  1F4F                     	;# 
  1488  1F50                     	;# 
  1489  1F51                     	;# 
  1490  1F52                     	;# 
  1491  1F53                     	;# 
  1492  1F54                     	;# 
  1493  1F55                     	;# 
  1494  1FE4                     	;# 
  1495  1FE5                     	;# 
  1496  1FE6                     	;# 
  1497  1FE7                     	;# 
  1498  1FE8                     	;# 
  1499  1FE8                     	;# 
  1500  1FE9                     	;# 
  1501  1FEA                     	;# 
  1502  1FEB                     	;# 
  1503  1FED                     	;# 
  1504  1FEE                     	;# 
  1505  1FEF                     	;# 
  1506  0000                     	;# 
  1507  0001                     	;# 
  1508  0002                     	;# 
  1509  0003                     	;# 
  1510  0004                     	;# 
  1511  0005                     	;# 
  1512  0006                     	;# 
  1513  0007                     	;# 
  1514  0008                     	;# 
  1515  0009                     	;# 
  1516  000A                     	;# 
  1517  000B                     	;# 
  1518  000C                     	;# 
  1519  000D                     	;# 
  1520  000E                     	;# 
  1521  0012                     	;# 
  1522  0013                     	;# 
  1523  0014                     	;# 
  1524  0018                     	;# 
  1525  0019                     	;# 
  1526  001A                     	;# 
  1527  008C                     	;# 
  1528  008C                     	;# 
  1529  008D                     	;# 
  1530  008E                     	;# 
  1531  008E                     	;# 
  1532  008F                     	;# 
  1533  0090                     	;# 
  1534  0090                     	;# 
  1535  0091                     	;# 
  1536  0092                     	;# 
  1537  0092                     	;# 
  1538  0093                     	;# 
  1539  0094                     	;# 
  1540  0094                     	;# 
  1541  0095                     	;# 
  1542  0096                     	;# 
  1543  0096                     	;# 
  1544  0097                     	;# 
  1545  0098                     	;# 
  1546  0099                     	;# 
  1547  009A                     	;# 
  1548  009B                     	;# 
  1549  009B                     	;# 
  1550  009C                     	;# 
  1551  009D                     	;# 
  1552  009D                     	;# 
  1553  009E                     	;# 
  1554  009F                     	;# 
  1555  010C                     	;# 
  1556  010C                     	;# 
  1557  010D                     	;# 
  1558  010E                     	;# 
  1559  010F                     	;# 
  1560  010F                     	;# 
  1561  0110                     	;# 
  1562  0111                     	;# 
  1563  0112                     	;# 
  1564  0113                     	;# 
  1565  0114                     	;# 
  1566  0115                     	;# 
  1567  0116                     	;# 
  1568  0117                     	;# 
  1569  0118                     	;# 
  1570  0119                     	;# 
  1571  0119                     	;# 
  1572  0119                     	;# 
  1573  011A                     	;# 
  1574  011A                     	;# 
  1575  011A                     	;# 
  1576  011B                     	;# 
  1577  011B                     	;# 
  1578  011B                     	;# 
  1579  011B                     	;# 
  1580  011B                     	;# 
  1581  011C                     	;# 
  1582  011C                     	;# 
  1583  011C                     	;# 
  1584  011D                     	;# 
  1585  011D                     	;# 
  1586  011D                     	;# 
  1587  011E                     	;# 
  1588  011E                     	;# 
  1589  011E                     	;# 
  1590  011F                     	;# 
  1591  011F                     	;# 
  1592  011F                     	;# 
  1593  011F                     	;# 
  1594  011F                     	;# 
  1595  018C                     	;# 
  1596  018D                     	;# 
  1597  018E                     	;# 
  1598  018F                     	;# 
  1599  0190                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0196                     	;# 
  1603  0197                     	;# 
  1604  0198                     	;# 
  1605  0199                     	;# 
  1606  019A                     	;# 
  1607  019B                     	;# 
  1608  019C                     	;# 
  1609  020C                     	;# 
  1610  020D                     	;# 
  1611  020E                     	;# 
  1612  020E                     	;# 
  1613  020F                     	;# 
  1614  020F                     	;# 
  1615  0210                     	;# 
  1616  0210                     	;# 
  1617  0211                     	;# 
  1618  0211                     	;# 
  1619  0212                     	;# 
  1620  0213                     	;# 
  1621  0214                     	;# 
  1622  0214                     	;# 
  1623  0215                     	;# 
  1624  0215                     	;# 
  1625  0216                     	;# 
  1626  0216                     	;# 
  1627  0217                     	;# 
  1628  0217                     	;# 
  1629  0218                     	;# 
  1630  0219                     	;# 
  1631  021A                     	;# 
  1632  021A                     	;# 
  1633  021B                     	;# 
  1634  021B                     	;# 
  1635  021C                     	;# 
  1636  021C                     	;# 
  1637  021D                     	;# 
  1638  021D                     	;# 
  1639  021E                     	;# 
  1640  021F                     	;# 
  1641  028C                     	;# 
  1642  028C                     	;# 
  1643  028D                     	;# 
  1644  028D                     	;# 
  1645  028E                     	;# 
  1646  028F                     	;# 
  1647  0290                     	;# 
  1648  0291                     	;# 
  1649  0292                     	;# 
  1650  0292                     	;# 
  1651  0293                     	;# 
  1652  0293                     	;# 
  1653  0294                     	;# 
  1654  0295                     	;# 
  1655  0296                     	;# 
  1656  0297                     	;# 
  1657  0298                     	;# 
  1658  0298                     	;# 
  1659  0299                     	;# 
  1660  0299                     	;# 
  1661  029A                     	;# 
  1662  029B                     	;# 
  1663  029C                     	;# 
  1664  029D                     	;# 
  1665  029F                     	;# 
  1666  030C                     	;# 
  1667  030C                     	;# 
  1668  030D                     	;# 
  1669  030E                     	;# 
  1670  030F                     	;# 
  1671  0310                     	;# 
  1672  0310                     	;# 
  1673  0311                     	;# 
  1674  0312                     	;# 
  1675  0313                     	;# 
  1676  0314                     	;# 
  1677  0314                     	;# 
  1678  0315                     	;# 
  1679  0316                     	;# 
  1680  0317                     	;# 
  1681  0318                     	;# 
  1682  0318                     	;# 
  1683  0319                     	;# 
  1684  031A                     	;# 
  1685  031B                     	;# 
  1686  038C                     	;# 
  1687  038C                     	;# 
  1688  038D                     	;# 
  1689  038E                     	;# 
  1690  0390                     	;# 
  1691  0390                     	;# 
  1692  0391                     	;# 
  1693  0392                     	;# 
  1694  048C                     	;# 
  1695  048C                     	;# 
  1696  048D                     	;# 
  1697  048E                     	;# 
  1698  048F                     	;# 
  1699  048F                     	;# 
  1700  0490                     	;# 
  1701  0491                     	;# 
  1702  0492                     	;# 
  1703  0492                     	;# 
  1704  0493                     	;# 
  1705  0494                     	;# 
  1706  0495                     	;# 
  1707  0495                     	;# 
  1708  0496                     	;# 
  1709  0497                     	;# 
  1710  0498                     	;# 
  1711  0499                     	;# 
  1712  049A                     	;# 
  1713  049B                     	;# 
  1714  049C                     	;# 
  1715  049D                     	;# 
  1716  058C                     	;# 
  1717  058C                     	;# 
  1718  058D                     	;# 
  1719  058E                     	;# 
  1720  058F                     	;# 
  1721  058F                     	;# 
  1722  0590                     	;# 
  1723  0591                     	;# 
  1724  0592                     	;# 
  1725  0593                     	;# 
  1726  059C                     	;# 
  1727  059C                     	;# 
  1728  059D                     	;# 
  1729  059D                     	;# 
  1730  059E                     	;# 
  1731  059F                     	;# 
  1732  060C                     	;# 
  1733  060C                     	;# 
  1734  060D                     	;# 
  1735  060D                     	;# 
  1736  060E                     	;# 
  1737  060F                     	;# 
  1738  0610                     	;# 
  1739  0611                     	;# 
  1740  0612                     	;# 
  1741  0613                     	;# 
  1742  0614                     	;# 
  1743  0616                     	;# 
  1744  0616                     	;# 
  1745  0617                     	;# 
  1746  0617                     	;# 
  1747  0618                     	;# 
  1748  0619                     	;# 
  1749  061A                     	;# 
  1750  061B                     	;# 
  1751  061C                     	;# 
  1752  061D                     	;# 
  1753  061E                     	;# 
  1754  070C                     	;# 
  1755  070D                     	;# 
  1756  070E                     	;# 
  1757  070F                     	;# 
  1758  0710                     	;# 
  1759  0711                     	;# 
  1760  0712                     	;# 
  1761  0713                     	;# 
  1762  0714                     	;# 
  1763  0716                     	;# 
  1764  0717                     	;# 
  1765  0718                     	;# 
  1766  0719                     	;# 
  1767  071A                     	;# 
  1768  071B                     	;# 
  1769  071C                     	;# 
  1770  071D                     	;# 
  1771  071E                     	;# 
  1772  0796                     	;# 
  1773  0797                     	;# 
  1774  0798                     	;# 
  1775  0799                     	;# 
  1776  079A                     	;# 
  1777  079B                     	;# 
  1778  079C                     	;# 
  1779  079D                     	;# 
  1780  080C                     	;# 
  1781  080D                     	;# 
  1782  080E                     	;# 
  1783  080F                     	;# 
  1784  0810                     	;# 
  1785  0811                     	;# 
  1786  0812                     	;# 
  1787  0813                     	;# 
  1788  0814                     	;# 
  1789  081A                     	;# 
  1790  081A                     	;# 
  1791  081B                     	;# 
  1792  081C                     	;# 
  1793  081C                     	;# 
  1794  081D                     	;# 
  1795  081E                     	;# 
  1796  081F                     	;# 
  1797  088C                     	;# 
  1798  088D                     	;# 
  1799  088E                     	;# 
  1800  088F                     	;# 
  1801  0890                     	;# 
  1802  0891                     	;# 
  1803  0892                     	;# 
  1804  0893                     	;# 
  1805  0895                     	;# 
  1806  0896                     	;# 
  1807  0897                     	;# 
  1808  0898                     	;# 
  1809  0899                     	;# 
  1810  089A                     	;# 
  1811  089B                     	;# 
  1812  090C                     	;# 
  1813  090E                     	;# 
  1814  090F                     	;# 
  1815  091F                     	;# 
  1816  098F                     	;# 
  1817  098F                     	;# 
  1818  0990                     	;# 
  1819  0991                     	;# 
  1820  0992                     	;# 
  1821  0993                     	;# 
  1822  0994                     	;# 
  1823  0995                     	;# 
  1824  0996                     	;# 
  1825  0997                     	;# 
  1826  1E0F                     	;# 
  1827  1E10                     	;# 
  1828  1E11                     	;# 
  1829  1E12                     	;# 
  1830  1E13                     	;# 
  1831  1E14                     	;# 
  1832  1E15                     	;# 
  1833  1E16                     	;# 
  1834  1E17                     	;# 
  1835  1E18                     	;# 
  1836  1E19                     	;# 
  1837  1E1A                     	;# 
  1838  1E1B                     	;# 
  1839  1E1C                     	;# 
  1840  1E1D                     	;# 
  1841  1E1E                     	;# 
  1842  1E1F                     	;# 
  1843  1E20                     	;# 
  1844  1E21                     	;# 
  1845  1E22                     	;# 
  1846  1E23                     	;# 
  1847  1E24                     	;# 
  1848  1E25                     	;# 
  1849  1E26                     	;# 
  1850  1E27                     	;# 
  1851  1E28                     	;# 
  1852  1E29                     	;# 
  1853  1E2A                     	;# 
  1854  1E2B                     	;# 
  1855  1E2C                     	;# 
  1856  1E2D                     	;# 
  1857  1E2E                     	;# 
  1858  1E2F                     	;# 
  1859  1E30                     	;# 
  1860  1E31                     	;# 
  1861  1E32                     	;# 
  1862  1E33                     	;# 
  1863  1E34                     	;# 
  1864  1E35                     	;# 
  1865  1E36                     	;# 
  1866  1E37                     	;# 
  1867  1E8F                     	;# 
  1868  1E90                     	;# 
  1869  1E91                     	;# 
  1870  1E92                     	;# 
  1871  1E93                     	;# 
  1872  1E94                     	;# 
  1873  1E95                     	;# 
  1874  1E96                     	;# 
  1875  1E97                     	;# 
  1876  1E9C                     	;# 
  1877  1E9D                     	;# 
  1878  1E9E                     	;# 
  1879  1EA1                     	;# 
  1880  1EA2                     	;# 
  1881  1EA3                     	;# 
  1882  1EA4                     	;# 
  1883  1EA9                     	;# 
  1884  1EAA                     	;# 
  1885  1EB1                     	;# 
  1886  1EB2                     	;# 
  1887  1EB8                     	;# 
  1888  1EB9                     	;# 
  1889  1EBA                     	;# 
  1890  1EBB                     	;# 
  1891  1EBC                     	;# 
  1892  1EBD                     	;# 
  1893  1EBE                     	;# 
  1894  1EC3                     	;# 
  1895  1EC5                     	;# 
  1896  1EC6                     	;# 
  1897  1EC7                     	;# 
  1898  1EC8                     	;# 
  1899  1EC9                     	;# 
  1900  1ECA                     	;# 
  1901  1ECB                     	;# 
  1902  1ECB                     	;# 
  1903  1ECB                     	;# 
  1904  1ECC                     	;# 
  1905  1ECC                     	;# 
  1906  1ECC                     	;# 
  1907  1F10                     	;# 
  1908  1F11                     	;# 
  1909  1F12                     	;# 
  1910  1F14                     	;# 
  1911  1F15                     	;# 
  1912  1F1C                     	;# 
  1913  1F1D                     	;# 
  1914  1F1E                     	;# 
  1915  1F1F                     	;# 
  1916  1F20                     	;# 
  1917  1F21                     	;# 
  1918  1F22                     	;# 
  1919  1F23                     	;# 
  1920  1F24                     	;# 
  1921  1F25                     	;# 
  1922  1F26                     	;# 
  1923  1F27                     	;# 
  1924  1F38                     	;# 
  1925  1F39                     	;# 
  1926  1F3A                     	;# 
  1927  1F3B                     	;# 
  1928  1F3C                     	;# 
  1929  1F3D                     	;# 
  1930  1F3E                     	;# 
  1931  1F3F                     	;# 
  1932  1F43                     	;# 
  1933  1F44                     	;# 
  1934  1F45                     	;# 
  1935  1F46                     	;# 
  1936  1F47                     	;# 
  1937  1F48                     	;# 
  1938  1F49                     	;# 
  1939  1F4A                     	;# 
  1940  1F4E                     	;# 
  1941  1F4F                     	;# 
  1942  1F50                     	;# 
  1943  1F51                     	;# 
  1944  1F52                     	;# 
  1945  1F53                     	;# 
  1946  1F54                     	;# 
  1947  1F55                     	;# 
  1948  1FE4                     	;# 
  1949  1FE5                     	;# 
  1950  1FE6                     	;# 
  1951  1FE7                     	;# 
  1952  1FE8                     	;# 
  1953  1FE8                     	;# 
  1954  1FE9                     	;# 
  1955  1FEA                     	;# 
  1956  1FEB                     	;# 
  1957  1FED                     	;# 
  1958  1FEE                     	;# 
  1959  1FEF                     	;# 
  1960  0000                     	;# 
  1961  0001                     	;# 
  1962  0002                     	;# 
  1963  0003                     	;# 
  1964  0004                     	;# 
  1965  0005                     	;# 
  1966  0006                     	;# 
  1967  0007                     	;# 
  1968  0008                     	;# 
  1969  0009                     	;# 
  1970  000A                     	;# 
  1971  000B                     	;# 
  1972  000C                     	;# 
  1973  000D                     	;# 
  1974  000E                     	;# 
  1975  0012                     	;# 
  1976  0013                     	;# 
  1977  0014                     	;# 
  1978  0018                     	;# 
  1979  0019                     	;# 
  1980  001A                     	;# 
  1981  008C                     	;# 
  1982  008C                     	;# 
  1983  008D                     	;# 
  1984  008E                     	;# 
  1985  008E                     	;# 
  1986  008F                     	;# 
  1987  0090                     	;# 
  1988  0090                     	;# 
  1989  0091                     	;# 
  1990  0092                     	;# 
  1991  0092                     	;# 
  1992  0093                     	;# 
  1993  0094                     	;# 
  1994  0094                     	;# 
  1995  0095                     	;# 
  1996  0096                     	;# 
  1997  0096                     	;# 
  1998  0097                     	;# 
  1999  0098                     	;# 
  2000  0099                     	;# 
  2001  009A                     	;# 
  2002  009B                     	;# 
  2003  009B                     	;# 
  2004  009C                     	;# 
  2005  009D                     	;# 
  2006  009D                     	;# 
  2007  009E                     	;# 
  2008  009F                     	;# 
  2009  010C                     	;# 
  2010  010C                     	;# 
  2011  010D                     	;# 
  2012  010E                     	;# 
  2013  010F                     	;# 
  2014  010F                     	;# 
  2015  0110                     	;# 
  2016  0111                     	;# 
  2017  0112                     	;# 
  2018  0113                     	;# 
  2019  0114                     	;# 
  2020  0115                     	;# 
  2021  0116                     	;# 
  2022  0117                     	;# 
  2023  0118                     	;# 
  2024  0119                     	;# 
  2025  0119                     	;# 
  2026  0119                     	;# 
  2027  011A                     	;# 
  2028  011A                     	;# 
  2029  011A                     	;# 
  2030  011B                     	;# 
  2031  011B                     	;# 
  2032  011B                     	;# 
  2033  011B                     	;# 
  2034  011B                     	;# 
  2035  011C                     	;# 
  2036  011C                     	;# 
  2037  011C                     	;# 
  2038  011D                     	;# 
  2039  011D                     	;# 
  2040  011D                     	;# 
  2041  011E                     	;# 
  2042  011E                     	;# 
  2043  011E                     	;# 
  2044  011F                     	;# 
  2045  011F                     	;# 
  2046  011F                     	;# 
  2047  011F                     	;# 
  2048  011F                     	;# 
  2049  018C                     	;# 
  2050  018D                     	;# 
  2051  018E                     	;# 
  2052  018F                     	;# 
  2053  0190                     	;# 
  2054  0191                     	;# 
  2055  0192                     	;# 
  2056  0196                     	;# 
  2057  0197                     	;# 
  2058  0198                     	;# 
  2059  0199                     	;# 
  2060  019A                     	;# 
  2061  019B                     	;# 
  2062  019C                     	;# 
  2063  020C                     	;# 
  2064  020D                     	;# 
  2065  020E                     	;# 
  2066  020E                     	;# 
  2067  020F                     	;# 
  2068  020F                     	;# 
  2069  0210                     	;# 
  2070  0210                     	;# 
  2071  0211                     	;# 
  2072  0211                     	;# 
  2073  0212                     	;# 
  2074  0213                     	;# 
  2075  0214                     	;# 
  2076  0214                     	;# 
  2077  0215                     	;# 
  2078  0215                     	;# 
  2079  0216                     	;# 
  2080  0216                     	;# 
  2081  0217                     	;# 
  2082  0217                     	;# 
  2083  0218                     	;# 
  2084  0219                     	;# 
  2085  021A                     	;# 
  2086  021A                     	;# 
  2087  021B                     	;# 
  2088  021B                     	;# 
  2089  021C                     	;# 
  2090  021C                     	;# 
  2091  021D                     	;# 
  2092  021D                     	;# 
  2093  021E                     	;# 
  2094  021F                     	;# 
  2095  028C                     	;# 
  2096  028C                     	;# 
  2097  028D                     	;# 
  2098  028D                     	;# 
  2099  028E                     	;# 
  2100  028F                     	;# 
  2101  0290                     	;# 
  2102  0291                     	;# 
  2103  0292                     	;# 
  2104  0292                     	;# 
  2105  0293                     	;# 
  2106  0293                     	;# 
  2107  0294                     	;# 
  2108  0295                     	;# 
  2109  0296                     	;# 
  2110  0297                     	;# 
  2111  0298                     	;# 
  2112  0298                     	;# 
  2113  0299                     	;# 
  2114  0299                     	;# 
  2115  029A                     	;# 
  2116  029B                     	;# 
  2117  029C                     	;# 
  2118  029D                     	;# 
  2119  029F                     	;# 
  2120  030C                     	;# 
  2121  030C                     	;# 
  2122  030D                     	;# 
  2123  030E                     	;# 
  2124  030F                     	;# 
  2125  0310                     	;# 
  2126  0310                     	;# 
  2127  0311                     	;# 
  2128  0312                     	;# 
  2129  0313                     	;# 
  2130  0314                     	;# 
  2131  0314                     	;# 
  2132  0315                     	;# 
  2133  0316                     	;# 
  2134  0317                     	;# 
  2135  0318                     	;# 
  2136  0318                     	;# 
  2137  0319                     	;# 
  2138  031A                     	;# 
  2139  031B                     	;# 
  2140  038C                     	;# 
  2141  038C                     	;# 
  2142  038D                     	;# 
  2143  038E                     	;# 
  2144  0390                     	;# 
  2145  0390                     	;# 
  2146  0391                     	;# 
  2147  0392                     	;# 
  2148  048C                     	;# 
  2149  048C                     	;# 
  2150  048D                     	;# 
  2151  048E                     	;# 
  2152  048F                     	;# 
  2153  048F                     	;# 
  2154  0490                     	;# 
  2155  0491                     	;# 
  2156  0492                     	;# 
  2157  0492                     	;# 
  2158  0493                     	;# 
  2159  0494                     	;# 
  2160  0495                     	;# 
  2161  0495                     	;# 
  2162  0496                     	;# 
  2163  0497                     	;# 
  2164  0498                     	;# 
  2165  0499                     	;# 
  2166  049A                     	;# 
  2167  049B                     	;# 
  2168  049C                     	;# 
  2169  049D                     	;# 
  2170  058C                     	;# 
  2171  058C                     	;# 
  2172  058D                     	;# 
  2173  058E                     	;# 
  2174  058F                     	;# 
  2175  058F                     	;# 
  2176  0590                     	;# 
  2177  0591                     	;# 
  2178  0592                     	;# 
  2179  0593                     	;# 
  2180  059C                     	;# 
  2181  059C                     	;# 
  2182  059D                     	;# 
  2183  059D                     	;# 
  2184  059E                     	;# 
  2185  059F                     	;# 
  2186  060C                     	;# 
  2187  060C                     	;# 
  2188  060D                     	;# 
  2189  060D                     	;# 
  2190  060E                     	;# 
  2191  060F                     	;# 
  2192  0610                     	;# 
  2193  0611                     	;# 
  2194  0612                     	;# 
  2195  0613                     	;# 
  2196  0614                     	;# 
  2197  0616                     	;# 
  2198  0616                     	;# 
  2199  0617                     	;# 
  2200  0617                     	;# 
  2201  0618                     	;# 
  2202  0619                     	;# 
  2203  061A                     	;# 
  2204  061B                     	;# 
  2205  061C                     	;# 
  2206  061D                     	;# 
  2207  061E                     	;# 
  2208  070C                     	;# 
  2209  070D                     	;# 
  2210  070E                     	;# 
  2211  070F                     	;# 
  2212  0710                     	;# 
  2213  0711                     	;# 
  2214  0712                     	;# 
  2215  0713                     	;# 
  2216  0714                     	;# 
  2217  0716                     	;# 
  2218  0717                     	;# 
  2219  0718                     	;# 
  2220  0719                     	;# 
  2221  071A                     	;# 
  2222  071B                     	;# 
  2223  071C                     	;# 
  2224  071D                     	;# 
  2225  071E                     	;# 
  2226  0796                     	;# 
  2227  0797                     	;# 
  2228  0798                     	;# 
  2229  0799                     	;# 
  2230  079A                     	;# 
  2231  079B                     	;# 
  2232  079C                     	;# 
  2233  079D                     	;# 
  2234  080C                     	;# 
  2235  080D                     	;# 
  2236  080E                     	;# 
  2237  080F                     	;# 
  2238  0810                     	;# 
  2239  0811                     	;# 
  2240  0812                     	;# 
  2241  0813                     	;# 
  2242  0814                     	;# 
  2243  081A                     	;# 
  2244  081A                     	;# 
  2245  081B                     	;# 
  2246  081C                     	;# 
  2247  081C                     	;# 
  2248  081D                     	;# 
  2249  081E                     	;# 
  2250  081F                     	;# 
  2251  088C                     	;# 
  2252  088D                     	;# 
  2253  088E                     	;# 
  2254  088F                     	;# 
  2255  0890                     	;# 
  2256  0891                     	;# 
  2257  0892                     	;# 
  2258  0893                     	;# 
  2259  0895                     	;# 
  2260  0896                     	;# 
  2261  0897                     	;# 
  2262  0898                     	;# 
  2263  0899                     	;# 
  2264  089A                     	;# 
  2265  089B                     	;# 
  2266  090C                     	;# 
  2267  090E                     	;# 
  2268  090F                     	;# 
  2269  091F                     	;# 
  2270  098F                     	;# 
  2271  098F                     	;# 
  2272  0990                     	;# 
  2273  0991                     	;# 
  2274  0992                     	;# 
  2275  0993                     	;# 
  2276  0994                     	;# 
  2277  0995                     	;# 
  2278  0996                     	;# 
  2279  0997                     	;# 
  2280  1E0F                     	;# 
  2281  1E10                     	;# 
  2282  1E11                     	;# 
  2283  1E12                     	;# 
  2284  1E13                     	;# 
  2285  1E14                     	;# 
  2286  1E15                     	;# 
  2287  1E16                     	;# 
  2288  1E17                     	;# 
  2289  1E18                     	;# 
  2290  1E19                     	;# 
  2291  1E1A                     	;# 
  2292  1E1B                     	;# 
  2293  1E1C                     	;# 
  2294  1E1D                     	;# 
  2295  1E1E                     	;# 
  2296  1E1F                     	;# 
  2297  1E20                     	;# 
  2298  1E21                     	;# 
  2299  1E22                     	;# 
  2300  1E23                     	;# 
  2301  1E24                     	;# 
  2302  1E25                     	;# 
  2303  1E26                     	;# 
  2304  1E27                     	;# 
  2305  1E28                     	;# 
  2306  1E29                     	;# 
  2307  1E2A                     	;# 
  2308  1E2B                     	;# 
  2309  1E2C                     	;# 
  2310  1E2D                     	;# 
  2311  1E2E                     	;# 
  2312  1E2F                     	;# 
  2313  1E30                     	;# 
  2314  1E31                     	;# 
  2315  1E32                     	;# 
  2316  1E33                     	;# 
  2317  1E34                     	;# 
  2318  1E35                     	;# 
  2319  1E36                     	;# 
  2320  1E37                     	;# 
  2321  1E8F                     	;# 
  2322  1E90                     	;# 
  2323  1E91                     	;# 
  2324  1E92                     	;# 
  2325  1E93                     	;# 
  2326  1E94                     	;# 
  2327  1E95                     	;# 
  2328  1E96                     	;# 
  2329  1E97                     	;# 
  2330  1E9C                     	;# 
  2331  1E9D                     	;# 
  2332  1E9E                     	;# 
  2333  1EA1                     	;# 
  2334  1EA2                     	;# 
  2335  1EA3                     	;# 
  2336  1EA4                     	;# 
  2337  1EA9                     	;# 
  2338  1EAA                     	;# 
  2339  1EB1                     	;# 
  2340  1EB2                     	;# 
  2341  1EB8                     	;# 
  2342  1EB9                     	;# 
  2343  1EBA                     	;# 
  2344  1EBB                     	;# 
  2345  1EBC                     	;# 
  2346  1EBD                     	;# 
  2347  1EBE                     	;# 
  2348  1EC3                     	;# 
  2349  1EC5                     	;# 
  2350  1EC6                     	;# 
  2351  1EC7                     	;# 
  2352  1EC8                     	;# 
  2353  1EC9                     	;# 
  2354  1ECA                     	;# 
  2355  1ECB                     	;# 
  2356  1ECB                     	;# 
  2357  1ECB                     	;# 
  2358  1ECC                     	;# 
  2359  1ECC                     	;# 
  2360  1ECC                     	;# 
  2361  1F10                     	;# 
  2362  1F11                     	;# 
  2363  1F12                     	;# 
  2364  1F14                     	;# 
  2365  1F15                     	;# 
  2366  1F1C                     	;# 
  2367  1F1D                     	;# 
  2368  1F1E                     	;# 
  2369  1F1F                     	;# 
  2370  1F20                     	;# 
  2371  1F21                     	;# 
  2372  1F22                     	;# 
  2373  1F23                     	;# 
  2374  1F24                     	;# 
  2375  1F25                     	;# 
  2376  1F26                     	;# 
  2377  1F27                     	;# 
  2378  1F38                     	;# 
  2379  1F39                     	;# 
  2380  1F3A                     	;# 
  2381  1F3B                     	;# 
  2382  1F3C                     	;# 
  2383  1F3D                     	;# 
  2384  1F3E                     	;# 
  2385  1F3F                     	;# 
  2386  1F43                     	;# 
  2387  1F44                     	;# 
  2388  1F45                     	;# 
  2389  1F46                     	;# 
  2390  1F47                     	;# 
  2391  1F48                     	;# 
  2392  1F49                     	;# 
  2393  1F4A                     	;# 
  2394  1F4E                     	;# 
  2395  1F4F                     	;# 
  2396  1F50                     	;# 
  2397  1F51                     	;# 
  2398  1F52                     	;# 
  2399  1F53                     	;# 
  2400  1F54                     	;# 
  2401  1F55                     	;# 
  2402  1FE4                     	;# 
  2403  1FE5                     	;# 
  2404  1FE6                     	;# 
  2405  1FE7                     	;# 
  2406  1FE8                     	;# 
  2407  1FE8                     	;# 
  2408  1FE9                     	;# 
  2409  1FEA                     	;# 
  2410  1FEB                     	;# 
  2411  1FED                     	;# 
  2412  1FEE                     	;# 
  2413  1FEF                     	;# 
  2414  0000                     	;# 
  2415  0001                     	;# 
  2416  0002                     	;# 
  2417  0003                     	;# 
  2418  0004                     	;# 
  2419  0005                     	;# 
  2420  0006                     	;# 
  2421  0007                     	;# 
  2422  0008                     	;# 
  2423  0009                     	;# 
  2424  000A                     	;# 
  2425  000B                     	;# 
  2426  000C                     	;# 
  2427  000D                     	;# 
  2428  000E                     	;# 
  2429  0012                     	;# 
  2430  0013                     	;# 
  2431  0014                     	;# 
  2432  0018                     	;# 
  2433  0019                     	;# 
  2434  001A                     	;# 
  2435  008C                     	;# 
  2436  008C                     	;# 
  2437  008D                     	;# 
  2438  008E                     	;# 
  2439  008E                     	;# 
  2440  008F                     	;# 
  2441  0090                     	;# 
  2442  0090                     	;# 
  2443  0091                     	;# 
  2444  0092                     	;# 
  2445  0092                     	;# 
  2446  0093                     	;# 
  2447  0094                     	;# 
  2448  0094                     	;# 
  2449  0095                     	;# 
  2450  0096                     	;# 
  2451  0096                     	;# 
  2452  0097                     	;# 
  2453  0098                     	;# 
  2454  0099                     	;# 
  2455  009A                     	;# 
  2456  009B                     	;# 
  2457  009B                     	;# 
  2458  009C                     	;# 
  2459  009D                     	;# 
  2460  009D                     	;# 
  2461  009E                     	;# 
  2462  009F                     	;# 
  2463  010C                     	;# 
  2464  010C                     	;# 
  2465  010D                     	;# 
  2466  010E                     	;# 
  2467  010F                     	;# 
  2468  010F                     	;# 
  2469  0110                     	;# 
  2470  0111                     	;# 
  2471  0112                     	;# 
  2472  0113                     	;# 
  2473  0114                     	;# 
  2474  0115                     	;# 
  2475  0116                     	;# 
  2476  0117                     	;# 
  2477  0118                     	;# 
  2478  0119                     	;# 
  2479  0119                     	;# 
  2480  0119                     	;# 
  2481  011A                     	;# 
  2482  011A                     	;# 
  2483  011A                     	;# 
  2484  011B                     	;# 
  2485  011B                     	;# 
  2486  011B                     	;# 
  2487  011B                     	;# 
  2488  011B                     	;# 
  2489  011C                     	;# 
  2490  011C                     	;# 
  2491  011C                     	;# 
  2492  011D                     	;# 
  2493  011D                     	;# 
  2494  011D                     	;# 
  2495  011E                     	;# 
  2496  011E                     	;# 
  2497  011E                     	;# 
  2498  011F                     	;# 
  2499  011F                     	;# 
  2500  011F                     	;# 
  2501  011F                     	;# 
  2502  011F                     	;# 
  2503  018C                     	;# 
  2504  018D                     	;# 
  2505  018E                     	;# 
  2506  018F                     	;# 
  2507  0190                     	;# 
  2508  0191                     	;# 
  2509  0192                     	;# 
  2510  0196                     	;# 
  2511  0197                     	;# 
  2512  0198                     	;# 
  2513  0199                     	;# 
  2514  019A                     	;# 
  2515  019B                     	;# 
  2516  019C                     	;# 
  2517  020C                     	;# 
  2518  020D                     	;# 
  2519  020E                     	;# 
  2520  020E                     	;# 
  2521  020F                     	;# 
  2522  020F                     	;# 
  2523  0210                     	;# 
  2524  0210                     	;# 
  2525  0211                     	;# 
  2526  0211                     	;# 
  2527  0212                     	;# 
  2528  0213                     	;# 
  2529  0214                     	;# 
  2530  0214                     	;# 
  2531  0215                     	;# 
  2532  0215                     	;# 
  2533  0216                     	;# 
  2534  0216                     	;# 
  2535  0217                     	;# 
  2536  0217                     	;# 
  2537  0218                     	;# 
  2538  0219                     	;# 
  2539  021A                     	;# 
  2540  021A                     	;# 
  2541  021B                     	;# 
  2542  021B                     	;# 
  2543  021C                     	;# 
  2544  021C                     	;# 
  2545  021D                     	;# 
  2546  021D                     	;# 
  2547  021E                     	;# 
  2548  021F                     	;# 
  2549  028C                     	;# 
  2550  028C                     	;# 
  2551  028D                     	;# 
  2552  028D                     	;# 
  2553  028E                     	;# 
  2554  028F                     	;# 
  2555  0290                     	;# 
  2556  0291                     	;# 
  2557  0292                     	;# 
  2558  0292                     	;# 
  2559  0293                     	;# 
  2560  0293                     	;# 
  2561  0294                     	;# 
  2562  0295                     	;# 
  2563  0296                     	;# 
  2564  0297                     	;# 
  2565  0298                     	;# 
  2566  0298                     	;# 
  2567  0299                     	;# 
  2568  0299                     	;# 
  2569  029A                     	;# 
  2570  029B                     	;# 
  2571  029C                     	;# 
  2572  029D                     	;# 
  2573  029F                     	;# 
  2574  030C                     	;# 
  2575  030C                     	;# 
  2576  030D                     	;# 
  2577  030E                     	;# 
  2578  030F                     	;# 
  2579  0310                     	;# 
  2580  0310                     	;# 
  2581  0311                     	;# 
  2582  0312                     	;# 
  2583  0313                     	;# 
  2584  0314                     	;# 
  2585  0314                     	;# 
  2586  0315                     	;# 
  2587  0316                     	;# 
  2588  0317                     	;# 
  2589  0318                     	;# 
  2590  0318                     	;# 
  2591  0319                     	;# 
  2592  031A                     	;# 
  2593  031B                     	;# 
  2594  038C                     	;# 
  2595  038C                     	;# 
  2596  038D                     	;# 
  2597  038E                     	;# 
  2598  0390                     	;# 
  2599  0390                     	;# 
  2600  0391                     	;# 
  2601  0392                     	;# 
  2602  048C                     	;# 
  2603  048C                     	;# 
  2604  048D                     	;# 
  2605  048E                     	;# 
  2606  048F                     	;# 
  2607  048F                     	;# 
  2608  0490                     	;# 
  2609  0491                     	;# 
  2610  0492                     	;# 
  2611  0492                     	;# 
  2612  0493                     	;# 
  2613  0494                     	;# 
  2614  0495                     	;# 
  2615  0495                     	;# 
  2616  0496                     	;# 
  2617  0497                     	;# 
  2618  0498                     	;# 
  2619  0499                     	;# 
  2620  049A                     	;# 
  2621  049B                     	;# 
  2622  049C                     	;# 
  2623  049D                     	;# 
  2624  058C                     	;# 
  2625  058C                     	;# 
  2626  058D                     	;# 
  2627  058E                     	;# 
  2628  058F                     	;# 
  2629  058F                     	;# 
  2630  0590                     	;# 
  2631  0591                     	;# 
  2632  0592                     	;# 
  2633  0593                     	;# 
  2634  059C                     	;# 
  2635  059C                     	;# 
  2636  059D                     	;# 
  2637  059D                     	;# 
  2638  059E                     	;# 
  2639  059F                     	;# 
  2640  060C                     	;# 
  2641  060C                     	;# 
  2642  060D                     	;# 
  2643  060D                     	;# 
  2644  060E                     	;# 
  2645  060F                     	;# 
  2646  0610                     	;# 
  2647  0611                     	;# 
  2648  0612                     	;# 
  2649  0613                     	;# 
  2650  0614                     	;# 
  2651  0616                     	;# 
  2652  0616                     	;# 
  2653  0617                     	;# 
  2654  0617                     	;# 
  2655  0618                     	;# 
  2656  0619                     	;# 
  2657  061A                     	;# 
  2658  061B                     	;# 
  2659  061C                     	;# 
  2660  061D                     	;# 
  2661  061E                     	;# 
  2662  070C                     	;# 
  2663  070D                     	;# 
  2664  070E                     	;# 
  2665  070F                     	;# 
  2666  0710                     	;# 
  2667  0711                     	;# 
  2668  0712                     	;# 
  2669  0713                     	;# 
  2670  0714                     	;# 
  2671  0716                     	;# 
  2672  0717                     	;# 
  2673  0718                     	;# 
  2674  0719                     	;# 
  2675  071A                     	;# 
  2676  071B                     	;# 
  2677  071C                     	;# 
  2678  071D                     	;# 
  2679  071E                     	;# 
  2680  0796                     	;# 
  2681  0797                     	;# 
  2682  0798                     	;# 
  2683  0799                     	;# 
  2684  079A                     	;# 
  2685  079B                     	;# 
  2686  079C                     	;# 
  2687  079D                     	;# 
  2688  080C                     	;# 
  2689  080D                     	;# 
  2690  080E                     	;# 
  2691  080F                     	;# 
  2692  0810                     	;# 
  2693  0811                     	;# 
  2694  0812                     	;# 
  2695  0813                     	;# 
  2696  0814                     	;# 
  2697  081A                     	;# 
  2698  081A                     	;# 
  2699  081B                     	;# 
  2700  081C                     	;# 
  2701  081C                     	;# 
  2702  081D                     	;# 
  2703  081E                     	;# 
  2704  081F                     	;# 
  2705  088C                     	;# 
  2706  088D                     	;# 
  2707  088E                     	;# 
  2708  088F                     	;# 
  2709  0890                     	;# 
  2710  0891                     	;# 
  2711  0892                     	;# 
  2712  0893                     	;# 
  2713  0895                     	;# 
  2714  0896                     	;# 
  2715  0897                     	;# 
  2716  0898                     	;# 
  2717  0899                     	;# 
  2718  089A                     	;# 
  2719  089B                     	;# 
  2720  090C                     	;# 
  2721  090E                     	;# 
  2722  090F                     	;# 
  2723  091F                     	;# 
  2724  098F                     	;# 
  2725  098F                     	;# 
  2726  0990                     	;# 
  2727  0991                     	;# 
  2728  0992                     	;# 
  2729  0993                     	;# 
  2730  0994                     	;# 
  2731  0995                     	;# 
  2732  0996                     	;# 
  2733  0997                     	;# 
  2734  1E0F                     	;# 
  2735  1E10                     	;# 
  2736  1E11                     	;# 
  2737  1E12                     	;# 
  2738  1E13                     	;# 
  2739  1E14                     	;# 
  2740  1E15                     	;# 
  2741  1E16                     	;# 
  2742  1E17                     	;# 
  2743  1E18                     	;# 
  2744  1E19                     	;# 
  2745  1E1A                     	;# 
  2746  1E1B                     	;# 
  2747  1E1C                     	;# 
  2748  1E1D                     	;# 
  2749  1E1E                     	;# 
  2750  1E1F                     	;# 
  2751  1E20                     	;# 
  2752  1E21                     	;# 
  2753  1E22                     	;# 
  2754  1E23                     	;# 
  2755  1E24                     	;# 
  2756  1E25                     	;# 
  2757  1E26                     	;# 
  2758  1E27                     	;# 
  2759  1E28                     	;# 
  2760  1E29                     	;# 
  2761  1E2A                     	;# 
  2762  1E2B                     	;# 
  2763  1E2C                     	;# 
  2764  1E2D                     	;# 
  2765  1E2E                     	;# 
  2766  1E2F                     	;# 
  2767  1E30                     	;# 
  2768  1E31                     	;# 
  2769  1E32                     	;# 
  2770  1E33                     	;# 
  2771  1E34                     	;# 
  2772  1E35                     	;# 
  2773  1E36                     	;# 
  2774  1E37                     	;# 
  2775  1E8F                     	;# 
  2776  1E90                     	;# 
  2777  1E91                     	;# 
  2778  1E92                     	;# 
  2779  1E93                     	;# 
  2780  1E94                     	;# 
  2781  1E95                     	;# 
  2782  1E96                     	;# 
  2783  1E97                     	;# 
  2784  1E9C                     	;# 
  2785  1E9D                     	;# 
  2786  1E9E                     	;# 
  2787  1EA1                     	;# 
  2788  1EA2                     	;# 
  2789  1EA3                     	;# 
  2790  1EA4                     	;# 
  2791  1EA9                     	;# 
  2792  1EAA                     	;# 
  2793  1EB1                     	;# 
  2794  1EB2                     	;# 
  2795  1EB8                     	;# 
  2796  1EB9                     	;# 
  2797  1EBA                     	;# 
  2798  1EBB                     	;# 
  2799  1EBC                     	;# 
  2800  1EBD                     	;# 
  2801  1EBE                     	;# 
  2802  1EC3                     	;# 
  2803  1EC5                     	;# 
  2804  1EC6                     	;# 
  2805  1EC7                     	;# 
  2806  1EC8                     	;# 
  2807  1EC9                     	;# 
  2808  1ECA                     	;# 
  2809  1ECB                     	;# 
  2810  1ECB                     	;# 
  2811  1ECB                     	;# 
  2812  1ECC                     	;# 
  2813  1ECC                     	;# 
  2814  1ECC                     	;# 
  2815  1F10                     	;# 
  2816  1F11                     	;# 
  2817  1F12                     	;# 
  2818  1F14                     	;# 
  2819  1F15                     	;# 
  2820  1F1C                     	;# 
  2821  1F1D                     	;# 
  2822  1F1E                     	;# 
  2823  1F1F                     	;# 
  2824  1F20                     	;# 
  2825  1F21                     	;# 
  2826  1F22                     	;# 
  2827  1F23                     	;# 
  2828  1F24                     	;# 
  2829  1F25                     	;# 
  2830  1F26                     	;# 
  2831  1F27                     	;# 
  2832  1F38                     	;# 
  2833  1F39                     	;# 
  2834  1F3A                     	;# 
  2835  1F3B                     	;# 
  2836  1F3C                     	;# 
  2837  1F3D                     	;# 
  2838  1F3E                     	;# 
  2839  1F3F                     	;# 
  2840  1F43                     	;# 
  2841  1F44                     	;# 
  2842  1F45                     	;# 
  2843  1F46                     	;# 
  2844  1F47                     	;# 
  2845  1F48                     	;# 
  2846  1F49                     	;# 
  2847  1F4A                     	;# 
  2848  1F4E                     	;# 
  2849  1F4F                     	;# 
  2850  1F50                     	;# 
  2851  1F51                     	;# 
  2852  1F52                     	;# 
  2853  1F53                     	;# 
  2854  1F54                     	;# 
  2855  1F55                     	;# 
  2856  1FE4                     	;# 
  2857  1FE5                     	;# 
  2858  1FE6                     	;# 
  2859  1FE7                     	;# 
  2860  1FE8                     	;# 
  2861  1FE8                     	;# 
  2862  1FE9                     	;# 
  2863  1FEA                     	;# 
  2864  1FEB                     	;# 
  2865  1FED                     	;# 
  2866  1FEE                     	;# 
  2867  1FEF                     	;# 
  2868  0000                     	;# 
  2869  0001                     	;# 
  2870  0002                     	;# 
  2871  0003                     	;# 
  2872  0004                     	;# 
  2873  0005                     	;# 
  2874  0006                     	;# 
  2875  0007                     	;# 
  2876  0008                     	;# 
  2877  0009                     	;# 
  2878  000A                     	;# 
  2879  000B                     	;# 
  2880  000C                     	;# 
  2881  000D                     	;# 
  2882  000E                     	;# 
  2883  0012                     	;# 
  2884  0013                     	;# 
  2885  0014                     	;# 
  2886  0018                     	;# 
  2887  0019                     	;# 
  2888  001A                     	;# 
  2889  008C                     	;# 
  2890  008C                     	;# 
  2891  008D                     	;# 
  2892  008E                     	;# 
  2893  008E                     	;# 
  2894  008F                     	;# 
  2895  0090                     	;# 
  2896  0090                     	;# 
  2897  0091                     	;# 
  2898  0092                     	;# 
  2899  0092                     	;# 
  2900  0093                     	;# 
  2901  0094                     	;# 
  2902  0094                     	;# 
  2903  0095                     	;# 
  2904  0096                     	;# 
  2905  0096                     	;# 
  2906  0097                     	;# 
  2907  0098                     	;# 
  2908  0099                     	;# 
  2909  009A                     	;# 
  2910  009B                     	;# 
  2911  009B                     	;# 
  2912  009C                     	;# 
  2913  009D                     	;# 
  2914  009D                     	;# 
  2915  009E                     	;# 
  2916  009F                     	;# 
  2917  010C                     	;# 
  2918  010C                     	;# 
  2919  010D                     	;# 
  2920  010E                     	;# 
  2921  010F                     	;# 
  2922  010F                     	;# 
  2923  0110                     	;# 
  2924  0111                     	;# 
  2925  0112                     	;# 
  2926  0113                     	;# 
  2927  0114                     	;# 
  2928  0115                     	;# 
  2929  0116                     	;# 
  2930  0117                     	;# 
  2931  0118                     	;# 
  2932  0119                     	;# 
  2933  0119                     	;# 
  2934  0119                     	;# 
  2935  011A                     	;# 
  2936  011A                     	;# 
  2937  011A                     	;# 
  2938  011B                     	;# 
  2939  011B                     	;# 
  2940  011B                     	;# 
  2941  011B                     	;# 
  2942  011B                     	;# 
  2943  011C                     	;# 
  2944  011C                     	;# 
  2945  011C                     	;# 
  2946  011D                     	;# 
  2947  011D                     	;# 
  2948  011D                     	;# 
  2949  011E                     	;# 
  2950  011E                     	;# 
  2951  011E                     	;# 
  2952  011F                     	;# 
  2953  011F                     	;# 
  2954  011F                     	;# 
  2955  011F                     	;# 
  2956  011F                     	;# 
  2957  018C                     	;# 
  2958  018D                     	;# 
  2959  018E                     	;# 
  2960  018F                     	;# 
  2961  0190                     	;# 
  2962  0191                     	;# 
  2963  0192                     	;# 
  2964  0196                     	;# 
  2965  0197                     	;# 
  2966  0198                     	;# 
  2967  0199                     	;# 
  2968  019A                     	;# 
  2969  019B                     	;# 
  2970  019C                     	;# 
  2971  020C                     	;# 
  2972  020D                     	;# 
  2973  020E                     	;# 
  2974  020E                     	;# 
  2975  020F                     	;# 
  2976  020F                     	;# 
  2977  0210                     	;# 
  2978  0210                     	;# 
  2979  0211                     	;# 
  2980  0211                     	;# 
  2981  0212                     	;# 
  2982  0213                     	;# 
  2983  0214                     	;# 
  2984  0214                     	;# 
  2985  0215                     	;# 
  2986  0215                     	;# 
  2987  0216                     	;# 
  2988  0216                     	;# 
  2989  0217                     	;# 
  2990  0217                     	;# 
  2991  0218                     	;# 
  2992  0219                     	;# 
  2993  021A                     	;# 
  2994  021A                     	;# 
  2995  021B                     	;# 
  2996  021B                     	;# 
  2997  021C                     	;# 
  2998  021C                     	;# 
  2999  021D                     	;# 
  3000  021D                     	;# 
  3001  021E                     	;# 
  3002  021F                     	;# 
  3003  028C                     	;# 
  3004  028C                     	;# 
  3005  028D                     	;# 
  3006  028D                     	;# 
  3007  028E                     	;# 
  3008  028F                     	;# 
  3009  0290                     	;# 
  3010  0291                     	;# 
  3011  0292                     	;# 
  3012  0292                     	;# 
  3013  0293                     	;# 
  3014  0293                     	;# 
  3015  0294                     	;# 
  3016  0295                     	;# 
  3017  0296                     	;# 
  3018  0297                     	;# 
  3019  0298                     	;# 
  3020  0298                     	;# 
  3021  0299                     	;# 
  3022  0299                     	;# 
  3023  029A                     	;# 
  3024  029B                     	;# 
  3025  029C                     	;# 
  3026  029D                     	;# 
  3027  029F                     	;# 
  3028  030C                     	;# 
  3029  030C                     	;# 
  3030  030D                     	;# 
  3031  030E                     	;# 
  3032  030F                     	;# 
  3033  0310                     	;# 
  3034  0310                     	;# 
  3035  0311                     	;# 
  3036  0312                     	;# 
  3037  0313                     	;# 
  3038  0314                     	;# 
  3039  0314                     	;# 
  3040  0315                     	;# 
  3041  0316                     	;# 
  3042  0317                     	;# 
  3043  0318                     	;# 
  3044  0318                     	;# 
  3045  0319                     	;# 
  3046  031A                     	;# 
  3047  031B                     	;# 
  3048  038C                     	;# 
  3049  038C                     	;# 
  3050  038D                     	;# 
  3051  038E                     	;# 
  3052  0390                     	;# 
  3053  0390                     	;# 
  3054  0391                     	;# 
  3055  0392                     	;# 
  3056  048C                     	;# 
  3057  048C                     	;# 
  3058  048D                     	;# 
  3059  048E                     	;# 
  3060  048F                     	;# 
  3061  048F                     	;# 
  3062  0490                     	;# 
  3063  0491                     	;# 
  3064  0492                     	;# 
  3065  0492                     	;# 
  3066  0493                     	;# 
  3067  0494                     	;# 
  3068  0495                     	;# 
  3069  0495                     	;# 
  3070  0496                     	;# 
  3071  0497                     	;# 
  3072  0498                     	;# 
  3073  0499                     	;# 
  3074  049A                     	;# 
  3075  049B                     	;# 
  3076  049C                     	;# 
  3077  049D                     	;# 
  3078  058C                     	;# 
  3079  058C                     	;# 
  3080  058D                     	;# 
  3081  058E                     	;# 
  3082  058F                     	;# 
  3083  058F                     	;# 
  3084  0590                     	;# 
  3085  0591                     	;# 
  3086  0592                     	;# 
  3087  0593                     	;# 
  3088  059C                     	;# 
  3089  059C                     	;# 
  3090  059D                     	;# 
  3091  059D                     	;# 
  3092  059E                     	;# 
  3093  059F                     	;# 
  3094  060C                     	;# 
  3095  060C                     	;# 
  3096  060D                     	;# 
  3097  060D                     	;# 
  3098  060E                     	;# 
  3099  060F                     	;# 
  3100  0610                     	;# 
  3101  0611                     	;# 
  3102  0612                     	;# 
  3103  0613                     	;# 
  3104  0614                     	;# 
  3105  0616                     	;# 
  3106  0616                     	;# 
  3107  0617                     	;# 
  3108  0617                     	;# 
  3109  0618                     	;# 
  3110  0619                     	;# 
  3111  061A                     	;# 
  3112  061B                     	;# 
  3113  061C                     	;# 
  3114  061D                     	;# 
  3115  061E                     	;# 
  3116  070C                     	;# 
  3117  070D                     	;# 
  3118  070E                     	;# 
  3119  070F                     	;# 
  3120  0710                     	;# 
  3121  0711                     	;# 
  3122  0712                     	;# 
  3123  0713                     	;# 
  3124  0714                     	;# 
  3125  0716                     	;# 
  3126  0717                     	;# 
  3127  0718                     	;# 
  3128  0719                     	;# 
  3129  071A                     	;# 
  3130  071B                     	;# 
  3131  071C                     	;# 
  3132  071D                     	;# 
  3133  071E                     	;# 
  3134  0796                     	;# 
  3135  0797                     	;# 
  3136  0798                     	;# 
  3137  0799                     	;# 
  3138  079A                     	;# 
  3139  079B                     	;# 
  3140  079C                     	;# 
  3141  079D                     	;# 
  3142  080C                     	;# 
  3143  080D                     	;# 
  3144  080E                     	;# 
  3145  080F                     	;# 
  3146  0810                     	;# 
  3147  0811                     	;# 
  3148  0812                     	;# 
  3149  0813                     	;# 
  3150  0814                     	;# 
  3151  081A                     	;# 
  3152  081A                     	;# 
  3153  081B                     	;# 
  3154  081C                     	;# 
  3155  081C                     	;# 
  3156  081D                     	;# 
  3157  081E                     	;# 
  3158  081F                     	;# 
  3159  088C                     	;# 
  3160  088D                     	;# 
  3161  088E                     	;# 
  3162  088F                     	;# 
  3163  0890                     	;# 
  3164  0891                     	;# 
  3165  0892                     	;# 
  3166  0893                     	;# 
  3167  0895                     	;# 
  3168  0896                     	;# 
  3169  0897                     	;# 
  3170  0898                     	;# 
  3171  0899                     	;# 
  3172  089A                     	;# 
  3173  089B                     	;# 
  3174  090C                     	;# 
  3175  090E                     	;# 
  3176  090F                     	;# 
  3177  091F                     	;# 
  3178  098F                     	;# 
  3179  098F                     	;# 
  3180  0990                     	;# 
  3181  0991                     	;# 
  3182  0992                     	;# 
  3183  0993                     	;# 
  3184  0994                     	;# 
  3185  0995                     	;# 
  3186  0996                     	;# 
  3187  0997                     	;# 
  3188  1E0F                     	;# 
  3189  1E10                     	;# 
  3190  1E11                     	;# 
  3191  1E12                     	;# 
  3192  1E13                     	;# 
  3193  1E14                     	;# 
  3194  1E15                     	;# 
  3195  1E16                     	;# 
  3196  1E17                     	;# 
  3197  1E18                     	;# 
  3198  1E19                     	;# 
  3199  1E1A                     	;# 
  3200  1E1B                     	;# 
  3201  1E1C                     	;# 
  3202  1E1D                     	;# 
  3203  1E1E                     	;# 
  3204  1E1F                     	;# 
  3205  1E20                     	;# 
  3206  1E21                     	;# 
  3207  1E22                     	;# 
  3208  1E23                     	;# 
  3209  1E24                     	;# 
  3210  1E25                     	;# 
  3211  1E26                     	;# 
  3212  1E27                     	;# 
  3213  1E28                     	;# 
  3214  1E29                     	;# 
  3215  1E2A                     	;# 
  3216  1E2B                     	;# 
  3217  1E2C                     	;# 
  3218  1E2D                     	;# 
  3219  1E2E                     	;# 
  3220  1E2F                     	;# 
  3221  1E30                     	;# 
  3222  1E31                     	;# 
  3223  1E32                     	;# 
  3224  1E33                     	;# 
  3225  1E34                     	;# 
  3226  1E35                     	;# 
  3227  1E36                     	;# 
  3228  1E37                     	;# 
  3229  1E8F                     	;# 
  3230  1E90                     	;# 
  3231  1E91                     	;# 
  3232  1E92                     	;# 
  3233  1E93                     	;# 
  3234  1E94                     	;# 
  3235  1E95                     	;# 
  3236  1E96                     	;# 
  3237  1E97                     	;# 
  3238  1E9C                     	;# 
  3239  1E9D                     	;# 
  3240  1E9E                     	;# 
  3241  1EA1                     	;# 
  3242  1EA2                     	;# 
  3243  1EA3                     	;# 
  3244  1EA4                     	;# 
  3245  1EA9                     	;# 
  3246  1EAA                     	;# 
  3247  1EB1                     	;# 
  3248  1EB2                     	;# 
  3249  1EB8                     	;# 
  3250  1EB9                     	;# 
  3251  1EBA                     	;# 
  3252  1EBB                     	;# 
  3253  1EBC                     	;# 
  3254  1EBD                     	;# 
  3255  1EBE                     	;# 
  3256  1EC3                     	;# 
  3257  1EC5                     	;# 
  3258  1EC6                     	;# 
  3259  1EC7                     	;# 
  3260  1EC8                     	;# 
  3261  1EC9                     	;# 
  3262  1ECA                     	;# 
  3263  1ECB                     	;# 
  3264  1ECB                     	;# 
  3265  1ECB                     	;# 
  3266  1ECC                     	;# 
  3267  1ECC                     	;# 
  3268  1ECC                     	;# 
  3269  1F10                     	;# 
  3270  1F11                     	;# 
  3271  1F12                     	;# 
  3272  1F14                     	;# 
  3273  1F15                     	;# 
  3274  1F1C                     	;# 
  3275  1F1D                     	;# 
  3276  1F1E                     	;# 
  3277  1F1F                     	;# 
  3278  1F20                     	;# 
  3279  1F21                     	;# 
  3280  1F22                     	;# 
  3281  1F23                     	;# 
  3282  1F24                     	;# 
  3283  1F25                     	;# 
  3284  1F26                     	;# 
  3285  1F27                     	;# 
  3286  1F38                     	;# 
  3287  1F39                     	;# 
  3288  1F3A                     	;# 
  3289  1F3B                     	;# 
  3290  1F3C                     	;# 
  3291  1F3D                     	;# 
  3292  1F3E                     	;# 
  3293  1F3F                     	;# 
  3294  1F43                     	;# 
  3295  1F44                     	;# 
  3296  1F45                     	;# 
  3297  1F46                     	;# 
  3298  1F47                     	;# 
  3299  1F48                     	;# 
  3300  1F49                     	;# 
  3301  1F4A                     	;# 
  3302  1F4E                     	;# 
  3303  1F4F                     	;# 
  3304  1F50                     	;# 
  3305  1F51                     	;# 
  3306  1F52                     	;# 
  3307  1F53                     	;# 
  3308  1F54                     	;# 
  3309  1F55                     	;# 
  3310  1FE4                     	;# 
  3311  1FE5                     	;# 
  3312  1FE6                     	;# 
  3313  1FE7                     	;# 
  3314  1FE8                     	;# 
  3315  1FE8                     	;# 
  3316  1FE9                     	;# 
  3317  1FEA                     	;# 
  3318  1FEB                     	;# 
  3319  1FED                     	;# 
  3320  1FEE                     	;# 
  3321  1FEF                     	;# 
  3322  0000                     	;# 
  3323  0001                     	;# 
  3324  0002                     	;# 
  3325  0003                     	;# 
  3326  0004                     	;# 
  3327  0005                     	;# 
  3328  0006                     	;# 
  3329  0007                     	;# 
  3330  0008                     	;# 
  3331  0009                     	;# 
  3332  000A                     	;# 
  3333  000B                     	;# 
  3334  000C                     	;# 
  3335  000D                     	;# 
  3336  000E                     	;# 
  3337  0012                     	;# 
  3338  0013                     	;# 
  3339  0014                     	;# 
  3340  0018                     	;# 
  3341  0019                     	;# 
  3342  001A                     	;# 
  3343  008C                     	;# 
  3344  008C                     	;# 
  3345  008D                     	;# 
  3346  008E                     	;# 
  3347  008E                     	;# 
  3348  008F                     	;# 
  3349  0090                     	;# 
  3350  0090                     	;# 
  3351  0091                     	;# 
  3352  0092                     	;# 
  3353  0092                     	;# 
  3354  0093                     	;# 
  3355  0094                     	;# 
  3356  0094                     	;# 
  3357  0095                     	;# 
  3358  0096                     	;# 
  3359  0096                     	;# 
  3360  0097                     	;# 
  3361  0098                     	;# 
  3362  0099                     	;# 
  3363  009A                     	;# 
  3364  009B                     	;# 
  3365  009B                     	;# 
  3366  009C                     	;# 
  3367  009D                     	;# 
  3368  009D                     	;# 
  3369  009E                     	;# 
  3370  009F                     	;# 
  3371  010C                     	;# 
  3372  010C                     	;# 
  3373  010D                     	;# 
  3374  010E                     	;# 
  3375  010F                     	;# 
  3376  010F                     	;# 
  3377  0110                     	;# 
  3378  0111                     	;# 
  3379  0112                     	;# 
  3380  0113                     	;# 
  3381  0114                     	;# 
  3382  0115                     	;# 
  3383  0116                     	;# 
  3384  0117                     	;# 
  3385  0118                     	;# 
  3386  0119                     	;# 
  3387  0119                     	;# 
  3388  0119                     	;# 
  3389  011A                     	;# 
  3390  011A                     	;# 
  3391  011A                     	;# 
  3392  011B                     	;# 
  3393  011B                     	;# 
  3394  011B                     	;# 
  3395  011B                     	;# 
  3396  011B                     	;# 
  3397  011C                     	;# 
  3398  011C                     	;# 
  3399  011C                     	;# 
  3400  011D                     	;# 
  3401  011D                     	;# 
  3402  011D                     	;# 
  3403  011E                     	;# 
  3404  011E                     	;# 
  3405  011E                     	;# 
  3406  011F                     	;# 
  3407  011F                     	;# 
  3408  011F                     	;# 
  3409  011F                     	;# 
  3410  011F                     	;# 
  3411  018C                     	;# 
  3412  018D                     	;# 
  3413  018E                     	;# 
  3414  018F                     	;# 
  3415  0190                     	;# 
  3416  0191                     	;# 
  3417  0192                     	;# 
  3418  0196                     	;# 
  3419  0197                     	;# 
  3420  0198                     	;# 
  3421  0199                     	;# 
  3422  019A                     	;# 
  3423  019B                     	;# 
  3424  019C                     	;# 
  3425  020C                     	;# 
  3426  020D                     	;# 
  3427  020E                     	;# 
  3428  020E                     	;# 
  3429  020F                     	;# 
  3430  020F                     	;# 
  3431  0210                     	;# 
  3432  0210                     	;# 
  3433  0211                     	;# 
  3434  0211                     	;# 
  3435  0212                     	;# 
  3436  0213                     	;# 
  3437  0214                     	;# 
  3438  0214                     	;# 
  3439  0215                     	;# 
  3440  0215                     	;# 
  3441  0216                     	;# 
  3442  0216                     	;# 
  3443  0217                     	;# 
  3444  0217                     	;# 
  3445  0218                     	;# 
  3446  0219                     	;# 
  3447  021A                     	;# 
  3448  021A                     	;# 
  3449  021B                     	;# 
  3450  021B                     	;# 
  3451  021C                     	;# 
  3452  021C                     	;# 
  3453  021D                     	;# 
  3454  021D                     	;# 
  3455  021E                     	;# 
  3456  021F                     	;# 
  3457  028C                     	;# 
  3458  028C                     	;# 
  3459  028D                     	;# 
  3460  028D                     	;# 
  3461  028E                     	;# 
  3462  028F                     	;# 
  3463  0290                     	;# 
  3464  0291                     	;# 
  3465  0292                     	;# 
  3466  0292                     	;# 
  3467  0293                     	;# 
  3468  0293                     	;# 
  3469  0294                     	;# 
  3470  0295                     	;# 
  3471  0296                     	;# 
  3472  0297                     	;# 
  3473  0298                     	;# 
  3474  0298                     	;# 
  3475  0299                     	;# 
  3476  0299                     	;# 
  3477  029A                     	;# 
  3478  029B                     	;# 
  3479  029C                     	;# 
  3480  029D                     	;# 
  3481  029F                     	;# 
  3482  030C                     	;# 
  3483  030C                     	;# 
  3484  030D                     	;# 
  3485  030E                     	;# 
  3486  030F                     	;# 
  3487  0310                     	;# 
  3488  0310                     	;# 
  3489  0311                     	;# 
  3490  0312                     	;# 
  3491  0313                     	;# 
  3492  0314                     	;# 
  3493  0314                     	;# 
  3494  0315                     	;# 
  3495  0316                     	;# 
  3496  0317                     	;# 
  3497  0318                     	;# 
  3498  0318                     	;# 
  3499  0319                     	;# 
  3500  031A                     	;# 
  3501  031B                     	;# 
  3502  038C                     	;# 
  3503  038C                     	;# 
  3504  038D                     	;# 
  3505  038E                     	;# 
  3506  0390                     	;# 
  3507  0390                     	;# 
  3508  0391                     	;# 
  3509  0392                     	;# 
  3510  048C                     	;# 
  3511  048C                     	;# 
  3512  048D                     	;# 
  3513  048E                     	;# 
  3514  048F                     	;# 
  3515  048F                     	;# 
  3516  0490                     	;# 
  3517  0491                     	;# 
  3518  0492                     	;# 
  3519  0492                     	;# 
  3520  0493                     	;# 
  3521  0494                     	;# 
  3522  0495                     	;# 
  3523  0495                     	;# 
  3524  0496                     	;# 
  3525  0497                     	;# 
  3526  0498                     	;# 
  3527  0499                     	;# 
  3528  049A                     	;# 
  3529  049B                     	;# 
  3530  049C                     	;# 
  3531  049D                     	;# 
  3532  058C                     	;# 
  3533  058C                     	;# 
  3534  058D                     	;# 
  3535  058E                     	;# 
  3536  058F                     	;# 
  3537  058F                     	;# 
  3538  0590                     	;# 
  3539  0591                     	;# 
  3540  0592                     	;# 
  3541  0593                     	;# 
  3542  059C                     	;# 
  3543  059C                     	;# 
  3544  059D                     	;# 
  3545  059D                     	;# 
  3546  059E                     	;# 
  3547  059F                     	;# 
  3548  060C                     	;# 
  3549  060C                     	;# 
  3550  060D                     	;# 
  3551  060D                     	;# 
  3552  060E                     	;# 
  3553  060F                     	;# 
  3554  0610                     	;# 
  3555  0611                     	;# 
  3556  0612                     	;# 
  3557  0613                     	;# 
  3558  0614                     	;# 
  3559  0616                     	;# 
  3560  0616                     	;# 
  3561  0617                     	;# 
  3562  0617                     	;# 
  3563  0618                     	;# 
  3564  0619                     	;# 
  3565  061A                     	;# 
  3566  061B                     	;# 
  3567  061C                     	;# 
  3568  061D                     	;# 
  3569  061E                     	;# 
  3570  070C                     	;# 
  3571  070D                     	;# 
  3572  070E                     	;# 
  3573  070F                     	;# 
  3574  0710                     	;# 
  3575  0711                     	;# 
  3576  0712                     	;# 
  3577  0713                     	;# 
  3578  0714                     	;# 
  3579  0716                     	;# 
  3580  0717                     	;# 
  3581  0718                     	;# 
  3582  0719                     	;# 
  3583  071A                     	;# 
  3584  071B                     	;# 
  3585  071C                     	;# 
  3586  071D                     	;# 
  3587  071E                     	;# 
  3588  0796                     	;# 
  3589  0797                     	;# 
  3590  0798                     	;# 
  3591  0799                     	;# 
  3592  079A                     	;# 
  3593  079B                     	;# 
  3594  079C                     	;# 
  3595  079D                     	;# 
  3596  080C                     	;# 
  3597  080D                     	;# 
  3598  080E                     	;# 
  3599  080F                     	;# 
  3600  0810                     	;# 
  3601  0811                     	;# 
  3602  0812                     	;# 
  3603  0813                     	;# 
  3604  0814                     	;# 
  3605  081A                     	;# 
  3606  081A                     	;# 
  3607  081B                     	;# 
  3608  081C                     	;# 
  3609  081C                     	;# 
  3610  081D                     	;# 
  3611  081E                     	;# 
  3612  081F                     	;# 
  3613  088C                     	;# 
  3614  088D                     	;# 
  3615  088E                     	;# 
  3616  088F                     	;# 
  3617  0890                     	;# 
  3618  0891                     	;# 
  3619  0892                     	;# 
  3620  0893                     	;# 
  3621  0895                     	;# 
  3622  0896                     	;# 
  3623  0897                     	;# 
  3624  0898                     	;# 
  3625  0899                     	;# 
  3626  089A                     	;# 
  3627  089B                     	;# 
  3628  090C                     	;# 
  3629  090E                     	;# 
  3630  090F                     	;# 
  3631  091F                     	;# 
  3632  098F                     	;# 
  3633  098F                     	;# 
  3634  0990                     	;# 
  3635  0991                     	;# 
  3636  0992                     	;# 
  3637  0993                     	;# 
  3638  0994                     	;# 
  3639  0995                     	;# 
  3640  0996                     	;# 
  3641  0997                     	;# 
  3642  1E0F                     	;# 
  3643  1E10                     	;# 
  3644  1E11                     	;# 
  3645  1E12                     	;# 
  3646  1E13                     	;# 
  3647  1E14                     	;# 
  3648  1E15                     	;# 
  3649  1E16                     	;# 
  3650  1E17                     	;# 
  3651  1E18                     	;# 
  3652  1E19                     	;# 
  3653  1E1A                     	;# 
  3654  1E1B                     	;# 
  3655  1E1C                     	;# 
  3656  1E1D                     	;# 
  3657  1E1E                     	;# 
  3658  1E1F                     	;# 
  3659  1E20                     	;# 
  3660  1E21                     	;# 
  3661  1E22                     	;# 
  3662  1E23                     	;# 
  3663  1E24                     	;# 
  3664  1E25                     	;# 
  3665  1E26                     	;# 
  3666  1E27                     	;# 
  3667  1E28                     	;# 
  3668  1E29                     	;# 
  3669  1E2A                     	;# 
  3670  1E2B                     	;# 
  3671  1E2C                     	;# 
  3672  1E2D                     	;# 
  3673  1E2E                     	;# 
  3674  1E2F                     	;# 
  3675  1E30                     	;# 
  3676  1E31                     	;# 
  3677  1E32                     	;# 
  3678  1E33                     	;# 
  3679  1E34                     	;# 
  3680  1E35                     	;# 
  3681  1E36                     	;# 
  3682  1E37                     	;# 
  3683  1E8F                     	;# 
  3684  1E90                     	;# 
  3685  1E91                     	;# 
  3686  1E92                     	;# 
  3687  1E93                     	;# 
  3688  1E94                     	;# 
  3689  1E95                     	;# 
  3690  1E96                     	;# 
  3691  1E97                     	;# 
  3692  1E9C                     	;# 
  3693  1E9D                     	;# 
  3694  1E9E                     	;# 
  3695  1EA1                     	;# 
  3696  1EA2                     	;# 
  3697  1EA3                     	;# 
  3698  1EA4                     	;# 
  3699  1EA9                     	;# 
  3700  1EAA                     	;# 
  3701  1EB1                     	;# 
  3702  1EB2                     	;# 
  3703  1EB8                     	;# 
  3704  1EB9                     	;# 
  3705  1EBA                     	;# 
  3706  1EBB                     	;# 
  3707  1EBC                     	;# 
  3708  1EBD                     	;# 
  3709  1EBE                     	;# 
  3710  1EC3                     	;# 
  3711  1EC5                     	;# 
  3712  1EC6                     	;# 
  3713  1EC7                     	;# 
  3714  1EC8                     	;# 
  3715  1EC9                     	;# 
  3716  1ECA                     	;# 
  3717  1ECB                     	;# 
  3718  1ECB                     	;# 
  3719  1ECB                     	;# 
  3720  1ECC                     	;# 
  3721  1ECC                     	;# 
  3722  1ECC                     	;# 
  3723  1F10                     	;# 
  3724  1F11                     	;# 
  3725  1F12                     	;# 
  3726  1F14                     	;# 
  3727  1F15                     	;# 
  3728  1F1C                     	;# 
  3729  1F1D                     	;# 
  3730  1F1E                     	;# 
  3731  1F1F                     	;# 
  3732  1F20                     	;# 
  3733  1F21                     	;# 
  3734  1F22                     	;# 
  3735  1F23                     	;# 
  3736  1F24                     	;# 
  3737  1F25                     	;# 
  3738  1F26                     	;# 
  3739  1F27                     	;# 
  3740  1F38                     	;# 
  3741  1F39                     	;# 
  3742  1F3A                     	;# 
  3743  1F3B                     	;# 
  3744  1F3C                     	;# 
  3745  1F3D                     	;# 
  3746  1F3E                     	;# 
  3747  1F3F                     	;# 
  3748  1F43                     	;# 
  3749  1F44                     	;# 
  3750  1F45                     	;# 
  3751  1F46                     	;# 
  3752  1F47                     	;# 
  3753  1F48                     	;# 
  3754  1F49                     	;# 
  3755  1F4A                     	;# 
  3756  1F4E                     	;# 
  3757  1F4F                     	;# 
  3758  1F50                     	;# 
  3759  1F51                     	;# 
  3760  1F52                     	;# 
  3761  1F53                     	;# 
  3762  1F54                     	;# 
  3763  1F55                     	;# 
  3764  1FE4                     	;# 
  3765  1FE5                     	;# 
  3766  1FE6                     	;# 
  3767  1FE7                     	;# 
  3768  1FE8                     	;# 
  3769  1FE8                     	;# 
  3770  1FE9                     	;# 
  3771  1FEA                     	;# 
  3772  1FEB                     	;# 
  3773  1FED                     	;# 
  3774  1FEE                     	;# 
  3775  1FEF                     	;_sampleArray
  3776                           
  3777                           	psect	idataCOMMON
  3778  08C2                     __pidataCOMMON:
  3779                           
  3780                           ;initializer for _I2C1_slaveWriteData
  3781  08C2  3455               	retlw	85
  3782                           
  3783                           	psect	idataBANK2
  3784  0949                     __pidataBANK2:
  3785                           
  3786                           ;initializer for _sensorAPI
  3787  0949  34DF               	retlw	low _SoundLevel_Init
  3788  094A  340D               	retlw	high _SoundLevel_Init
  3789  094B  34DF               	retlw	low _SoundLevel_Measure
  3790  094C  3408               	retlw	high _SoundLevel_Measure
  3791  094D  34C8               	retlw	low _SoundLevel_Loop
  3792  094E  3404               	retlw	high _SoundLevel_Loop
  3793  094F  3401               	retlw	low _SoundLevel_GetData
  3794  0950  340A               	retlw	high _SoundLevel_GetData
  3795  0951  3404               	retlw	low _SoundLevel_SetThreshold
  3796  0952  340D               	retlw	high _SoundLevel_SetThreshold
  3797                           
  3798                           	psect	stringtext1
  3799  1000                     __pstringtext1:
  3800  1000                     log@coeff:
  3801  1000  3400               	retlw	0
  3802  1001  3400               	retlw	0
  3803  1002  3400               	retlw	0
  3804  1003  3400               	retlw	0
  3805  1004  3480               	retlw	128
  3806  1005  343F               	retlw	63
  3807  1006  34F0               	retlw	240
  3808  1007  34FF               	retlw	255
  3809  1008  34BE               	retlw	190
  3810  1009  34E2               	retlw	226
  3811  100A  34A9               	retlw	169
  3812  100B  343E               	retlw	62
  3813  100C  3483               	retlw	131
  3814  100D  3476               	retlw	118
  3815  100E  34BE               	retlw	190
  3816  100F  34AE               	retlw	174
  3817  1010  342B               	retlw	43
  3818  1011  343E               	retlw	62
  3819  1012  343C               	retlw	60
  3820  1013  34C3               	retlw	195
  3821  1014  34BD               	retlw	189
  3822  1015  34D2               	retlw	210
  3823  1016  3413               	retlw	19
  3824  1017  343D               	retlw	61
  3825  1018  3478               	retlw	120
  3826  1019  34D3               	retlw	211
  3827  101A  34BB               	retlw	187
  3828  101B                     __end_oflog@coeff:
  3829                           
  3830                           	psect	nvBANK1
  3831  00D7                     __pnvBANK1:
  3832  00D7                     _thresholdEnabled:
  3833  00D7                     	ds	1
  3834                           
  3835                           	psect	nvBANK2
  3836  0155                     __pnvBANK2:
  3837  0155                     _thresholdLevel:
  3838  0155                     	ds	2
  3839  001A                     _LATC	set	26
  3840  0019                     _LATB	set	25
  3841  0018                     _LATA	set	24
  3842  0014                     _TRISC	set	20
  3843  0013                     _TRISB	set	19
  3844  0012                     _TRISA	set	18
  3845  000B                     _INTCONbits	set	11
  3846  0003                     _STATUSbits	set	3
  3847  0019                     _LATBbits	set	25
  3848  0014                     _TRISCbits	set	20
  3849  0013                     _TRISBbits	set	19
  3850  001A                     _LATCbits	set	26
  3851  0090                     _ADERRL	set	144
  3852  0091                     _ADERRH	set	145
  3853  009B                     _ADPREVL	set	155
  3854  009C                     _ADPREVH	set	156
  3855  0094                     _ADFLTRL	set	148
  3856  0095                     _ADFLTRH	set	149
  3857  0096                     _ADACCL	set	150
  3858  0097                     _ADACCH	set	151
  3859  0099                     _ADCNT	set	153
  3860  009D                     _ADRESL	set	157
  3861  009E                     _ADRESH	set	158
  3862  009F                     _ADPCH	set	159
  3863  009A                     _ADRPT	set	154
  3864  0098                     _ADACCU	set	152
  3865  0093                     _ADSTPTH	set	147
  3866  0092                     _ADSTPTL	set	146
  3867  008F                     _ADUTHH	set	143
  3868  008E                     _ADUTHL	set	142
  3869  008D                     _ADLTHH	set	141
  3870  008C                     _ADLTHL	set	140
  3871  0112                     _ADCON1bits	set	274
  3872  0115                     _ADSTATbits	set	277
  3873  0113                     _ADCON2bits	set	275
  3874  0114                     _ADCON3bits	set	276
  3875  0111                     _ADCON0bits	set	273
  3876  0111                     _ADCON0	set	273
  3877  0118                     _ADCLK	set	280
  3878  0117                     _ADACT	set	279
  3879  0116                     _ADREF	set	278
  3880  0115                     _ADSTAT	set	277
  3881  0114                     _ADCON3	set	276
  3882  0113                     _ADCON2	set	275
  3883  0112                     _ADCON1	set	274
  3884  0110                     _ADPREH	set	272
  3885  010F                     _ADPREL	set	271
  3886  010E                     _ADCAP	set	270
  3887  010D                     _ADACQH	set	269
  3888  010C                     _ADACQL	set	268
  3889  0190                     _SSP1CON1bits	set	400
  3890  0191                     _SSP1CON2bits	set	401
  3891  018F                     _SSP1STATbits	set	399
  3892  018C                     _SSP1BUF	set	396
  3893  018D                     _SSP1ADD	set	397
  3894  018E                     _SSP1MSK	set	398
  3895  0192                     _SSP1CON3bits	set	402
  3896  0192                     _SSP1CON3	set	402
  3897  0191                     _SSP1CON2	set	401
  3898  0190                     _SSP1CON1	set	400
  3899  018F                     _SSP1STAT	set	399
  3900  070C                     _PIR0bits	set	1804
  3901  0719                     _PIE3bits	set	1817
  3902  070F                     _PIR3bits	set	1807
  3903  0717                     _PIE1bits	set	1815
  3904  070D                     _PIR1bits	set	1805
  3905  0716                     _PIE0bits	set	1814
  3906  079D                     _PMD7	set	1949
  3907  079C                     _PMD6	set	1948
  3908  079B                     _PMD5	set	1947
  3909  079A                     _PMD4	set	1946
  3910  0799                     _PMD3	set	1945
  3911  0798                     _PMD2	set	1944
  3912  0797                     _PMD1	set	1943
  3913  0796                     _PMD0	set	1942
  3914  079C                     _PMD6bits	set	1948
  3915  0799                     _PMD3bits	set	1945
  3916  0796                     _PMD0bits	set	1942
  3917  0812                     _VREGCONbits	set	2066
  3918  080C                     _WDTCON0bits	set	2060
  3919  080D                     _WDTCON1	set	2061
  3920  080C                     _WDTCON0	set	2060
  3921  0893                     _OSCFRQ	set	2195
  3922  088D                     _OSCCON1	set	2189
  3923  088C                     _CPUDOZEbits	set	2188
  3924  1EC6                     _SSP1DATPPS	set	7878
  3925  1EC5                     _SSP1CLKPPS	set	7877
  3926  1F4E                     _ANSELC	set	8014
  3927  1F43                     _ANSELB	set	8003
  3928  1F38                     _ANSELA	set	7992
  3929  1F1D                     _RB5PPS	set	7965
  3930  1F1F                     _RB7PPS	set	7967
  3931  1F53                     _IOCCPbits	set	8019
  3932  1F54                     _IOCCNbits	set	8020
  3933  1F55                     _IOCCFbits	set	8021
  3934  1F4E                     _ANSELCbits	set	8014
  3935  1F43                     _ANSELBbits	set	8003
  3936                           
  3937                           	psect	cinit
  3938  0033                     start_initialization:	
  3939                           ; #config settings
  3940                           
  3941  0033                     __initialization:	;BIGRAM
  3942                           
  3943                           ; Initialize objects allocated to COMMON
  3944  0033  3188  20C2  3180   	fcall	__pidataCOMMON	;fetch initializer
  3945  0036  00FB               	movwf	__pdataCOMMON& (0+127)
  3946                           
  3947                           ; Initialize objects allocated to BANK2
  3948  0037  3049               	movlw	low __pidataBANK2
  3949  0038  0084               	movwf	4
  3950  0039  3089               	movlw	(high __pidataBANK2)| (0+128)
  3951  003A  0085               	movwf	5
  3952  003B  304B               	movlw	low __pdataBANK2
  3953  003C  0086               	movwf	6
  3954  003D  3001               	movlw	high __pdataBANK2
  3955  003E  0087               	movwf	7
  3956  003F  3000               	movlw	0
  3957  0040  00FF               	movwf	btemp+1
  3958  0041  300A               	movlw	10
  3959  0042  3189  2181  3180   	fcall	init_ram
  3960                           
  3961                           ; Clear objects allocated to BIGRAM
  3962  0045  30D0               	movlw	low (0+9424)
  3963  0046  0084               	movwf	4
  3964  0047  3024               	movlw	high (0+9424)
  3965  0048  0085               	movwf	5
  3966  0049  3020               	movlw	32
  3967  004A  00FE               	movwf	btemp
  3968  004B  3003               	movlw	3
  3969  004C  00FF               	movwf	btemp+1
  3970  004D  3189  2175  3180   	fcall	clear_ram0
  3971                           
  3972                           ; Clear objects allocated to COMMON
  3973  0050  01F6               	clrf	__pbssCOMMON& (0+127)
  3974  0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3975  0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3976  0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  3977  0054  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  3978                           
  3979                           ; Clear objects allocated to BANK1
  3980  0055  30C2               	movlw	low __pbssBANK1
  3981  0056  0084               	movwf	4
  3982  0057  3000               	movlw	high __pbssBANK1
  3983  0058  0085               	movwf	5
  3984  0059  3015               	movlw	21
  3985  005A  00FE               	movwf	btemp
  3986  005B  3000               	movlw	0
  3987  005C  00FF               	movwf	btemp+1
  3988  005D  3189  2175  3180   	fcall	clear_ram0
  3989                           
  3990                           ; Clear objects allocated to BANK2
  3991  0060  3020               	movlw	low __pbssBANK2
  3992  0061  0084               	movwf	4
  3993  0062  3001               	movlw	high __pbssBANK2
  3994  0063  0085               	movwf	5
  3995  0064  302B               	movlw	43
  3996  0065  00FE               	movwf	btemp
  3997  0066  3000               	movlw	0
  3998  0067  00FF               	movwf	btemp+1
  3999  0068  3189  2175  3180   	fcall	clear_ram0
  4000                           
  4001                           ; Clear objects allocated to BANK3
  4002  006B  30A0               	movlw	low __pbssBANK3
  4003  006C  0084               	movwf	4
  4004  006D  3001               	movlw	high __pbssBANK3
  4005  006E  0085               	movwf	5
  4006  006F  3020               	movlw	32
  4007  0070  00FE               	movwf	btemp
  4008  0071  3000               	movlw	0
  4009  0072  00FF               	movwf	btemp+1
  4010  0073  3189  2175  3180   	fcall	clear_ram0
  4011  0076                     end_of_initialization:	
  4012                           ;End of C runtime variable initialization code
  4013                           
  4014  0076                     __end_of__initialization:
  4015  0076  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4016  0077  0140               	movlb	0
  4017  0078  3183  2BDC         	ljmp	_main	;jump to C main() function
  4018                           
  4019                           	psect	bssCOMMON
  4020  0076                     __pbssCOMMON:
  4021  0076                     _txCnt:
  4022  0076                     	ds	1
  4023  0077                     _txLen:
  4024  0077                     	ds	1
  4025  0078                     _rxLen:
  4026  0078                     	ds	1
  4027  0079                     _cmdReceived:
  4028  0079                     	ds	1
  4029  007A                     _cmdByte:
  4030  007A                     	ds	1
  4031                           
  4032                           	psect	dataCOMMON
  4033  007B                     __pdataCOMMON:
  4034  007B                     _I2C1_slaveWriteData:
  4035  007B                     	ds	1
  4036                           
  4037                           	psect	bssBANK1
  4038  00C2                     __pbssBANK1:
  4039  00C2                     _presSumSquared:
  4040  00C2                     	ds	3
  4041  00C5                     _IOCCF6_InterruptHandler:
  4042  00C5                     	ds	2
  4043  00C7                     _ADCC_ADI_InterruptHandler:
  4044  00C7                     	ds	2
  4045  00C9                     _measurementData:
  4046  00C9                     	ds	2
  4047  00CB                     _sampleCounter:
  4048  00CB                     	ds	2
  4049  00CD                     I2C1_StatusCallback@slaveWriteType:
  4050  00CD                     	ds	1
  4051  00CE                     _overThreshold:
  4052  00CE                     	ds	1
  4053  00CF                     _polledMeasurement:
  4054  00CF                     	ds	1
  4055  00D0                     _dLen:
  4056  00D0                     	ds	1
  4057  00D1                     _sampling:
  4058  00D1                     	ds	1
  4059  00D2                     _measurementRunning:
  4060  00D2                     	ds	1
  4061  00D3                     _soundinterrupt:
  4062  00D3                     	ds	1
  4063  00D4                     _mData:
  4064  00D4                     	ds	2
  4065  00D6                     _mDataLength:
  4066  00D6                     	ds	1
  4067                           
  4068                           	psect	bssBANK2
  4069  0120                     __pbssBANK2:
  4070  0120                     _adcScaler:
  4071  0120                     	ds	3
  4072  0123                     _errno:
  4073  0123                     	ds	2
  4074  0125                     _IOCCF4_InterruptHandler:
  4075  0125                     	ds	2
  4076  0127                     _IOCCF2_InterruptHandler:
  4077  0127                     	ds	2
  4078  0129                     _IOCCF0_InterruptHandler:
  4079  0129                     	ds	2
  4080  012B                     _i2c1_rx_buffer:
  4081  012B                     	ds	32
  4082                           
  4083                           	psect	dataBANK2
  4084  014B                     __pdataBANK2:
  4085  014B                     _sensorAPI:
  4086  014B                     	ds	10
  4087                           
  4088                           	psect	bssBANK3
  4089  01A0                     __pbssBANK3:
  4090  01A0                     _i2c1_tx_buffer:
  4091  01A0                     	ds	32
  4092                           
  4093                           	psect	inittext
  4094  0981                     init_ram:
  4095  0981  00FE               	movwf	btemp
  4096  0982                     initloop:
  4097  0982  0012               	moviw fsr0++
  4098  0983  001E               	movwi fsr1++
  4099  0984  3001               	movlw	1
  4100  0985  02FE               	subwf	btemp,f
  4101  0986  3000               	movlw	0
  4102  0987  3BFF               	subwfb	btemp+1,f
  4103  0988  087F               	movf	btemp+1,w
  4104  0989  047E               	iorwf	btemp,w
  4105  098A  1D03               	skipz
  4106  098B  2982               	goto	initloop
  4107  098C  3400               	retlw	0
  4108                           
  4109                           	psect	clrtext
  4110  0975                     clear_ram0:	
  4111                           ;	Called with FSR0 containing the base address, and
  4112                           ;	btemp/btemp+1 has the size to clear
  4113                           
  4114  0975  0064               	clrwdt	;clear the watchdog before getting into this loop
  4115  0976                     clrloop0:
  4116  0976  0180               	clrf	0	;clear RAM location pointed to by FSR
  4117  0977  3101               	addfsr 0,1
  4118  0978  3001               	movlw	1
  4119  0979  02FE               	subwf	btemp,f
  4120  097A  3000               	movlw	0
  4121  097B  3BFF               	subwfb	btemp+1,f
  4122  097C  087F               	movf	btemp+1,w
  4123  097D  047E               	iorwf	btemp,w
  4124  097E  1D03               	skipz
  4125  097F  2976               	goto	clrloop0	;have we reached the end yet?
  4126  0980  3400               	retlw	0	;all done for this memory range, return
  4127                           
  4128                           	psect	cstackBANK3
  4129  01C0                     __pcstackBANK3:
  4130  01C0                     main@data:
  4131                           
  4132                           ; 20 bytes @ 0x0
  4133  01C0                     	ds	20
  4134  01D4                     main@retries:
  4135                           
  4136                           ; 1 bytes @ 0x14
  4137  01D4                     	ds	1
  4138  01D5                     main@ack:
  4139                           
  4140                           ; 1 bytes @ 0x15
  4141  01D5                     	ds	1
  4142  01D6                     main@type:
  4143                           
  4144                           ; 1 bytes @ 0x16
  4145  01D6                     	ds	1
  4146  01D7                     main@mnr:
  4147                           
  4148                           ; 1 bytes @ 0x17
  4149  01D7                     	ds	1
  4150  01D8                     main@cmd:
  4151                           
  4152                           ; 1 bytes @ 0x18
  4153  01D8                     	ds	1
  4154  01D9                     main@len:
  4155                           
  4156                           ; 1 bytes @ 0x19
  4157  01D9                     	ds	1
  4158                           
  4159                           	psect	cstackBANK1
  4160  00A0                     __pcstackBANK1:
  4161  00A0                     ??_SoundLevel_PrepareData:
  4162                           
  4163                           ; 1 bytes @ 0x0
  4164  00A0                     	ds	4
  4165  00A4                     SoundLevel_PrepareData@sampleSum:
  4166                           
  4167                           ; 4 bytes @ 0x4
  4168  00A4                     	ds	4
  4169  00A8                     _SoundLevel_PrepareData$2651:
  4170                           
  4171                           ; 3 bytes @ 0x8
  4172  00A8                     	ds	3
  4173  00AB                     _SoundLevel_PrepareData$2652:
  4174                           
  4175                           ; 3 bytes @ 0xB
  4176  00AB                     	ds	3
  4177  00AE                     SoundLevel_PrepareData@presAvgSquared:
  4178                           
  4179                           ; 3 bytes @ 0xE
  4180  00AE                     	ds	3
  4181  00B1                     SoundLevel_PrepareData@dataToSend:
  4182                           
  4183                           ; 2 bytes @ 0x11
  4184  00B1                     	ds	2
  4185  00B3                     SoundLevel_PrepareData@dBZ:
  4186                           
  4187                           ; 3 bytes @ 0x13
  4188  00B3                     	ds	3
  4189  00B6                     SoundLevel_PrepareData@signal:
  4190                           
  4191                           ; 3 bytes @ 0x16
  4192  00B6                     	ds	3
  4193  00B9                     SoundLevel_PrepareData@i:
  4194                           
  4195                           ; 2 bytes @ 0x19
  4196  00B9                     	ds	2
  4197  00BB                     SoundLevel_PrepareData@i_663:
  4198                           
  4199                           ; 2 bytes @ 0x1B
  4200  00BB                     	ds	2
  4201  00BD                     SoundLevel_PrepareData@mean:
  4202                           
  4203                           ; 3 bytes @ 0x1D
  4204  00BD                     	ds	3
  4205  00C0                     ??_main:
  4206                           
  4207                           ; 1 bytes @ 0x20
  4208  00C0                     	ds	2
  4209                           
  4210                           	psect	cstackCOMMON
  4211  0070                     __pcstackCOMMON:
  4212  0070                     ?_SoundLevel_Init:
  4213  0070                     ?_SoundLevel_Measure:	
  4214                           ; 1 bytes @ 0x0
  4215                           
  4216  0070                     ?_SoundLevel_Loop:	
  4217                           ; 1 bytes @ 0x0
  4218                           
  4219  0070                     ?_SYSTEM_Initialize:	
  4220                           ; 1 bytes @ 0x0
  4221                           
  4222  0070                     ?_I2C1_CommandReceived:	
  4223                           ; 1 bytes @ 0x0
  4224                           
  4225  0070                     ?_I2C1_GetCommand:	
  4226                           ; 1 bytes @ 0x0
  4227                           
  4228  0070                     ?_I2C1_TxBufferEmpty:	
  4229                           ; 1 bytes @ 0x0
  4230                           
  4231  0070                     ?_toggleInt:	
  4232                           ; 1 bytes @ 0x0
  4233                           
  4234  0070                     ?_SoundLevel_LedOff:	
  4235                           ; 1 bytes @ 0x0
  4236                           
  4237  0070                     ?_LED_Blink:	
  4238                           ; 1 bytes @ 0x0
  4239                           
  4240  0070                     ?_SoundLevel_LedOn:	
  4241                           ; 1 bytes @ 0x0
  4242                           
  4243  0070                     ?_ISR_MIC_Wake:	
  4244                           ; 1 bytes @ 0x0
  4245                           
  4246  0070                     ??_ISR_MIC_Wake:	
  4247                           ; 1 bytes @ 0x0
  4248                           
  4249  0070                     ?_ADCC_Initialize:	
  4250                           ; 1 bytes @ 0x0
  4251                           
  4252  0070                     ?_SoundLevel_GetSample:	
  4253                           ; 1 bytes @ 0x0
  4254                           
  4255  0070                     ?_measure:	
  4256                           ; 1 bytes @ 0x0
  4257                           
  4258  0070                     ?_generateInt:	
  4259                           ; 1 bytes @ 0x0
  4260                           
  4261  0070                     ?_EnterSleep:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264  0070                     ?_SoundLevel_StopADC:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0070                     ??_SoundLevel_StopADC:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0070                     ?_ADCC_EnableContinuousConversion:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0070                     ?_ADCC_StartConversion:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0070                     ?_ADCC_StopConversion:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ??_ADCC_StopConversion:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_ADCC_DisableContinuousConversion:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ??_ADCC_DisableContinuousConversion:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_ADCC_DefaultInterruptHandler:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ??_ADCC_DefaultInterruptHandler:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_I2C1_StatusCallback:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ??_I2C1_StatusCallback:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_IOCCF0_ISR:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ??_IOCCF0_ISR:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_IOCCF2_ISR:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ??_IOCCF2_ISR:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_IOCCF4_ISR:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ??_IOCCF4_ISR:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_IOCCF6_ISR:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ??_IOCCF6_ISR:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_PMD_Initialize:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_OSCILLATOR_Initialize:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_main:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_LED_Init:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_powerMic_Init:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_nWakeMic_Init:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_MIC_Mode:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_READY_Init:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_DOUT_Init:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_VDDAMP_Init:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_VDDBIAS_Init:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ?_AMPS_enable:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_WDT_Init:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ?_SoundLevel_PrepareData:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_SoundLevel_StartADC:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     ?_ADCC_ISR:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     ?_I2C1_Initialize:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0070                     ?_I2C1_ISR:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0070                     ?_PIN_MANAGER_IOC:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0070                     ??_PIN_MANAGER_IOC:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0070                     ?_INTERRUPT_InterruptManager:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0070                     ?_ADCC_GetConversionResult:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390                           
  4391                           ; 2 bytes @ 0x0
  4392  0070                     	ds	1
  4393  0071                     I2C1_StatusCallback@i2c_bus_state:
  4394                           
  4395                           ; 1 bytes @ 0x1
  4396  0071                     	ds	1
  4397  0072                     ??_SoundLevel_GetSample:
  4398  0072                     ??_ADCC_GetConversionResult:	
  4399                           ; 1 bytes @ 0x2
  4400                           
  4401  0072                     ??_I2C1_ISR:	
  4402                           ; 1 bytes @ 0x2
  4403                           
  4404                           
  4405                           ; 1 bytes @ 0x2
  4406  0072                     	ds	1
  4407  0073                     I2C1_ISR@i2c_data:
  4408                           
  4409                           ; 1 bytes @ 0x3
  4410  0073                     	ds	3
  4411  0076                     ??_ADCC_ISR:
  4412  0076                     ??_INTERRUPT_InterruptManager:	
  4413                           ; 1 bytes @ 0x6
  4414                           
  4415                           
  4416                           	psect	cstackBANK0
  4417  0020                     __pcstackBANK0:	
  4418                           ; 1 bytes @ 0x6
  4419                           
  4420  0020                     ?___ftge:
  4421  0020                     ??_SoundLevel_Measure:	
  4422                           ; 1 bit 
  4423                           
  4424  0020                     ?_SoundLevel_GetData:	
  4425                           ; 1 bytes @ 0x0
  4426                           
  4427  0020                     ?_I2C1_SetTransmitData:	
  4428                           ; 1 bytes @ 0x0
  4429                           
  4430  0020                     ??_I2C1_CommandReceived:	
  4431                           ; 1 bytes @ 0x0
  4432                           
  4433  0020                     ??_I2C1_GetCommand:	
  4434                           ; 1 bytes @ 0x0
  4435                           
  4436  0020                     ??_I2C1_TxBufferEmpty:	
  4437                           ; 1 bytes @ 0x0
  4438                           
  4439  0020                     ??_toggleInt:	
  4440                           ; 1 bytes @ 0x0
  4441                           
  4442  0020                     ?_I2C1_GetCommandData:	
  4443                           ; 1 bytes @ 0x0
  4444                           
  4445  0020                     ??_SoundLevel_LedOff:	
  4446                           ; 1 bytes @ 0x0
  4447                           
  4448  0020                     ??_LED_Blink:	
  4449                           ; 1 bytes @ 0x0
  4450                           
  4451  0020                     ??_SoundLevel_LedOn:	
  4452                           ; 1 bytes @ 0x0
  4453                           
  4454  0020                     ?_IOCCF6_SetInterruptHandler:	
  4455                           ; 1 bytes @ 0x0
  4456                           
  4457  0020                     ?_ADCC_SetADIInterruptHandler:	
  4458                           ; 1 bytes @ 0x0
  4459                           
  4460  0020                     ??_generateInt:	
  4461                           ; 1 bytes @ 0x0
  4462                           
  4463  0020                     ??_EnterSleep:	
  4464                           ; 1 bytes @ 0x0
  4465                           
  4466  0020                     ??_ADCC_EnableContinuousConversion:	
  4467                           ; 1 bytes @ 0x0
  4468                           
  4469  0020                     ??_ADCC_StartConversion:	
  4470                           ; 1 bytes @ 0x0
  4471                           
  4472  0020                     ??_PMD_Initialize:	
  4473                           ; 1 bytes @ 0x0
  4474                           
  4475  0020                     ??_OSCILLATOR_Initialize:	
  4476                           ; 1 bytes @ 0x0
  4477                           
  4478  0020                     ??_powerMic_Init:	
  4479                           ; 1 bytes @ 0x0
  4480                           
  4481  0020                     ??_nWakeMic_Init:	
  4482                           ; 1 bytes @ 0x0
  4483                           
  4484  0020                     ??_MIC_Mode:	
  4485                           ; 1 bytes @ 0x0
  4486                           
  4487  0020                     ??_READY_Init:	
  4488                           ; 1 bytes @ 0x0
  4489                           
  4490  0020                     ??_DOUT_Init:	
  4491                           ; 1 bytes @ 0x0
  4492                           
  4493  0020                     ??_VDDAMP_Init:	
  4494                           ; 1 bytes @ 0x0
  4495                           
  4496  0020                     ??_VDDBIAS_Init:	
  4497                           ; 1 bytes @ 0x0
  4498                           
  4499  0020                     ??_AMPS_enable:	
  4500                           ; 1 bytes @ 0x0
  4501                           
  4502  0020                     ??_WDT_Init:	
  4503                           ; 1 bytes @ 0x0
  4504                           
  4505  0020                     ??_I2C1_Initialize:	
  4506                           ; 1 bytes @ 0x0
  4507                           
  4508  0020                     ?___wmul:	
  4509                           ; 1 bytes @ 0x0
  4510                           
  4511  0020                     ?___ftpack:	
  4512                           ; 2 bytes @ 0x0
  4513                           
  4514  0020                     ?_frexp:	
  4515                           ; 3 bytes @ 0x0
  4516                           
  4517  0020                     ?___fttol:	
  4518                           ; 3 bytes @ 0x0
  4519                           
  4520  0020                     MIC_Mode@mode:	
  4521                           ; 4 bytes @ 0x0
  4522                           
  4523  0020                     SoundLevel_GetData@data:	
  4524                           ; 1 bytes @ 0x0
  4525                           
  4526  0020                     ADCC_StartConversion@channel:	
  4527                           ; 1 bytes @ 0x0
  4528                           
  4529  0020                     I2C1_Initialize@slave_address:	
  4530                           ; 1 bytes @ 0x0
  4531                           
  4532  0020                     I2C1_GetCommandData@len:	
  4533                           ; 1 bytes @ 0x0
  4534                           
  4535  0020                     ADCC_SetADIInterruptHandler@InterruptHandler:	
  4536                           ; 1 bytes @ 0x0
  4537                           
  4538  0020                     I2C1_SetTransmitData@data:	
  4539                           ; 2 bytes @ 0x0
  4540                           
  4541  0020                     IOCCF6_SetInterruptHandler@InterruptHandler:	
  4542                           ; 2 bytes @ 0x0
  4543                           
  4544  0020                     ___wmul@multiplier:	
  4545                           ; 2 bytes @ 0x0
  4546                           
  4547  0020                     ___ftpack@arg:	
  4548                           ; 2 bytes @ 0x0
  4549                           
  4550  0020                     ___ftge@ff1:	
  4551                           ; 3 bytes @ 0x0
  4552                           
  4553  0020                     ___fttol@f1:	
  4554                           ; 3 bytes @ 0x0
  4555                           
  4556  0020                     frexp@value:	
  4557                           ; 3 bytes @ 0x0
  4558                           
  4559                           
  4560                           ; 3 bytes @ 0x0
  4561  0020                     	ds	1
  4562  0021                     ?_SoundLevel_SetThreshold:
  4563  0021                     ??_SYSTEM_Initialize:	
  4564                           ; 1 bytes @ 0x1
  4565                           
  4566  0021                     ??_I2C1_GetCommandData:	
  4567                           ; 1 bytes @ 0x1
  4568                           
  4569  0021                     ??_SoundLevel_StartADC:	
  4570                           ; 1 bytes @ 0x1
  4571                           
  4572  0021                     SoundLevel_GetData@length:	
  4573                           ; 1 bytes @ 0x1
  4574                           
  4575  0021                     SoundLevel_SetThreshold@metric:	
  4576                           ; 1 bytes @ 0x1
  4577                           
  4578  0021                     I2C1_GetCommand@cmd:	
  4579                           ; 1 bytes @ 0x1
  4580                           
  4581  0021                     SYSTEM_Initialize@slave_address:	
  4582                           ; 1 bytes @ 0x1
  4583                           
  4584                           
  4585                           ; 1 bytes @ 0x1
  4586  0021                     	ds	1
  4587  0022                     ??_SoundLevel_Init:
  4588  0022                     ??_SoundLevel_GetData:	
  4589                           ; 1 bytes @ 0x2
  4590                           
  4591  0022                     ??_IOCCF6_SetInterruptHandler:	
  4592                           ; 1 bytes @ 0x2
  4593                           
  4594  0022                     ??_ADCC_Initialize:	
  4595                           ; 1 bytes @ 0x2
  4596                           
  4597  0022                     ??_ADCC_SetADIInterruptHandler:	
  4598                           ; 1 bytes @ 0x2
  4599                           
  4600  0022                     ??_LED_Init:	
  4601                           ; 1 bytes @ 0x2
  4602                           
  4603  0022                     AMPS_enable@enable:	
  4604                           ; 1 bytes @ 0x2
  4605                           
  4606  0022                     SoundLevel_SetThreshold@thresholdData:	
  4607                           ; 1 bytes @ 0x2
  4608                           
  4609  0022                     I2C1_GetCommandData@data:	
  4610                           ; 1 bytes @ 0x2
  4611                           
  4612  0022                     I2C1_SetTransmitData@len:	
  4613                           ; 1 bytes @ 0x2
  4614                           
  4615  0022                     ___wmul@multiplicand:	
  4616                           ; 1 bytes @ 0x2
  4617                           
  4618                           
  4619                           ; 2 bytes @ 0x2
  4620  0022                     	ds	1
  4621  0023                     ??_SoundLevel_SetThreshold:
  4622  0023                     ??_I2C1_SetTransmitData:	
  4623                           ; 1 bytes @ 0x3
  4624                           
  4625  0023                     ___ftpack@exp:	
  4626                           ; 1 bytes @ 0x3
  4627                           
  4628  0023                     frexp@eptr:	
  4629                           ; 1 bytes @ 0x3
  4630                           
  4631  0023                     ___ftge@ff2:	
  4632                           ; 1 bytes @ 0x3
  4633                           
  4634                           
  4635                           ; 3 bytes @ 0x3
  4636  0023                     	ds	1
  4637  0024                     ??_frexp:
  4638  0024                     ??___wmul:	
  4639                           ; 1 bytes @ 0x4
  4640                           
  4641  0024                     ??___fttol:	
  4642                           ; 1 bytes @ 0x4
  4643                           
  4644  0024                     ___ftpack@sign:	
  4645                           ; 1 bytes @ 0x4
  4646                           
  4647  0024                     ___wmul@product:	
  4648                           ; 1 bytes @ 0x4
  4649                           
  4650                           
  4651                           ; 2 bytes @ 0x4
  4652  0024                     	ds	1
  4653  0025                     ??___ftpack:
  4654                           
  4655                           ; 1 bytes @ 0x5
  4656  0025                     	ds	1
  4657  0026                     ??___ftge:
  4658                           
  4659                           ; 1 bytes @ 0x6
  4660  0026                     	ds	2
  4661  0028                     ?___awtoft:
  4662  0028                     ?___ftdiv:	
  4663                           ; 3 bytes @ 0x8
  4664                           
  4665  0028                     ?___lwtoft:	
  4666                           ; 3 bytes @ 0x8
  4667                           
  4668  0028                     ___fttol@sign1:	
  4669                           ; 3 bytes @ 0x8
  4670                           
  4671  0028                     ___awtoft@c:	
  4672                           ; 1 bytes @ 0x8
  4673                           
  4674  0028                     ___lwtoft@c:	
  4675                           ; 2 bytes @ 0x8
  4676                           
  4677  0028                     ___ftdiv@f2:	
  4678                           ; 2 bytes @ 0x8
  4679                           
  4680                           
  4681                           ; 3 bytes @ 0x8
  4682  0028                     	ds	1
  4683  0029                     ___fttol@lval:
  4684                           
  4685                           ; 4 bytes @ 0x9
  4686  0029                     	ds	2
  4687  002B                     ??___awtoft:
  4688  002B                     ??___lwtoft:	
  4689                           ; 1 bytes @ 0xB
  4690                           
  4691  002B                     ___ftdiv@f1:	
  4692                           ; 1 bytes @ 0xB
  4693                           
  4694                           
  4695                           ; 3 bytes @ 0xB
  4696  002B                     	ds	2
  4697  002D                     ___awtoft@sign:
  4698  002D                     ___fttol@exp1:	
  4699                           ; 1 bytes @ 0xD
  4700                           
  4701                           
  4702                           ; 1 bytes @ 0xD
  4703  002D                     	ds	1
  4704  002E                     ??___ftdiv:
  4705  002E                     ?___altoft:	
  4706                           ; 1 bytes @ 0xE
  4707                           
  4708  002E                     ?___ftadd:	
  4709                           ; 3 bytes @ 0xE
  4710                           
  4711  002E                     ___ftadd@f1:	
  4712                           ; 3 bytes @ 0xE
  4713                           
  4714  002E                     ___altoft@c:	
  4715                           ; 3 bytes @ 0xE
  4716                           
  4717                           
  4718                           ; 4 bytes @ 0xE
  4719  002E                     	ds	3
  4720  0031                     ___ftadd@f2:
  4721                           
  4722                           ; 3 bytes @ 0x11
  4723  0031                     	ds	1
  4724  0032                     ??___altoft:
  4725  0032                     ___ftdiv@cntr:	
  4726                           ; 1 bytes @ 0x12
  4727                           
  4728                           
  4729                           ; 1 bytes @ 0x12
  4730  0032                     	ds	1
  4731  0033                     ___ftdiv@exp:
  4732                           
  4733                           ; 1 bytes @ 0x13
  4734  0033                     	ds	1
  4735  0034                     ??___ftadd:
  4736  0034                     ___altoft@exp:	
  4737                           ; 1 bytes @ 0x14
  4738                           
  4739  0034                     ___ftdiv@f3:	
  4740                           ; 1 bytes @ 0x14
  4741                           
  4742                           
  4743                           ; 3 bytes @ 0x14
  4744  0034                     	ds	1
  4745  0035                     ___altoft@sign:
  4746                           
  4747                           ; 1 bytes @ 0x15
  4748  0035                     	ds	1
  4749  0036                     ?_trunc:
  4750  0036                     trunc@x:	
  4751                           ; 3 bytes @ 0x16
  4752                           
  4753                           
  4754                           ; 3 bytes @ 0x16
  4755  0036                     	ds	1
  4756  0037                     ___ftdiv@sign:
  4757                           
  4758                           ; 1 bytes @ 0x17
  4759  0037                     	ds	1
  4760  0038                     ___ftadd@sign:
  4761                           
  4762                           ; 1 bytes @ 0x18
  4763  0038                     	ds	1
  4764  0039                     ??_trunc:
  4765  0039                     ___ftadd@exp2:	
  4766                           ; 1 bytes @ 0x19
  4767                           
  4768                           
  4769                           ; 1 bytes @ 0x19
  4770  0039                     	ds	1
  4771  003A                     ___ftadd@exp1:
  4772  003A                     trunc@i:	
  4773                           ; 1 bytes @ 0x1A
  4774                           
  4775                           
  4776                           ; 3 bytes @ 0x1A
  4777  003A                     	ds	3
  4778  003D                     trunc@expon:
  4779                           
  4780                           ; 2 bytes @ 0x1D
  4781  003D                     	ds	2
  4782  003F                     ?___ftsub:
  4783  003F                     ___ftsub@f2:	
  4784                           ; 3 bytes @ 0x1F
  4785                           
  4786                           
  4787                           ; 3 bytes @ 0x1F
  4788  003F                     	ds	3
  4789  0042                     ___ftsub@f1:
  4790                           
  4791                           ; 3 bytes @ 0x22
  4792  0042                     	ds	3
  4793  0045                     ??___ftsub:
  4794  0045                     ?___ftmul:	
  4795                           ; 1 bytes @ 0x25
  4796                           
  4797  0045                     ___ftmul@f1:	
  4798                           ; 3 bytes @ 0x25
  4799                           
  4800                           
  4801                           ; 3 bytes @ 0x25
  4802  0045                     	ds	3
  4803  0048                     ___ftmul@f2:
  4804                           
  4805                           ; 3 bytes @ 0x28
  4806  0048                     	ds	3
  4807  004B                     ??___ftmul:
  4808                           
  4809                           ; 1 bytes @ 0x2B
  4810  004B                     	ds	4
  4811  004F                     ___ftmul@exp:
  4812                           
  4813                           ; 1 bytes @ 0x2F
  4814  004F                     	ds	1
  4815  0050                     ___ftmul@f3_as_product:
  4816                           
  4817                           ; 3 bytes @ 0x30
  4818  0050                     	ds	3
  4819  0053                     ___ftmul@cntr:
  4820                           
  4821                           ; 1 bytes @ 0x33
  4822  0053                     	ds	1
  4823  0054                     ___ftmul@sign:
  4824                           
  4825                           ; 1 bytes @ 0x34
  4826  0054                     	ds	1
  4827  0055                     ?_round:
  4828  0055                     ?_eval_poly:	
  4829                           ; 3 bytes @ 0x35
  4830                           
  4831  0055                     eval_poly@x:	
  4832                           ; 3 bytes @ 0x35
  4833                           
  4834  0055                     round@x:	
  4835                           ; 3 bytes @ 0x35
  4836                           
  4837                           
  4838                           ; 3 bytes @ 0x35
  4839  0055                     	ds	3
  4840  0058                     ??_round:
  4841  0058                     eval_poly@d:	
  4842                           ; 1 bytes @ 0x38
  4843                           
  4844  0058                     round@f:	
  4845                           ; 2 bytes @ 0x38
  4846                           
  4847                           
  4848                           ; 3 bytes @ 0x38
  4849  0058                     	ds	2
  4850  005A                     eval_poly@n:
  4851                           
  4852                           ; 2 bytes @ 0x3A
  4853  005A                     	ds	2
  4854  005C                     ??_eval_poly:
  4855  005C                     eval_poly@res:	
  4856                           ; 1 bytes @ 0x3C
  4857                           
  4858                           
  4859                           ; 3 bytes @ 0x3C
  4860  005C                     	ds	3
  4861  005F                     ?_log:
  4862  005F                     log@x:	
  4863                           ; 3 bytes @ 0x3F
  4864                           
  4865                           
  4866                           ; 3 bytes @ 0x3F
  4867  005F                     	ds	3
  4868  0062                     ??_log:
  4869                           
  4870                           ; 1 bytes @ 0x42
  4871  0062                     	ds	1
  4872  0063                     log@exponent:
  4873                           
  4874                           ; 2 bytes @ 0x43
  4875  0063                     	ds	2
  4876  0065                     ?_log10:
  4877  0065                     log10@x:	
  4878                           ; 3 bytes @ 0x45
  4879                           
  4880                           
  4881                           ; 3 bytes @ 0x45
  4882  0065                     	ds	3
  4883  0068                     ??_log10:
  4884  0068                     _log10$2653:	
  4885                           ; 1 bytes @ 0x48
  4886                           
  4887                           
  4888                           ; 3 bytes @ 0x48
  4889  0068                     	ds	3
  4890  006B                     ??_measure:
  4891                           
  4892                           ; 1 bytes @ 0x4B
  4893  006B                     	ds	1
  4894  006C                     ??_SoundLevel_Loop:
  4895                           
  4896                           ; 1 bytes @ 0x4C
  4897  006C                     	ds	1
  4898                           
  4899                           	psect	maintext
  4900  03DC                     __pmaintext:	
  4901 ;;
  4902 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4903 ;;
  4904 ;; *************** function _main *****************
  4905 ;; Defined at:
  4906 ;;		line 75 in file "main.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  data           20    0[BANK3 ] unsigned char [20]
  4911 ;;  len             1   25[BANK3 ] unsigned char 
  4912 ;;  retries         1   20[BANK3 ] unsigned char 
  4913 ;;  mnr             1   23[BANK3 ] unsigned char 
  4914 ;;  type            1   22[BANK3 ] unsigned char 
  4915 ;;  ack             1   21[BANK3 ] unsigned char 
  4916 ;;  cmd             1   24[BANK3 ] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : B3F/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4928 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4929 ;;      Totals:         0       0       2       0      26       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4930 ;;Total ram usage:       28 bytes
  4931 ;; Hardware stack levels required when called:   13
  4932 ;; This function calls:
  4933 ;;		_I2C1_CommandReceived
  4934 ;;		_I2C1_GetCommand
  4935 ;;		_I2C1_GetCommandData
  4936 ;;		_I2C1_SetTransmitData
  4937 ;;		_I2C1_TxBufferEmpty
  4938 ;;		_SYSTEM_Initialize
  4939 ;;		_SoundLevel_GetData
  4940 ;;		_SoundLevel_Init
  4941 ;;		_SoundLevel_Loop
  4942 ;;		_SoundLevel_Measure
  4943 ;;		_SoundLevel_SetThreshold
  4944 ;;		_toggleInt
  4945 ;; This function is called by:
  4946 ;;		Startup code after reset
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function _main
  4952  03DC                     _main:
  4953  03DC                     l6109:	
  4954                           ;incstack = 0
  4955                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4956                           
  4957                           
  4958                           ;main.c: 78: SYSTEM_Initialize(0x54);
  4959  03DC  3054               	movlw	84
  4960  03DD  318A  229F  3183   	fcall	_SYSTEM_Initialize
  4961                           
  4962                           ;main.c: 80: sensorAPI.Init();
  4963  03E0  0142               	movlb	2	; select bank2
  4964  03E1  084C               	movf	(_sensorAPI+1)^(0+256),w
  4965  03E2  008A               	movwf	10
  4966  03E3  084B               	movf	_sensorAPI^(0+256),w
  4967  03E4  000A               	callw
  4968  03E5  3183               	pagesel	$
  4969  03E6                     l6111:
  4970                           
  4971                           ;main.c: 83: sensorAPI.Loop();
  4972  03E6  3004               	movlw	4
  4973  03E7  3E4B               	addlw	(low (_sensorAPI| (0+256)))& (0+255)
  4974  03E8  0086               	movwf	6
  4975  03E9  3001               	movlw	1	; select bank2/3
  4976  03EA  0087               	movwf	7
  4977  03EB  3F41               	moviw [1]fsr1
  4978  03EC  008A               	movwf	10
  4979  03ED  3F40               	moviw [0]fsr1
  4980  03EE  000A               	callw
  4981  03EF  3183               	pagesel	$
  4982  03F0                     l6113:
  4983                           
  4984                           ;main.c: 84: sensorAPI.GetData(mData, &mDataLength);
  4985  03F0  30D4               	movlw	(low (_mData| 0))& (0+255)
  4986  03F1  0141               	movlb	1	; select bank1
  4987  03F2  00C0               	movwf	??_main^(0+128)
  4988  03F3  0840               	movf	??_main^(0+128),w
  4989  03F4  0140               	movlb	0	; select bank0
  4990  03F5  00A0               	movwf	SoundLevel_GetData@data
  4991  03F6  30D6               	movlw	(low (_mDataLength| 0))& (0+255)
  4992  03F7  0141               	movlb	1	; select bank1
  4993  03F8  00C1               	movwf	(??_main+1)^(0+128)
  4994  03F9  0841               	movf	(??_main+1)^(0+128),w
  4995  03FA  0140               	movlb	0	; select bank0
  4996  03FB  00A1               	movwf	SoundLevel_GetData@length
  4997  03FC  3006               	movlw	6
  4998  03FD  3E4B               	addlw	(low (_sensorAPI| (0+256)))& (0+255)
  4999  03FE  0086               	movwf	6
  5000  03FF  3001               	movlw	1	; select bank2/3
  5001  0400  0087               	movwf	7
  5002  0401  3F41               	moviw [1]fsr1
  5003  0402  008A               	movwf	10
  5004  0403  3F40               	moviw [0]fsr1
  5005  0404  000A               	callw
  5006  0405  3183               	pagesel	$
  5007  0406                     l6115:
  5008                           
  5009                           ;main.c: 85: I2C1_SetTransmitData(mData, mDataLength);
  5010  0406  30D4               	movlw	low _mData
  5011  0407  0140               	movlb	0	; select bank0
  5012  0408  00A0               	movwf	I2C1_SetTransmitData@data
  5013  0409  3000               	movlw	high _mData
  5014  040A  00A1               	movwf	I2C1_SetTransmitData@data+1
  5015  040B  0141               	movlb	1	; select bank1
  5016  040C  0856               	movf	_mDataLength^(0+128),w
  5017  040D  00C0               	movwf	??_main^(0+128)
  5018  040E  0840               	movf	??_main^(0+128),w
  5019  040F  0140               	movlb	0	; select bank0
  5020  0410  00A2               	movwf	I2C1_SetTransmitData@len
  5021  0411  318B  235A  3183   	fcall	_I2C1_SetTransmitData
  5022  0414                     l6117:
  5023                           
  5024                           ;main.c: 88: if(I2C1_CommandReceived()){
  5025  0414  3180  2002  3183   	fcall	_I2C1_CommandReceived
  5026  0417  3A00               	xorlw	0
  5027  0418  1903               	skipnz
  5028  0419  2C1B               	goto	u6111
  5029  041A  2C1C               	goto	u6110
  5030  041B                     u6111:
  5031  041B  2BE6               	goto	l6111
  5032  041C                     u6110:
  5033  041C                     l6119:
  5034                           
  5035                           ;main.c: 89: uint8_t cmd;;main.c: 90: I2C1_GetCommand(&cmd);
  5036  041C  30D8               	movlw	(low (main@cmd| (0+256)))& (0+255)
  5037  041D  3189  2169  3183   	fcall	_I2C1_GetCommand
  5038                           
  5039                           ;main.c: 92: switch(cmd){
  5040  0420  2CAD               	goto	l6151
  5041  0421                     l6121:
  5042                           
  5043                           ;main.c: 96: uint8_t ack = 0xAA;
  5044  0421  30AA               	movlw	170
  5045  0422  0141               	movlb	1	; select bank1
  5046  0423  00C0               	movwf	??_main^(0+128)
  5047  0424  0840               	movf	??_main^(0+128),w
  5048  0425  0143               	movlb	3	; select bank3
  5049  0426  00D5               	movwf	main@ack^(0+384)
  5050  0427                     l6123:
  5051                           
  5052                           ;main.c: 97: I2C1_SetTransmitData(&ack, 1);
  5053  0427  30D5               	movlw	low main@ack
  5054  0428  0140               	movlb	0	; select bank0
  5055  0429  00A0               	movwf	I2C1_SetTransmitData@data
  5056  042A  3001               	movlw	high main@ack
  5057  042B  00A1               	movwf	I2C1_SetTransmitData@data+1
  5058  042C  01A2               	clrf	I2C1_SetTransmitData@len
  5059  042D  0AA2               	incf	I2C1_SetTransmitData@len,f
  5060  042E  318B  235A  3183   	fcall	_I2C1_SetTransmitData
  5061                           
  5062                           ;main.c: 98: } break;
  5063  0431  2BE6               	goto	l6111
  5064  0432                     l44:	
  5065                           ;main.c: 101: case 0x11:{
  5066                           
  5067                           
  5068                           ;main.c: 103: uint8_t type = 0x01;
  5069  0432  01D6               	clrf	main@type^(0+384)
  5070  0433  0AD6               	incf	main@type^(0+384),f
  5071  0434                     l6125:
  5072                           
  5073                           ;main.c: 104: I2C1_SetTransmitData(&type, 1);
  5074  0434  30D6               	movlw	low main@type
  5075  0435  0140               	movlb	0	; select bank0
  5076  0436  00A0               	movwf	I2C1_SetTransmitData@data
  5077  0437  3001               	movlw	high main@type
  5078  0438  00A1               	movwf	I2C1_SetTransmitData@data+1
  5079  0439  01A2               	clrf	I2C1_SetTransmitData@len
  5080  043A  0AA2               	incf	I2C1_SetTransmitData@len,f
  5081  043B  318B  235A  3183   	fcall	_I2C1_SetTransmitData
  5082                           
  5083                           ;main.c: 105: } break;
  5084  043E  2BE6               	goto	l6111
  5085  043F                     l45:	
  5086                           ;main.c: 108: case 0x23:{
  5087                           
  5088                           
  5089                           ;main.c: 110: uint8_t mnr = 0x01;
  5090  043F  01D7               	clrf	main@mnr^(0+384)
  5091  0440  0AD7               	incf	main@mnr^(0+384),f
  5092  0441                     l6127:
  5093                           
  5094                           ;main.c: 111: I2C1_SetTransmitData(&mnr, 1);
  5095  0441  30D7               	movlw	low main@mnr
  5096  0442  0140               	movlb	0	; select bank0
  5097  0443  00A0               	movwf	I2C1_SetTransmitData@data
  5098  0444  3001               	movlw	high main@mnr
  5099  0445  00A1               	movwf	I2C1_SetTransmitData@data+1
  5100  0446  01A2               	clrf	I2C1_SetTransmitData@len
  5101  0447  0AA2               	incf	I2C1_SetTransmitData@len,f
  5102  0448  318B  235A  3183   	fcall	_I2C1_SetTransmitData
  5103                           
  5104                           ;main.c: 112: } break;
  5105  044B  2BE6               	goto	l6111
  5106  044C                     l6129:
  5107                           
  5108                           ;main.c: 117: sensorAPI.Measure();
  5109  044C  3002               	movlw	2
  5110  044D  3E4B               	addlw	(low (_sensorAPI| (0+256)))& (0+255)
  5111  044E  0086               	movwf	6
  5112  044F  3001               	movlw	1	; select bank2/3
  5113  0450  0087               	movwf	7
  5114  0451  3F41               	moviw [1]fsr1
  5115  0452  008A               	movwf	10
  5116  0453  3F40               	moviw [0]fsr1
  5117  0454  000A               	callw
  5118  0455  3183               	pagesel	$
  5119                           
  5120                           ;main.c: 118: } break;
  5121  0456  2BE6               	goto	l6111
  5122  0457                     l6131:
  5123                           
  5124                           ;main.c: 123: uint8_t retries = 20;
  5125  0457  3014               	movlw	20
  5126  0458  0141               	movlb	1	; select bank1
  5127  0459  00C0               	movwf	??_main^(0+128)
  5128  045A  0840               	movf	??_main^(0+128),w
  5129  045B  0143               	movlb	3	; select bank3
  5130  045C  00D4               	movwf	main@retries^(0+384)
  5131                           
  5132                           ;main.c: 124: while(!I2C1_TxBufferEmpty() && retries--){
  5133  045D  2C67               	goto	l6135
  5134  045E                     l6133:
  5135                           
  5136                           ;main.c: 125: _delay((unsigned long)((1)*(32000000/4000.0)));
  5137  045E  300B               	movlw	11
  5138  045F  0141               	movlb	1	; select bank1
  5139  0460  00C0               	movwf	??_main^(0+128)
  5140  0461  3062               	movlw	98
  5141  0462                     u6157:
  5142  0462  0B89               	decfsz	9,f
  5143  0463  2C62               	goto	u6157
  5144  0464  0BC0               	decfsz	??_main^(0+128),f
  5145  0465  2C62               	goto	u6157
  5146  0466  0000               	nop
  5147  0467                     l6135:
  5148  0467  3189  2114  3183   	fcall	_I2C1_TxBufferEmpty
  5149  046A  3A00               	xorlw	0
  5150  046B  1D03               	skipz
  5151  046C  2C6E               	goto	u6121
  5152  046D  2C6F               	goto	u6120
  5153  046E                     u6121:
  5154  046E  2CC5               	goto	l40
  5155  046F                     u6120:
  5156  046F                     l6137:
  5157  046F  3001               	movlw	1
  5158  0470  0143               	movlb	3	; select bank3
  5159  0471  02D4               	subwf	main@retries^(0+384),f
  5160  0472  0A54               	incf	main@retries^(0+384),w
  5161  0473  1D03               	btfss	3,2
  5162  0474  2C76               	goto	u6131
  5163  0475  2C77               	goto	u6130
  5164  0476                     u6131:
  5165  0476  2C5E               	goto	l6133
  5166  0477                     u6130:
  5167  0477  2BE6               	goto	l6111
  5168  0478                     l6139:
  5169                           
  5170                           ;main.c: 131: toggleInt();
  5171  0478  3189  218D  3183   	fcall	_toggleInt
  5172                           
  5173                           ;main.c: 132: } break;
  5174  047B  2BE6               	goto	l6111
  5175  047C                     l6141:
  5176                           
  5177                           ;main.c: 136: _delay((unsigned long)((2)*(32000000/4000.0)));
  5178  047C  3015               	movlw	21
  5179  047D  0141               	movlb	1	; select bank1
  5180  047E  00C0               	movwf	??_main^(0+128)
  5181  047F  30C6               	movlw	198
  5182  0480                     u6167:
  5183  0480  0B89               	decfsz	9,f
  5184  0481  2C80               	goto	u6167
  5185  0482  0BC0               	decfsz	??_main^(0+128),f
  5186  0483  2C80               	goto	u6167
  5187  0484  0000               	nop
  5188  0485                     l6143:
  5189                           
  5190                           ;main.c: 137: uint8_t len;;main.c: 138: uint8_t data[20];;main.c: 139: I2C1_GetCommandDa
      +                          ta(data, &len);
  5191  0485  30D9               	movlw	(low (main@len| (0+256)))& (0+255)
  5192  0486  0141               	movlb	1	; select bank1
  5193  0487  00C0               	movwf	??_main^(0+128)
  5194  0488  0840               	movf	??_main^(0+128),w
  5195  0489  0140               	movlb	0	; select bank0
  5196  048A  00A0               	movwf	I2C1_GetCommandData@len
  5197  048B  30C0               	movlw	(low (main@data| (0+256)))& (0+255)
  5198  048C  318A  225D  3183   	fcall	_I2C1_GetCommandData
  5199  048F                     l6145:
  5200                           
  5201                           ;main.c: 140: if(len == 6){
  5202  048F  3006               	movlw	6
  5203  0490  0143               	movlb	3	; select bank3
  5204  0491  0659               	xorwf	main@len^(0+384),w
  5205  0492  1D03               	btfss	3,2
  5206  0493  2C95               	goto	u6141
  5207  0494  2C96               	goto	u6140
  5208  0495                     u6141:
  5209  0495  2CC5               	goto	l40
  5210  0496                     u6140:
  5211  0496                     l6147:
  5212                           
  5213                           ;main.c: 141: sensorAPI.UpdateThreshold(data[0], data+1);
  5214  0496  0840               	movf	main@data^(0+384),w
  5215  0497  0141               	movlb	1	; select bank1
  5216  0498  00C0               	movwf	??_main^(0+128)
  5217  0499  0840               	movf	??_main^(0+128),w
  5218  049A  0140               	movlb	0	; select bank0
  5219  049B  00A1               	movwf	SoundLevel_SetThreshold@metric
  5220  049C  30C1               	movlw	(low ((main@data| (0+256)+1)))& (0+255)
  5221  049D  0141               	movlb	1	; select bank1
  5222  049E  00C1               	movwf	(??_main+1)^(0+128)
  5223  049F  0841               	movf	(??_main+1)^(0+128),w
  5224  04A0  0140               	movlb	0	; select bank0
  5225  04A1  00A2               	movwf	SoundLevel_SetThreshold@thresholdData
  5226  04A2  3008               	movlw	8
  5227  04A3  3E4B               	addlw	(low (_sensorAPI| (0+256)))& (0+255)
  5228  04A4  0086               	movwf	6
  5229  04A5  3001               	movlw	1	; select bank2/3
  5230  04A6  0087               	movwf	7
  5231  04A7  3F41               	moviw [1]fsr1
  5232  04A8  008A               	movwf	10
  5233  04A9  3F40               	moviw [0]fsr1
  5234  04AA  000A               	callw
  5235  04AB  3183               	pagesel	$
  5236  04AC  2BE6               	goto	l6111
  5237  04AD                     l6151:
  5238  04AD  0143               	movlb	3	; select bank3
  5239  04AE  0858               	movf	main@cmd^(0+384),w
  5240                           
  5241                           ; Switch size 1, requested type "simple"
  5242                           ; Number of cases is 7, Range of values is 16 to 36
  5243                           ; switch strategies available:
  5244                           ; Name         Instructions Cycles
  5245                           ; simple_byte           22    12 (average)
  5246                           ; direct_byte           51     9 (fixed)
  5247                           ; jumptable            263     9 (fixed)
  5248                           ;	Chosen strategy is simple_byte
  5249  04AF  3A10               	xorlw	16	; case 16
  5250  04B0  1903               	skipnz
  5251  04B1  2C21               	goto	l6121
  5252  04B2  3A01               	xorlw	1	; case 17
  5253  04B3  1903               	skipnz
  5254  04B4  2C32               	goto	l44
  5255  04B5  3A02               	xorlw	2	; case 19
  5256  04B6  1903               	skipnz
  5257  04B7  2C4C               	goto	l6129
  5258  04B8  3A07               	xorlw	7	; case 20
  5259  04B9  1903               	skipnz
  5260  04BA  2C57               	goto	l6131
  5261  04BB  3A01               	xorlw	1	; case 21
  5262  04BC  1903               	skipnz
  5263  04BD  2C78               	goto	l6139
  5264  04BE  3A36               	xorlw	54	; case 35
  5265  04BF  1903               	skipnz
  5266  04C0  2C3F               	goto	l45
  5267  04C1  3A07               	xorlw	7	; case 36
  5268  04C2  1903               	skipnz
  5269  04C3  2C7C               	goto	l6141
  5270  04C4  2CC5               	goto	l40
  5271  04C5                     l40:
  5272  04C5  2BE6               	goto	l6111
  5273  04C6  3180  2831         	ljmp	start
  5274  04C8                     __end_of_main:
  5275                           
  5276                           	psect	text1
  5277  098D                     __ptext1:	
  5278 ;; *************** function _toggleInt *****************
  5279 ;; Defined at:
  5280 ;;		line 153 in file "main.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5298 ;;Total ram usage:        0 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    5
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function _toggleInt
  5310  098D                     _toggleInt:
  5311  098D                     l62:	
  5312                           ;incstack = 0
  5313                           ; Regs used in _toggleInt: [status,0]
  5314                           ;main.c: 154: do { LATCbits.LATC7 = ~LATCbits.LATC7; } while(0);
  5315                           
  5316  098D                     l5907:
  5317  098D  1003               	clrc
  5318  098E  0140               	movlb	0	; select bank0
  5319  098F  1F9A               	btfss	26,7	;volatile
  5320  0990  1403               	setc
  5321  0991  1803               	btfsc	3,0
  5322  0992  2994               	goto	u5911
  5323  0993  2997               	goto	u5910
  5324  0994                     u5911:
  5325  0994  0140               	movlb	0	; select bank0
  5326  0995  179A               	bsf	26,7	;volatile
  5327  0996  2999               	goto	u5924
  5328  0997                     u5910:
  5329  0997  0140               	movlb	0	; select bank0
  5330  0998  139A               	bcf	26,7	;volatile
  5331  0999                     u5924:
  5332  0999                     l64:
  5333  0999  0008               	return
  5334  099A                     __end_of_toggleInt:
  5335                           
  5336                           	psect	text2
  5337  0D04                     __ptext2:	
  5338 ;; *************** function _SoundLevel_SetThreshold *****************
  5339 ;; Defined at:
  5340 ;;		line 475 in file "Sensors/sound_level.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  metric          1    1[BANK0 ] unsigned char 
  5343 ;;  thresholdDat    1    2[BANK0 ] PTR unsigned char 
  5344 ;;		 -> main@data(20), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5358 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5359 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5360 ;;Total ram usage:        7 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    6
  5363 ;; This function calls:
  5364 ;;		_MIC_Mode
  5365 ;; This function is called by:
  5366 ;;		_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function _SoundLevel_SetThreshold
  5372  0D04                     _SoundLevel_SetThreshold:
  5373  0D04                     l6039:	
  5374                           ;incstack = 0
  5375                           ; Regs used in _SoundLevel_SetThreshold: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5376                           
  5377                           
  5378                           ;sound_level.c: 476: if(metric == 0){
  5379  0D04  0140               	movlb	0	; select bank0
  5380  0D05  0821               	movf	SoundLevel_SetThreshold@metric,w
  5381  0D06  1D03               	btfss	3,2
  5382  0D07  2D09               	goto	u6031
  5383  0D08  2D0A               	goto	u6030
  5384  0D09                     u6031:
  5385  0D09  2D45               	goto	l321
  5386  0D0A                     u6030:
  5387  0D0A                     l6041:
  5388                           
  5389                           ;sound_level.c: 477: thresholdEnabled = thresholdData[0];
  5390  0D0A  0822               	movf	SoundLevel_SetThreshold@thresholdData,w
  5391  0D0B  0086               	movwf	6
  5392  0D0C  3001               	movlw	1	; select bank2/3
  5393  0D0D  0087               	movwf	7
  5394  0D0E  0801               	movf	1,w
  5395  0D0F  00A3               	movwf	??_SoundLevel_SetThreshold
  5396  0D10  0823               	movf	??_SoundLevel_SetThreshold,w
  5397  0D11  0141               	movlb	1	; select bank1
  5398  0D12  00D7               	movwf	_thresholdEnabled^(0+128)
  5399  0D13                     l6043:
  5400                           
  5401                           ;sound_level.c: 478: thresholdLevel = (uint16_t)((thresholdData[3]<<8) | thresholdData[4
      +                          ]);
  5402  0D13  0140               	movlb	0	; select bank0
  5403  0D14  0822               	movf	SoundLevel_SetThreshold@thresholdData,w
  5404  0D15  3E04               	addlw	4
  5405  0D16  0086               	movwf	6
  5406  0D17  3001               	movlw	1	; select bank2/3
  5407  0D18  0087               	movwf	7
  5408  0D19  0801               	movf	1,w
  5409  0D1A  00A3               	movwf	??_SoundLevel_SetThreshold
  5410  0D1B  01A4               	clrf	??_SoundLevel_SetThreshold+1
  5411  0D1C  0822               	movf	SoundLevel_SetThreshold@thresholdData,w
  5412  0D1D  3E03               	addlw	3
  5413  0D1E  0086               	movwf	6
  5414  0D1F  3001               	movlw	1	; select bank2/3
  5415  0D20  0087               	movwf	7
  5416  0D21  0801               	movf	1,w
  5417  0D22  00A5               	movwf	??_SoundLevel_SetThreshold+2
  5418  0D23  01A6               	clrf	??_SoundLevel_SetThreshold+3
  5419  0D24  0825               	movf	??_SoundLevel_SetThreshold+2,w
  5420  0D25  00A6               	movwf	??_SoundLevel_SetThreshold+3
  5421  0D26  01A5               	clrf	??_SoundLevel_SetThreshold+2
  5422  0D27  0823               	movf	??_SoundLevel_SetThreshold,w
  5423  0D28  0425               	iorwf	??_SoundLevel_SetThreshold+2,w
  5424  0D29  0142               	movlb	2	; select bank2
  5425  0D2A  00D5               	movwf	_thresholdLevel^(0+256)
  5426  0D2B  0140               	movlb	0	; select bank0
  5427  0D2C  0824               	movf	??_SoundLevel_SetThreshold+1,w
  5428  0D2D  0426               	iorwf	??_SoundLevel_SetThreshold+3,w
  5429  0D2E  0142               	movlb	2	; select bank2
  5430  0D2F  00D6               	movwf	(_thresholdLevel+1)^(0+256)
  5431  0D30                     l6045:
  5432                           
  5433                           ;sound_level.c: 480: if(thresholdEnabled)
  5434  0D30  0141               	movlb	1	; select bank1
  5435  0D31  0857               	movf	_thresholdEnabled^(0+128),w
  5436  0D32  1903               	btfsc	3,2
  5437  0D33  2D35               	goto	u6041
  5438  0D34  2D36               	goto	u6040
  5439  0D35                     u6041:
  5440  0D35  2D45               	goto	l321
  5441  0D36                     u6040:
  5442  0D36                     l319:	
  5443                           ;sound_level.c: 481: {;sound_level.c: 482: do { LATCbits.LATC0 = 1; } while(0);
  5444                           
  5445  0D36  0140               	movlb	0	; select bank0
  5446  0D37  141A               	bsf	26,0	;volatile
  5447  0D38                     l6047:
  5448                           
  5449                           ;sound_level.c: 483: _delay((unsigned long)((1)*(32000000/4000.0)));
  5450  0D38  300B               	movlw	11
  5451  0D39  0140               	movlb	0	; select bank0
  5452  0D3A  00A3               	movwf	??_SoundLevel_SetThreshold
  5453  0D3B  3062               	movlw	98
  5454  0D3C                     u6177:
  5455  0D3C  0B89               	decfsz	9,f
  5456  0D3D  2D3C               	goto	u6177
  5457  0D3E  0BA3               	decfsz	??_SoundLevel_SetThreshold,f
  5458  0D3F  2D3C               	goto	u6177
  5459  0D40  0000               	nop
  5460  0D41                     l6049:
  5461                           
  5462                           ;sound_level.c: 484: MIC_Mode(2);
  5463  0D41  3002               	movlw	2
  5464  0D42  3189  21C6  318D   	fcall	_MIC_Mode
  5465  0D45                     l321:
  5466  0D45  0008               	return
  5467  0D46                     __end_of_SoundLevel_SetThreshold:
  5468                           
  5469                           	psect	text3
  5470  08DF                     __ptext3:	
  5471 ;; *************** function _SoundLevel_Measure *****************
  5472 ;; Defined at:
  5473 ;;		line 348 in file "Sensors/sound_level.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		None
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    5
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _SoundLevel_Measure
  5503  08DF                     _SoundLevel_Measure:
  5504  08DF                     l5941:	
  5505                           ;incstack = 0
  5506                           ; Regs used in _SoundLevel_Measure: []
  5507                           
  5508                           
  5509                           ;sound_level.c: 349: polledMeasurement = 1;
  5510  08DF  0141               	movlb	1	; select bank1
  5511  08E0  01CF               	clrf	_polledMeasurement^(0+128)
  5512  08E1  0ACF               	incf	_polledMeasurement^(0+128),f
  5513  08E2                     l282:
  5514  08E2  0008               	return
  5515  08E3                     __end_of_SoundLevel_Measure:
  5516                           
  5517                           	psect	text4
  5518  04C8                     __ptext4:	
  5519 ;; *************** function _SoundLevel_Loop *****************
  5520 ;; Defined at:
  5521 ;;		line 354 in file "Sensors/sound_level.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5537 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5538 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5539 ;;Total ram usage:        1 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:   12
  5542 ;; This function calls:
  5543 ;;		_EnterSleep
  5544 ;;		_MIC_Mode
  5545 ;;		_generateInt
  5546 ;;		_measure
  5547 ;; This function is called by:
  5548 ;;		_main
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _SoundLevel_Loop
  5554  04C8                     _SoundLevel_Loop:
  5555  04C8                     l5943:	
  5556                           ;incstack = 0
  5557                           ; Regs used in _SoundLevel_Loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5558                           
  5559                           
  5560                           ;sound_level.c: 358: if(polledMeasurement && (WDTCON0bits.SEN == 0))
  5561  04C8  0141               	movlb	1	; select bank1
  5562  04C9  084F               	movf	_polledMeasurement^(0+128),w
  5563  04CA  1903               	btfsc	3,2
  5564  04CB  2CCD               	goto	u5941
  5565  04CC  2CCE               	goto	u5940
  5566  04CD                     u5941:
  5567  04CD  2D15               	goto	l5981
  5568  04CE                     u5940:
  5569  04CE                     l5945:
  5570  04CE  0150               	movlb	16	; select bank16
  5571  04CF  180C               	btfsc	12,0	;volatile
  5572  04D0  2CD2               	goto	u5951
  5573  04D1  2CD3               	goto	u5950
  5574  04D2                     u5951:
  5575  04D2  2D15               	goto	l5981
  5576  04D3                     u5950:
  5577  04D3                     l5947:
  5578                           
  5579                           ;sound_level.c: 359: {;sound_level.c: 360: if(thresholdEnabled)
  5580  04D3  0141               	movlb	1	; select bank1
  5581  04D4  0857               	movf	_thresholdEnabled^(0+128),w
  5582  04D5  1903               	btfsc	3,2
  5583  04D6  2CD8               	goto	u5961
  5584  04D7  2CD9               	goto	u5960
  5585  04D8                     u5961:
  5586  04D8  2CEA               	goto	l5961
  5587  04D9                     u5960:
  5588  04D9                     l5949:
  5589                           
  5590                           ;sound_level.c: 361: {;sound_level.c: 362: measurementRunning = 1;
  5591  04D9  01D2               	clrf	_measurementRunning^(0+128)
  5592  04DA  0AD2               	incf	_measurementRunning^(0+128),f
  5593  04DB                     l5951:
  5594                           
  5595                           ;sound_level.c: 363: measure();
  5596  04DB  318B  23D9  3184   	fcall	_measure
  5597  04DE                     l5953:
  5598                           
  5599                           ;sound_level.c: 364: measurementRunning = 0;
  5600  04DE  0141               	movlb	1	; select bank1
  5601  04DF  01D2               	clrf	_measurementRunning^(0+128)
  5602  04E0                     l5955:
  5603                           
  5604                           ;sound_level.c: 366: generateInt();
  5605  04E0  3189  219A  3184   	fcall	_generateInt
  5606  04E3                     l5957:
  5607                           
  5608                           ;sound_level.c: 368: MIC_Mode(2);
  5609  04E3  3002               	movlw	2
  5610  04E4  3189  21C6  3184   	fcall	_MIC_Mode
  5611  04E7                     l5959:
  5612                           
  5613                           ;sound_level.c: 371: polledMeasurement = 0;
  5614  04E7  0141               	movlb	1	; select bank1
  5615  04E8  01CF               	clrf	_polledMeasurement^(0+128)
  5616                           
  5617                           ;sound_level.c: 372: }
  5618  04E9  2D89               	goto	l308
  5619  04EA                     l5961:
  5620                           
  5621                           ;sound_level.c: 373: else if(!thresholdEnabled)
  5622  04EA  0857               	movf	_thresholdEnabled^(0+128),w
  5623  04EB  1D03               	btfss	3,2
  5624  04EC  2CEE               	goto	u5971
  5625  04ED  2CEF               	goto	u5970
  5626  04EE                     u5971:
  5627  04EE  2D89               	goto	l308
  5628  04EF                     u5970:
  5629  04EF                     l289:	
  5630                           ;sound_level.c: 374: {;sound_level.c: 375: do { LATCbits.LATC0 = 1; } while(0);
  5631                           
  5632  04EF  0140               	movlb	0	; select bank0
  5633  04F0  141A               	bsf	26,0	;volatile
  5634  04F1                     l5963:
  5635                           
  5636                           ;sound_level.c: 376: _delay((unsigned long)((1)*(32000000/4000.0)));
  5637  04F1  300B               	movlw	11
  5638  04F2  0140               	movlb	0	; select bank0
  5639  04F3  00EC               	movwf	??_SoundLevel_Loop
  5640  04F4  3062               	movlw	98
  5641  04F5                     u6187:
  5642  04F5  0B89               	decfsz	9,f
  5643  04F6  2CF5               	goto	u6187
  5644  04F7  0BEC               	decfsz	??_SoundLevel_Loop,f
  5645  04F8  2CF5               	goto	u6187
  5646  04F9  0000               	nop
  5647  04FA                     l5965:
  5648                           
  5649                           ;sound_level.c: 378: measurementRunning = 1;
  5650  04FA  0141               	movlb	1	; select bank1
  5651  04FB  01D2               	clrf	_measurementRunning^(0+128)
  5652  04FC  0AD2               	incf	_measurementRunning^(0+128),f
  5653  04FD                     l5967:
  5654                           
  5655                           ;sound_level.c: 379: measure();
  5656  04FD  318B  23D9  3184   	fcall	_measure
  5657  0500                     l5969:
  5658                           
  5659                           ;sound_level.c: 380: measurementRunning = 0;
  5660  0500  0141               	movlb	1	; select bank1
  5661  0501  01D2               	clrf	_measurementRunning^(0+128)
  5662  0502                     l5971:
  5663                           
  5664                           ;sound_level.c: 382: generateInt();
  5665  0502  3189  219A  3184   	fcall	_generateInt
  5666  0505                     l5973:
  5667  0505  0140               	movlb	0	; select bank0
  5668  0506  101A               	bcf	26,0	;volatile
  5669  0507                     l5975:
  5670                           
  5671                           ;sound_level.c: 385: _delay((unsigned long)((1)*(32000000/4000.0)));
  5672  0507  300B               	movlw	11
  5673  0508  0140               	movlb	0	; select bank0
  5674  0509  00EC               	movwf	??_SoundLevel_Loop
  5675  050A  3062               	movlw	98
  5676  050B                     u6197:
  5677  050B  0B89               	decfsz	9,f
  5678  050C  2D0B               	goto	u6197
  5679  050D  0BEC               	decfsz	??_SoundLevel_Loop,f
  5680  050E  2D0B               	goto	u6197
  5681  050F  0000               	nop
  5682  0510                     l5977:
  5683                           
  5684                           ;sound_level.c: 386: MIC_Mode(1);
  5685  0510  3001               	movlw	1
  5686  0511  3189  21C6  3184   	fcall	_MIC_Mode
  5687  0514  2CE7               	goto	l5959
  5688  0515                     l5981:
  5689                           
  5690                           ;sound_level.c: 391: else if(polledMeasurement && (WDTCON0bits.SEN == 1))
  5691  0515  0141               	movlb	1	; select bank1
  5692  0516  084F               	movf	_polledMeasurement^(0+128),w
  5693  0517  1903               	btfsc	3,2
  5694  0518  2D1A               	goto	u5981
  5695  0519  2D1B               	goto	u5980
  5696  051A                     u5981:
  5697  051A  2D3D               	goto	l6001
  5698  051B                     u5980:
  5699  051B                     l5983:
  5700  051B  0150               	movlb	16	; select bank16
  5701  051C  1C0C               	btfss	12,0	;volatile
  5702  051D  2D1F               	goto	u5991
  5703  051E  2D20               	goto	u5990
  5704  051F                     u5991:
  5705  051F  2D3D               	goto	l6001
  5706  0520                     u5990:
  5707  0520                     l295:	
  5708                           ;sound_level.c: 392: {;sound_level.c: 393: do { LATCbits.LATC0 = 1; } while(0);
  5709                           
  5710  0520  0140               	movlb	0	; select bank0
  5711  0521  141A               	bsf	26,0	;volatile
  5712  0522                     l5985:
  5713                           
  5714                           ;sound_level.c: 394: _delay((unsigned long)((1)*(32000000/4000.0)));
  5715  0522  300B               	movlw	11
  5716  0523  0140               	movlb	0	; select bank0
  5717  0524  00EC               	movwf	??_SoundLevel_Loop
  5718  0525  3062               	movlw	98
  5719  0526                     u6207:
  5720  0526  0B89               	decfsz	9,f
  5721  0527  2D26               	goto	u6207
  5722  0528  0BEC               	decfsz	??_SoundLevel_Loop,f
  5723  0529  2D26               	goto	u6207
  5724  052A  0000               	nop
  5725  052B                     l5987:
  5726                           
  5727                           ;sound_level.c: 396: measurementRunning = 1;
  5728  052B  0141               	movlb	1	; select bank1
  5729  052C  01D2               	clrf	_measurementRunning^(0+128)
  5730  052D  0AD2               	incf	_measurementRunning^(0+128),f
  5731  052E                     l5989:
  5732                           
  5733                           ;sound_level.c: 397: measure();
  5734  052E  318B  23D9  3184   	fcall	_measure
  5735  0531                     l5991:
  5736                           
  5737                           ;sound_level.c: 398: measurementRunning = 0;
  5738  0531  0141               	movlb	1	; select bank1
  5739  0532  01D2               	clrf	_measurementRunning^(0+128)
  5740  0533                     l5993:
  5741                           
  5742                           ;sound_level.c: 400: generateInt();
  5743  0533  3189  219A  3184   	fcall	_generateInt
  5744  0536                     l5995:
  5745                           
  5746                           ;sound_level.c: 406: MIC_Mode(2);
  5747  0536  3002               	movlw	2
  5748  0537  3189  21C6  3184   	fcall	_MIC_Mode
  5749  053A                     l5997:
  5750                           
  5751                           ;sound_level.c: 408: WDTCON0bits.SEN = 0;
  5752  053A  0150               	movlb	16	; select bank16
  5753  053B  100C               	bcf	12,0	;volatile
  5754  053C  2CE7               	goto	l5959
  5755  053D                     l6001:
  5756                           
  5757                           ;sound_level.c: 412: else if(soundinterrupt)
  5758  053D  0141               	movlb	1	; select bank1
  5759  053E  0853               	movf	_soundinterrupt^(0+128),w
  5760  053F  1903               	btfsc	3,2
  5761  0540  2D42               	goto	u6001
  5762  0541  2D43               	goto	u6000
  5763  0542                     u6001:
  5764  0542  2D70               	goto	l298
  5765  0543                     u6000:
  5766  0543                     l6003:
  5767                           
  5768                           ;sound_level.c: 413: {;sound_level.c: 414: measurementRunning = 1;
  5769  0543  01D2               	clrf	_measurementRunning^(0+128)
  5770  0544  0AD2               	incf	_measurementRunning^(0+128),f
  5771  0545                     l6005:
  5772                           
  5773                           ;sound_level.c: 415: measure();
  5774  0545  318B  23D9  3184   	fcall	_measure
  5775  0548                     l6007:
  5776                           
  5777                           ;sound_level.c: 416: measurementRunning = 0;
  5778  0548  0141               	movlb	1	; select bank1
  5779  0549  01D2               	clrf	_measurementRunning^(0+128)
  5780  054A                     l6009:
  5781                           
  5782                           ;sound_level.c: 418: if(overThreshold)
  5783  054A  084E               	movf	_overThreshold^(0+128),w
  5784  054B  1903               	btfsc	3,2
  5785  054C  2D4E               	goto	u6011
  5786  054D  2D4F               	goto	u6010
  5787  054E                     u6011:
  5788  054E  2D5C               	goto	l6019
  5789  054F                     u6010:
  5790  054F                     l6011:
  5791  054F  0064               	clrwdt	;# 
  5792                           
  5793                           ;sound_level.c: 421: WDTCON0bits.SEN = 1;
  5794  0550  0150               	movlb	16	; select bank16
  5795  0551  140C               	bsf	12,0	;volatile
  5796  0552                     l6013:
  5797                           
  5798                           ;sound_level.c: 423: generateInt();
  5799  0552  3189  219A  3184   	fcall	_generateInt
  5800  0555                     l6015:
  5801  0555  0140               	movlb	0	; select bank0
  5802  0556  101A               	bcf	26,0	;volatile
  5803  0557                     l6017:
  5804                           
  5805                           ;sound_level.c: 427: MIC_Mode(1);
  5806  0557  3001               	movlw	1
  5807  0558  3189  21C6  3184   	fcall	_MIC_Mode
  5808                           
  5809                           ;sound_level.c: 428: }else
  5810  055B  2D6D               	goto	l6025
  5811  055C                     l6019:
  5812                           
  5813                           ;sound_level.c: 429: {;sound_level.c: 430: MIC_Mode(1);
  5814  055C  3001               	movlw	1
  5815  055D  3189  21C6  3184   	fcall	_MIC_Mode
  5816  0560                     l6021:
  5817                           
  5818                           ;sound_level.c: 431: _delay((unsigned long)((10)*(32000000/4000.0)));
  5819  0560  3068               	movlw	104
  5820  0561  0140               	movlb	0	; select bank0
  5821  0562  00EC               	movwf	??_SoundLevel_Loop
  5822  0563  30E4               	movlw	228
  5823  0564                     u6217:
  5824  0564  0B89               	decfsz	9,f
  5825  0565  2D64               	goto	u6217
  5826  0566  0BEC               	decfsz	??_SoundLevel_Loop,f
  5827  0567  2D64               	goto	u6217
  5828  0568  0000               	nop
  5829  0569                     l6023:
  5830                           
  5831                           ;sound_level.c: 433: MIC_Mode(2);
  5832  0569  3002               	movlw	2
  5833  056A  3189  21C6  3184   	fcall	_MIC_Mode
  5834  056D                     l6025:
  5835                           
  5836                           ;sound_level.c: 435: };sound_level.c: 437: soundinterrupt = 0;
  5837  056D  0141               	movlb	1	; select bank1
  5838  056E  01D3               	clrf	_soundinterrupt^(0+128)
  5839                           
  5840                           ;sound_level.c: 438: }
  5841  056F  2D89               	goto	l308
  5842  0570                     l298:
  5843                           
  5844                           ;sound_level.c: 439: else if(STATUSbits.nTO == 0)
  5845  0570  0140               	movlb	0	; select bank0
  5846  0571  1A03               	btfsc	3,4	;volatile
  5847  0572  2D74               	goto	u6021
  5848  0573  2D75               	goto	u6020
  5849  0574                     u6021:
  5850  0574  2D86               	goto	l6033
  5851  0575                     u6020:
  5852  0575                     l6027:
  5853                           
  5854                           ;sound_level.c: 440: {;sound_level.c: 441: WDTCON0bits.SEN = 0;
  5855  0575  0150               	movlb	16	; select bank16
  5856  0576  100C               	bcf	12,0	;volatile
  5857  0577                     l305:	
  5858                           ;sound_level.c: 443: do { LATCbits.LATC0 = 1; } while(0);
  5859                           
  5860  0577  0140               	movlb	0	; select bank0
  5861  0578  141A               	bsf	26,0	;volatile
  5862  0579                     l6029:
  5863                           
  5864                           ;sound_level.c: 444: _delay((unsigned long)((1)*(32000000/4000.0)));
  5865  0579  300B               	movlw	11
  5866  057A  0140               	movlb	0	; select bank0
  5867  057B  00EC               	movwf	??_SoundLevel_Loop
  5868  057C  3062               	movlw	98
  5869  057D                     u6227:
  5870  057D  0B89               	decfsz	9,f
  5871  057E  2D7D               	goto	u6227
  5872  057F  0BEC               	decfsz	??_SoundLevel_Loop,f
  5873  0580  2D7D               	goto	u6227
  5874  0581  0000               	nop
  5875  0582                     l6031:
  5876                           
  5877                           ;sound_level.c: 445: MIC_Mode(2);
  5878  0582  3002               	movlw	2
  5879  0583  3189  21C6  3184   	fcall	_MIC_Mode
  5880  0586                     l6033:
  5881                           
  5882                           ;sound_level.c: 448: EnterSleep();
  5883  0586  3189  210D  3184   	fcall	_EnterSleep
  5884  0589                     l308:	
  5885                           ;sound_level.c: 449: }
  5886                           
  5887  0589  0008               	return
  5888  058A                     __end_of_SoundLevel_Loop:
  5889                           
  5890                           	psect	text5
  5891  0BD9                     __ptext5:	
  5892 ;; *************** function _measure *****************
  5893 ;; Defined at:
  5894 ;;		line 592 in file "Sensors/sound_level.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5912 ;;Total ram usage:        1 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:   11
  5915 ;; This function calls:
  5916 ;;		_AMPS_enable
  5917 ;;		_MIC_Mode
  5918 ;;		_SoundLevel_LedOff
  5919 ;;		_SoundLevel_LedOn
  5920 ;;		_SoundLevel_PrepareData
  5921 ;;		_SoundLevel_StartADC
  5922 ;; This function is called by:
  5923 ;;		_SoundLevel_Loop
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           
  5928                           ;psect for function _measure
  5929  0BD9                     _measure:
  5930  0BD9                     l5785:	
  5931                           ;incstack = 0
  5932                           ; Regs used in _measure: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5933                           
  5934                           
  5935                           ;sound_level.c: 594: SoundLevel_LedOn();
  5936  0BD9  3188  20D5  318B   	fcall	_SoundLevel_LedOn
  5937  0BDC                     l5787:
  5938                           
  5939                           ;sound_level.c: 596: MIC_Mode(1);
  5940  0BDC  3001               	movlw	1
  5941  0BDD  3189  21C6  318B   	fcall	_MIC_Mode
  5942  0BE0                     l5789:
  5943                           
  5944                           ;sound_level.c: 597: _delay((unsigned long)((10)*(32000000/4000.0)));
  5945  0BE0  3068               	movlw	104
  5946  0BE1  0140               	movlb	0	; select bank0
  5947  0BE2  00EB               	movwf	??_measure
  5948  0BE3  30E4               	movlw	228
  5949  0BE4                     u6237:
  5950  0BE4  0B89               	decfsz	9,f
  5951  0BE5  2BE4               	goto	u6237
  5952  0BE6  0BEB               	decfsz	??_measure,f
  5953  0BE7  2BE4               	goto	u6237
  5954  0BE8  0000               	nop
  5955  0BE9                     l5791:
  5956                           
  5957                           ;sound_level.c: 599: AMPS_enable(1);
  5958  0BE9  3001               	movlw	1
  5959  0BEA  318A  22C1  318B   	fcall	_AMPS_enable
  5960  0BED                     l5793:
  5961                           
  5962                           ;sound_level.c: 602: sampling = 1;
  5963  0BED  0141               	movlb	1	; select bank1
  5964  0BEE  01D1               	clrf	_sampling^(0+128)
  5965  0BEF  0AD1               	incf	_sampling^(0+128),f
  5966  0BF0                     l5795:
  5967                           
  5968                           ;sound_level.c: 603: sampleCounter = 0;
  5969  0BF0  01CB               	clrf	_sampleCounter^(0+128)
  5970  0BF1  01CC               	clrf	(_sampleCounter+1)^(0+128)
  5971  0BF2                     l5797:
  5972                           
  5973                           ;sound_level.c: 604: presSumSquared = 0;
  5974  0BF2  3000               	movlw	0
  5975  0BF3  00C2               	movwf	_presSumSquared^(0+128)
  5976  0BF4  3000               	movlw	0
  5977  0BF5  00C3               	movwf	(_presSumSquared+1)^(0+128)
  5978  0BF6  3000               	movlw	0
  5979  0BF7  00C4               	movwf	(_presSumSquared+2)^(0+128)
  5980  0BF8                     l5799:
  5981                           
  5982                           ;sound_level.c: 606: SoundLevel_StartADC();
  5983  0BF8  3189  211C  318B   	fcall	_SoundLevel_StartADC
  5984  0BFB                     l5801:	
  5985                           ;sound_level.c: 608: while(sampling);
  5986                           
  5987  0BFB  0141               	movlb	1	; select bank1
  5988  0BFC  0851               	movf	_sampling^(0+128),w
  5989  0BFD  1D03               	btfss	3,2
  5990  0BFE  2C00               	goto	u5861
  5991  0BFF  2C01               	goto	u5860
  5992  0C00                     u5861:
  5993  0C00  2BFB               	goto	l5801
  5994  0C01                     u5860:
  5995  0C01                     l5803:
  5996                           
  5997                           ;sound_level.c: 610: AMPS_enable(0);
  5998  0C01  3000               	movlw	0
  5999  0C02  318A  22C1  318B   	fcall	_AMPS_enable
  6000  0C05                     l5805:
  6001                           
  6002                           ;sound_level.c: 612: SoundLevel_PrepareData();
  6003  0C05  3180  207A  318B   	fcall	_SoundLevel_PrepareData
  6004  0C08                     l5807:
  6005                           
  6006                           ;sound_level.c: 614: SoundLevel_LedOff();
  6007  0C08  3188  20D2  318B   	fcall	_SoundLevel_LedOff
  6008  0C0B                     l371:
  6009  0C0B  0008               	return
  6010  0C0C                     __end_of_measure:
  6011                           
  6012                           	psect	text6
  6013  091C                     __ptext6:	
  6014 ;; *************** function _SoundLevel_StartADC *****************
  6015 ;; Defined at:
  6016 ;;		line 553 in file "Sensors/sound_level.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0, pclath, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6034 ;;Total ram usage:        0 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    6
  6037 ;; This function calls:
  6038 ;;		_ADCC_EnableContinuousConversion
  6039 ;;		_ADCC_StartConversion
  6040 ;; This function is called by:
  6041 ;;		_measure
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _SoundLevel_StartADC
  6047  091C                     _SoundLevel_StartADC:
  6048  091C                     l5759:	
  6049                           ;incstack = 0
  6050                           ; Regs used in _SoundLevel_StartADC: [wreg+status,2+status,0+pclath+cstack]
  6051                           
  6052                           
  6053                           ;sound_level.c: 554: ADCC_EnableContinuousConversion();
  6054  091C  3188  20D8  3189   	fcall	_ADCC_EnableContinuousConversion
  6055  091F                     l5761:
  6056                           
  6057                           ;sound_level.c: 555: ADCC_StartConversion(channel_ANC1);
  6058  091F  3011               	movlw	17
  6059  0920  3189  2136  3189   	fcall	_ADCC_StartConversion
  6060  0923                     l340:
  6061  0923  0008               	return
  6062  0924                     __end_of_SoundLevel_StartADC:
  6063                           
  6064                           	psect	text7
  6065  0936                     __ptext7:	
  6066 ;; *************** function _ADCC_StartConversion *****************
  6067 ;; Defined at:
  6068 ;;		line 97 in file "system/adcc.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  channel         1    wreg     enum E10752
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  channel         1    0[BANK0 ] enum E10752
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6085 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6086 ;;Total ram usage:        1 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    5
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_SoundLevel_StartADC
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function _ADCC_StartConversion
  6098  0936                     _ADCC_StartConversion:
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _ADCC_StartConversion: [wreg]
  6102                           ;ADCC_StartConversion@channel stored from wreg
  6103  0936  0140               	movlb	0	; select bank0
  6104  0937  00A0               	movwf	ADCC_StartConversion@channel
  6105  0938                     l5615:
  6106                           
  6107                           ;adcc.c: 100: ADPCH = channel;
  6108  0938  0820               	movf	ADCC_StartConversion@channel,w
  6109  0939  0141               	movlb	1	; select bank1
  6110  093A  009F               	movwf	31	;volatile
  6111  093B                     l5617:
  6112                           
  6113                           ;adcc.c: 103: ADCON0bits.ADON = 1;
  6114  093B  0142               	movlb	2	; select bank2
  6115  093C  1791               	bsf	17,7	;volatile
  6116  093D                     l5619:
  6117                           
  6118                           ;adcc.c: 106: ADCON0bits.ADGO = 1;
  6119  093D  1411               	bsf	17,0	;volatile
  6120  093E                     l469:
  6121  093E  0008               	return
  6122  093F                     __end_of_ADCC_StartConversion:
  6123                           
  6124                           	psect	text8
  6125  08D8                     __ptext8:	
  6126 ;; *************** function _ADCC_EnableContinuousConversion *****************
  6127 ;; Defined at:
  6128 ;;		line 253 in file "system/adcc.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		None
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    5
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_SoundLevel_StartADC
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _ADCC_EnableContinuousConversion
  6158  08D8                     _ADCC_EnableContinuousConversion:
  6159  08D8                     l5613:	
  6160                           ;incstack = 0
  6161                           ; Regs used in _ADCC_EnableContinuousConversion: []
  6162                           
  6163                           
  6164                           ;adcc.c: 256: ADCON0bits.ADCONT = 1;
  6165  08D8  0142               	movlb	2	; select bank2
  6166  08D9  1711               	bsf	17,6	;volatile
  6167  08DA                     l535:
  6168  08DA  0008               	return
  6169  08DB                     __end_of_ADCC_EnableContinuousConversion:
  6170                           
  6171                           	psect	text9
  6172  007A                     __ptext9:	
  6173 ;; *************** function _SoundLevel_PrepareData *****************
  6174 ;; Defined at:
  6175 ;;		line 491 in file "Sensors/sound_level.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  signal          3   22[BANK1 ] float 
  6180 ;;  i               2   27[BANK1 ] int 
  6181 ;;  i               2   25[BANK1 ] int 
  6182 ;;  sampleSum       4    4[BANK1 ] unsigned long 
  6183 ;;  mean            3   29[BANK1 ] float 
  6184 ;;  dBZ             3   19[BANK1 ] float 
  6185 ;;  presAvgSquar    3   14[BANK1 ] float 
  6186 ;;  dataToSend      2   17[BANK1 ] unsigned int 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6197 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6199 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6200 ;;Total ram usage:       32 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:   10
  6203 ;; This function calls:
  6204 ;;		___ftadd
  6205 ;;		___ftdiv
  6206 ;;		___ftge
  6207 ;;		___ftmul
  6208 ;;		___ftsub
  6209 ;;		___fttol
  6210 ;;		___lwtoft
  6211 ;;		_log10
  6212 ;;		_round
  6213 ;; This function is called by:
  6214 ;;		_measure
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _SoundLevel_PrepareData
  6220  007A                     _SoundLevel_PrepareData:
  6221  007A                     l5701:	
  6222                           ;incstack = 0
  6223                           ; Regs used in _SoundLevel_PrepareData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6224                           
  6225                           
  6226                           ;sound_level.c: 493: uint32_t sampleSum = 0;
  6227  007A  3000               	movlw	0
  6228  007B  0141               	movlb	1	; select bank1
  6229  007C  00A7               	movwf	(SoundLevel_PrepareData@sampleSum+3)^(0+128)
  6230  007D  3000               	movlw	0
  6231  007E  00A6               	movwf	(SoundLevel_PrepareData@sampleSum+2)^(0+128)
  6232  007F  3000               	movlw	0
  6233  0080  00A5               	movwf	(SoundLevel_PrepareData@sampleSum+1)^(0+128)
  6234  0081  3000               	movlw	0
  6235  0082  00A4               	movwf	SoundLevel_PrepareData@sampleSum^(0+128)
  6236                           
  6237                           ;sound_level.c: 495: float mean = 0;
  6238  0083  3000               	movlw	0
  6239  0084  00BD               	movwf	SoundLevel_PrepareData@mean^(0+128)
  6240  0085  3000               	movlw	0
  6241  0086  00BE               	movwf	(SoundLevel_PrepareData@mean+1)^(0+128)
  6242  0087  3000               	movlw	0
  6243  0088  00BF               	movwf	(SoundLevel_PrepareData@mean+2)^(0+128)
  6244  0089                     l5703:
  6245                           
  6246                           ;sound_level.c: 496: for(int i=0; i<400; i++)
  6247  0089  01B9               	clrf	SoundLevel_PrepareData@i^(0+128)
  6248  008A  01BA               	clrf	(SoundLevel_PrepareData@i+1)^(0+128)
  6249  008B                     l5709:
  6250                           
  6251                           ;sound_level.c: 497: {;sound_level.c: 498: mean += sampleArray[i];
  6252  008B  0141               	movlb	1	; select bank1
  6253  008C  083A               	movf	(SoundLevel_PrepareData@i+1)^(0+128),w
  6254  008D  00A1               	movwf	(??_SoundLevel_PrepareData^(0+128)+1)
  6255  008E  0839               	movf	SoundLevel_PrepareData@i^(0+128),w
  6256  008F  00A0               	movwf	??_SoundLevel_PrepareData^(0+128)
  6257  0090  35A0               	lslf	??_SoundLevel_PrepareData^(0+128),f
  6258  0091  0DA1               	rlf	(??_SoundLevel_PrepareData^(0+128)+1),f
  6259  0092  30D0               	movlw	208
  6260  0093  00A2               	movwf	(??_SoundLevel_PrepareData+2)^(0+128)
  6261  0094  3024               	movlw	36
  6262  0095  00A3               	movwf	((??_SoundLevel_PrepareData+2)^(0+128)+1)
  6263  0096  0820               	movf	??_SoundLevel_PrepareData^(0+128),w
  6264  0097  0722               	addwf	(??_SoundLevel_PrepareData+2)^(0+128),w
  6265  0098  0086               	movwf	6
  6266  0099  0821               	movf	(??_SoundLevel_PrepareData+1)^(0+128),w
  6267  009A  3D23               	addwfc	(??_SoundLevel_PrepareData+3)^(0+128),w
  6268  009B  0087               	movwf	7
  6269  009C  3F40               	moviw [0]fsr1
  6270  009D  0140               	movlb	0	; select bank0
  6271  009E  00A8               	movwf	___lwtoft@c
  6272  009F  3F41               	moviw [1]fsr1
  6273  00A0  00A9               	movwf	___lwtoft@c+1
  6274  00A1  3189  21EB  3180   	fcall	___lwtoft
  6275  00A4  0140               	movlb	0	; select bank0
  6276  00A5  0828               	movf	?___lwtoft,w
  6277  00A6  00AE               	movwf	___ftadd@f1
  6278  00A7  0829               	movf	?___lwtoft+1,w
  6279  00A8  00AF               	movwf	___ftadd@f1+1
  6280  00A9  082A               	movf	?___lwtoft+2,w
  6281  00AA  00B0               	movwf	___ftadd@f1+2
  6282  00AB  0141               	movlb	1	; select bank1
  6283  00AC  083D               	movf	SoundLevel_PrepareData@mean^(0+128),w
  6284  00AD  0140               	movlb	0	; select bank0
  6285  00AE  00B1               	movwf	___ftadd@f2
  6286  00AF  0141               	movlb	1	; select bank1
  6287  00B0  083E               	movf	(SoundLevel_PrepareData@mean+1)^(0+128),w
  6288  00B1  0140               	movlb	0	; select bank0
  6289  00B2  00B2               	movwf	___ftadd@f2+1
  6290  00B3  0141               	movlb	1	; select bank1
  6291  00B4  083F               	movf	(SoundLevel_PrepareData@mean+2)^(0+128),w
  6292  00B5  0140               	movlb	0	; select bank0
  6293  00B6  00B3               	movwf	___ftadd@f2+2
  6294  00B7  3182  22BC  3180   	fcall	___ftadd
  6295  00BA  0140               	movlb	0	; select bank0
  6296  00BB  082E               	movf	?___ftadd,w
  6297  00BC  0141               	movlb	1	; select bank1
  6298  00BD  00BD               	movwf	SoundLevel_PrepareData@mean^(0+128)
  6299  00BE  0140               	movlb	0	; select bank0
  6300  00BF  082F               	movf	?___ftadd+1,w
  6301  00C0  0141               	movlb	1	; select bank1
  6302  00C1  00BE               	movwf	(SoundLevel_PrepareData@mean+1)^(0+128)
  6303  00C2  0140               	movlb	0	; select bank0
  6304  00C3  0830               	movf	?___ftadd+2,w
  6305  00C4  0141               	movlb	1	; select bank1
  6306  00C5  00BF               	movwf	(SoundLevel_PrepareData@mean+2)^(0+128)
  6307  00C6                     l5711:
  6308  00C6  3001               	movlw	1
  6309  00C7  07B9               	addwf	SoundLevel_PrepareData@i^(0+128),f
  6310  00C8  3000               	movlw	0
  6311  00C9  3DBA               	addwfc	(SoundLevel_PrepareData@i+1)^(0+128),f
  6312  00CA                     l5713:
  6313  00CA  083A               	movf	(SoundLevel_PrepareData@i+1)^(0+128),w
  6314  00CB  3A80               	xorlw	128
  6315  00CC  00A0               	movwf	??_SoundLevel_PrepareData^(0+128)
  6316  00CD  3081               	movlw	129
  6317  00CE  0220               	subwf	??_SoundLevel_PrepareData^(0+128),w
  6318  00CF  1D03               	skipz
  6319  00D0  28D3               	goto	u5815
  6320  00D1  3090               	movlw	144
  6321  00D2  0239               	subwf	SoundLevel_PrepareData@i^(0+128),w
  6322  00D3                     u5815:
  6323  00D3  1C03               	skipc
  6324  00D4  28D6               	goto	u5811
  6325  00D5  28D7               	goto	u5810
  6326  00D6                     u5811:
  6327  00D6  288B               	goto	l5709
  6328  00D7                     u5810:
  6329  00D7                     l5715:
  6330                           
  6331                           ;sound_level.c: 499: };sound_level.c: 500: mean /= 400;
  6332  00D7  3000               	movlw	0
  6333  00D8  0140               	movlb	0	; select bank0
  6334  00D9  00A8               	movwf	___ftdiv@f2
  6335  00DA  30C8               	movlw	200
  6336  00DB  00A9               	movwf	___ftdiv@f2+1
  6337  00DC  3043               	movlw	67
  6338  00DD  00AA               	movwf	___ftdiv@f2+2
  6339  00DE  0141               	movlb	1	; select bank1
  6340  00DF  083D               	movf	SoundLevel_PrepareData@mean^(0+128),w
  6341  00E0  0140               	movlb	0	; select bank0
  6342  00E1  00AB               	movwf	___ftdiv@f1
  6343  00E2  0141               	movlb	1	; select bank1
  6344  00E3  083E               	movf	(SoundLevel_PrepareData@mean+1)^(0+128),w
  6345  00E4  0140               	movlb	0	; select bank0
  6346  00E5  00AC               	movwf	___ftdiv@f1+1
  6347  00E6  0141               	movlb	1	; select bank1
  6348  00E7  083F               	movf	(SoundLevel_PrepareData@mean+2)^(0+128),w
  6349  00E8  0140               	movlb	0	; select bank0
  6350  00E9  00AD               	movwf	___ftdiv@f1+2
  6351  00EA  3187  2700  3180   	fcall	___ftdiv
  6352  00ED  0140               	movlb	0	; select bank0
  6353  00EE  0828               	movf	?___ftdiv,w
  6354  00EF  0141               	movlb	1	; select bank1
  6355  00F0  00BD               	movwf	SoundLevel_PrepareData@mean^(0+128)
  6356  00F1  0140               	movlb	0	; select bank0
  6357  00F2  0829               	movf	?___ftdiv+1,w
  6358  00F3  0141               	movlb	1	; select bank1
  6359  00F4  00BE               	movwf	(SoundLevel_PrepareData@mean+1)^(0+128)
  6360  00F5  0140               	movlb	0	; select bank0
  6361  00F6  082A               	movf	?___ftdiv+2,w
  6362  00F7  0141               	movlb	1	; select bank1
  6363  00F8  00BF               	movwf	(SoundLevel_PrepareData@mean+2)^(0+128)
  6364  00F9                     l5717:
  6365                           
  6366                           ;sound_level.c: 502: for(int i=0; i<400; i++)
  6367  00F9  01BB               	clrf	SoundLevel_PrepareData@i_663^(0+128)
  6368  00FA  01BC               	clrf	(SoundLevel_PrepareData@i_663+1)^(0+128)
  6369  00FB                     l5723:
  6370                           
  6371                           ;sound_level.c: 503: {;sound_level.c: 504: float signal = (sampleArray[i] - mean) * adcS
      +                          caler;
  6372  00FB  0142               	movlb	2	; select bank2
  6373  00FC  0820               	movf	_adcScaler^(0+256),w
  6374  00FD  0140               	movlb	0	; select bank0
  6375  00FE  00C5               	movwf	___ftmul@f1
  6376  00FF  0142               	movlb	2	; select bank2
  6377  0100  0821               	movf	(_adcScaler+1)^(0+256),w
  6378  0101  0140               	movlb	0	; select bank0
  6379  0102  00C6               	movwf	___ftmul@f1+1
  6380  0103  0142               	movlb	2	; select bank2
  6381  0104  0822               	movf	(_adcScaler+2)^(0+256),w
  6382  0105  0140               	movlb	0	; select bank0
  6383  0106  00C7               	movwf	___ftmul@f1+2
  6384  0107  0141               	movlb	1	; select bank1
  6385  0108  083D               	movf	SoundLevel_PrepareData@mean^(0+128),w
  6386  0109  0140               	movlb	0	; select bank0
  6387  010A  00BF               	movwf	___ftsub@f2
  6388  010B  0141               	movlb	1	; select bank1
  6389  010C  083E               	movf	(SoundLevel_PrepareData@mean+1)^(0+128),w
  6390  010D  0140               	movlb	0	; select bank0
  6391  010E  00C0               	movwf	___ftsub@f2+1
  6392  010F  0141               	movlb	1	; select bank1
  6393  0110  083F               	movf	(SoundLevel_PrepareData@mean+2)^(0+128),w
  6394  0111  0140               	movlb	0	; select bank0
  6395  0112  00C1               	movwf	___ftsub@f2+2
  6396  0113  0141               	movlb	1	; select bank1
  6397  0114  083C               	movf	(SoundLevel_PrepareData@i_663+1)^(0+128),w
  6398  0115  00A1               	movwf	(??_SoundLevel_PrepareData^(0+128)+1)
  6399  0116  083B               	movf	SoundLevel_PrepareData@i_663^(0+128),w
  6400  0117  00A0               	movwf	??_SoundLevel_PrepareData^(0+128)
  6401  0118  35A0               	lslf	??_SoundLevel_PrepareData^(0+128),f
  6402  0119  0DA1               	rlf	(??_SoundLevel_PrepareData^(0+128)+1),f
  6403  011A  30D0               	movlw	208
  6404  011B  00A2               	movwf	(??_SoundLevel_PrepareData+2)^(0+128)
  6405  011C  3024               	movlw	36
  6406  011D  00A3               	movwf	((??_SoundLevel_PrepareData+2)^(0+128)+1)
  6407  011E  0820               	movf	??_SoundLevel_PrepareData^(0+128),w
  6408  011F  0722               	addwf	(??_SoundLevel_PrepareData+2)^(0+128),w
  6409  0120  0086               	movwf	6
  6410  0121  0821               	movf	(??_SoundLevel_PrepareData+1)^(0+128),w
  6411  0122  3D23               	addwfc	(??_SoundLevel_PrepareData+3)^(0+128),w
  6412  0123  0087               	movwf	7
  6413  0124  3F40               	moviw [0]fsr1
  6414  0125  0140               	movlb	0	; select bank0
  6415  0126  00A8               	movwf	___lwtoft@c
  6416  0127  3F41               	moviw [1]fsr1
  6417  0128  00A9               	movwf	___lwtoft@c+1
  6418  0129  3189  21EB  3180   	fcall	___lwtoft
  6419  012C  0140               	movlb	0	; select bank0
  6420  012D  0828               	movf	?___lwtoft,w
  6421  012E  00C2               	movwf	___ftsub@f1
  6422  012F  0829               	movf	?___lwtoft+1,w
  6423  0130  00C3               	movwf	___ftsub@f1+1
  6424  0131  082A               	movf	?___lwtoft+2,w
  6425  0132  00C4               	movwf	___ftsub@f1+2
  6426  0133  318A  227E  3180   	fcall	___ftsub
  6427  0136  0140               	movlb	0	; select bank0
  6428  0137  083F               	movf	?___ftsub,w
  6429  0138  00C8               	movwf	___ftmul@f2
  6430  0139  0840               	movf	?___ftsub+1,w
  6431  013A  00C9               	movwf	___ftmul@f2+1
  6432  013B  0841               	movf	?___ftsub+2,w
  6433  013C  00CA               	movwf	___ftmul@f2+2
  6434  013D  3185  258A  3180   	fcall	___ftmul
  6435  0140  0140               	movlb	0	; select bank0
  6436  0141  0845               	movf	?___ftmul,w
  6437  0142  0141               	movlb	1	; select bank1
  6438  0143  00B6               	movwf	SoundLevel_PrepareData@signal^(0+128)
  6439  0144  0140               	movlb	0	; select bank0
  6440  0145  0846               	movf	?___ftmul+1,w
  6441  0146  0141               	movlb	1	; select bank1
  6442  0147  00B7               	movwf	(SoundLevel_PrepareData@signal+1)^(0+128)
  6443  0148  0140               	movlb	0	; select bank0
  6444  0149  0847               	movf	?___ftmul+2,w
  6445  014A  0141               	movlb	1	; select bank1
  6446  014B  00B8               	movwf	(SoundLevel_PrepareData@signal+2)^(0+128)
  6447  014C                     l5725:
  6448                           
  6449                           ;sound_level.c: 505: signal *= signal;
  6450  014C  0836               	movf	SoundLevel_PrepareData@signal^(0+128),w
  6451  014D  0140               	movlb	0	; select bank0
  6452  014E  00C5               	movwf	___ftmul@f1
  6453  014F  0141               	movlb	1	; select bank1
  6454  0150  0837               	movf	(SoundLevel_PrepareData@signal+1)^(0+128),w
  6455  0151  0140               	movlb	0	; select bank0
  6456  0152  00C6               	movwf	___ftmul@f1+1
  6457  0153  0141               	movlb	1	; select bank1
  6458  0154  0838               	movf	(SoundLevel_PrepareData@signal+2)^(0+128),w
  6459  0155  0140               	movlb	0	; select bank0
  6460  0156  00C7               	movwf	___ftmul@f1+2
  6461  0157  0141               	movlb	1	; select bank1
  6462  0158  0836               	movf	SoundLevel_PrepareData@signal^(0+128),w
  6463  0159  0140               	movlb	0	; select bank0
  6464  015A  00C8               	movwf	___ftmul@f2
  6465  015B  0141               	movlb	1	; select bank1
  6466  015C  0837               	movf	(SoundLevel_PrepareData@signal+1)^(0+128),w
  6467  015D  0140               	movlb	0	; select bank0
  6468  015E  00C9               	movwf	___ftmul@f2+1
  6469  015F  0141               	movlb	1	; select bank1
  6470  0160  0838               	movf	(SoundLevel_PrepareData@signal+2)^(0+128),w
  6471  0161  0140               	movlb	0	; select bank0
  6472  0162  00CA               	movwf	___ftmul@f2+2
  6473  0163  3185  258A  3180   	fcall	___ftmul
  6474  0166  0140               	movlb	0	; select bank0
  6475  0167  0845               	movf	?___ftmul,w
  6476  0168  0141               	movlb	1	; select bank1
  6477  0169  00B6               	movwf	SoundLevel_PrepareData@signal^(0+128)
  6478  016A  0140               	movlb	0	; select bank0
  6479  016B  0846               	movf	?___ftmul+1,w
  6480  016C  0141               	movlb	1	; select bank1
  6481  016D  00B7               	movwf	(SoundLevel_PrepareData@signal+1)^(0+128)
  6482  016E  0140               	movlb	0	; select bank0
  6483  016F  0847               	movf	?___ftmul+2,w
  6484  0170  0141               	movlb	1	; select bank1
  6485  0171  00B8               	movwf	(SoundLevel_PrepareData@signal+2)^(0+128)
  6486  0172                     l5727:
  6487                           
  6488                           ;sound_level.c: 506: presSumSquared += signal;
  6489  0172  0836               	movf	SoundLevel_PrepareData@signal^(0+128),w
  6490  0173  0140               	movlb	0	; select bank0
  6491  0174  00AE               	movwf	___ftadd@f1
  6492  0175  0141               	movlb	1	; select bank1
  6493  0176  0837               	movf	(SoundLevel_PrepareData@signal+1)^(0+128),w
  6494  0177  0140               	movlb	0	; select bank0
  6495  0178  00AF               	movwf	___ftadd@f1+1
  6496  0179  0141               	movlb	1	; select bank1
  6497  017A  0838               	movf	(SoundLevel_PrepareData@signal+2)^(0+128),w
  6498  017B  0140               	movlb	0	; select bank0
  6499  017C  00B0               	movwf	___ftadd@f1+2
  6500  017D  0141               	movlb	1	; select bank1
  6501  017E  0842               	movf	_presSumSquared^(0+128),w
  6502  017F  0140               	movlb	0	; select bank0
  6503  0180  00B1               	movwf	___ftadd@f2
  6504  0181  0141               	movlb	1	; select bank1
  6505  0182  0843               	movf	(_presSumSquared+1)^(0+128),w
  6506  0183  0140               	movlb	0	; select bank0
  6507  0184  00B2               	movwf	___ftadd@f2+1
  6508  0185  0141               	movlb	1	; select bank1
  6509  0186  0844               	movf	(_presSumSquared+2)^(0+128),w
  6510  0187  0140               	movlb	0	; select bank0
  6511  0188  00B3               	movwf	___ftadd@f2+2
  6512  0189  3182  22BC  3180   	fcall	___ftadd
  6513  018C  0140               	movlb	0	; select bank0
  6514  018D  082E               	movf	?___ftadd,w
  6515  018E  0141               	movlb	1	; select bank1
  6516  018F  00C2               	movwf	_presSumSquared^(0+128)
  6517  0190  0140               	movlb	0	; select bank0
  6518  0191  082F               	movf	?___ftadd+1,w
  6519  0192  0141               	movlb	1	; select bank1
  6520  0193  00C3               	movwf	(_presSumSquared+1)^(0+128)
  6521  0194  0140               	movlb	0	; select bank0
  6522  0195  0830               	movf	?___ftadd+2,w
  6523  0196  0141               	movlb	1	; select bank1
  6524  0197  00C4               	movwf	(_presSumSquared+2)^(0+128)
  6525  0198                     l5729:
  6526  0198  3001               	movlw	1
  6527  0199  07BB               	addwf	SoundLevel_PrepareData@i_663^(0+128),f
  6528  019A  3000               	movlw	0
  6529  019B  3DBC               	addwfc	(SoundLevel_PrepareData@i_663+1)^(0+128),f
  6530  019C                     l5731:
  6531  019C  083C               	movf	(SoundLevel_PrepareData@i_663+1)^(0+128),w
  6532  019D  3A80               	xorlw	128
  6533  019E  00A0               	movwf	??_SoundLevel_PrepareData^(0+128)
  6534  019F  3081               	movlw	129
  6535  01A0  0220               	subwf	??_SoundLevel_PrepareData^(0+128),w
  6536  01A1  1D03               	skipz
  6537  01A2  29A5               	goto	u5825
  6538  01A3  3090               	movlw	144
  6539  01A4  023B               	subwf	SoundLevel_PrepareData@i_663^(0+128),w
  6540  01A5                     u5825:
  6541  01A5  1C03               	skipc
  6542  01A6  29A8               	goto	u5821
  6543  01A7  29A9               	goto	u5820
  6544  01A8                     u5821:
  6545  01A8  28FB               	goto	l5723
  6546  01A9                     u5820:
  6547  01A9                     l5733:
  6548                           
  6549                           ;sound_level.c: 507: };sound_level.c: 509: float presAvgSquared = presSumSquared/400;
  6550  01A9  3000               	movlw	0
  6551  01AA  0140               	movlb	0	; select bank0
  6552  01AB  00A8               	movwf	___ftdiv@f2
  6553  01AC  30C8               	movlw	200
  6554  01AD  00A9               	movwf	___ftdiv@f2+1
  6555  01AE  3043               	movlw	67
  6556  01AF  00AA               	movwf	___ftdiv@f2+2
  6557  01B0  0141               	movlb	1	; select bank1
  6558  01B1  0842               	movf	_presSumSquared^(0+128),w
  6559  01B2  0140               	movlb	0	; select bank0
  6560  01B3  00AB               	movwf	___ftdiv@f1
  6561  01B4  0141               	movlb	1	; select bank1
  6562  01B5  0843               	movf	(_presSumSquared+1)^(0+128),w
  6563  01B6  0140               	movlb	0	; select bank0
  6564  01B7  00AC               	movwf	___ftdiv@f1+1
  6565  01B8  0141               	movlb	1	; select bank1
  6566  01B9  0844               	movf	(_presSumSquared+2)^(0+128),w
  6567  01BA  0140               	movlb	0	; select bank0
  6568  01BB  00AD               	movwf	___ftdiv@f1+2
  6569  01BC  3187  2700  3180   	fcall	___ftdiv
  6570  01BF  0140               	movlb	0	; select bank0
  6571  01C0  0828               	movf	?___ftdiv,w
  6572  01C1  0141               	movlb	1	; select bank1
  6573  01C2  00AE               	movwf	SoundLevel_PrepareData@presAvgSquared^(0+128)
  6574  01C3  0140               	movlb	0	; select bank0
  6575  01C4  0829               	movf	?___ftdiv+1,w
  6576  01C5  0141               	movlb	1	; select bank1
  6577  01C6  00AF               	movwf	(SoundLevel_PrepareData@presAvgSquared+1)^(0+128)
  6578  01C7  0140               	movlb	0	; select bank0
  6579  01C8  082A               	movf	?___ftdiv+2,w
  6580  01C9  0141               	movlb	1	; select bank1
  6581  01CA  00B0               	movwf	(SoundLevel_PrepareData@presAvgSquared+2)^(0+128)
  6582                           
  6583                           ;sound_level.c: 511: if( (presAvgSquared/(20e-6 * 20e-6)) != 0.0 )
  6584  01CB  30E7               	movlw	231
  6585  01CC  0140               	movlb	0	; select bank0
  6586  01CD  00A8               	movwf	___ftdiv@f2
  6587  01CE  30DB               	movlw	219
  6588  01CF  00A9               	movwf	___ftdiv@f2+1
  6589  01D0  302F               	movlw	47
  6590  01D1  00AA               	movwf	___ftdiv@f2+2
  6591  01D2  0141               	movlb	1	; select bank1
  6592  01D3  082E               	movf	SoundLevel_PrepareData@presAvgSquared^(0+128),w
  6593  01D4  0140               	movlb	0	; select bank0
  6594  01D5  00AB               	movwf	___ftdiv@f1
  6595  01D6  0141               	movlb	1	; select bank1
  6596  01D7  082F               	movf	(SoundLevel_PrepareData@presAvgSquared+1)^(0+128),w
  6597  01D8  0140               	movlb	0	; select bank0
  6598  01D9  00AC               	movwf	___ftdiv@f1+1
  6599  01DA  0141               	movlb	1	; select bank1
  6600  01DB  0830               	movf	(SoundLevel_PrepareData@presAvgSquared+2)^(0+128),w
  6601  01DC  0140               	movlb	0	; select bank0
  6602  01DD  00AD               	movwf	___ftdiv@f1+2
  6603  01DE  3187  2700  3180   	fcall	___ftdiv
  6604  01E1  0140               	movlb	0	; select bank0
  6605  01E2  082A               	movf	?___ftdiv+2,w
  6606  01E3  0429               	iorwf	?___ftdiv+1,w
  6607  01E4  0428               	iorwf	?___ftdiv,w
  6608  01E5  1903               	skipnz
  6609  01E6  29E8               	goto	u5831
  6610  01E7  29E9               	goto	u5830
  6611  01E8                     u5831:
  6612  01E8  2A37               	goto	l5739
  6613  01E9                     u5830:
  6614  01E9                     l5735:
  6615                           
  6616                           ;sound_level.c: 512: {;sound_level.c: 513: dBZ = 10 * log10(presAvgSquared/(20e-6 * 20e-
      +                          6));
  6617  01E9  30E7               	movlw	231
  6618  01EA  00A8               	movwf	___ftdiv@f2
  6619  01EB  30DB               	movlw	219
  6620  01EC  00A9               	movwf	___ftdiv@f2+1
  6621  01ED  302F               	movlw	47
  6622  01EE  00AA               	movwf	___ftdiv@f2+2
  6623  01EF  0141               	movlb	1	; select bank1
  6624  01F0  082E               	movf	SoundLevel_PrepareData@presAvgSquared^(0+128),w
  6625  01F1  0140               	movlb	0	; select bank0
  6626  01F2  00AB               	movwf	___ftdiv@f1
  6627  01F3  0141               	movlb	1	; select bank1
  6628  01F4  082F               	movf	(SoundLevel_PrepareData@presAvgSquared+1)^(0+128),w
  6629  01F5  0140               	movlb	0	; select bank0
  6630  01F6  00AC               	movwf	___ftdiv@f1+1
  6631  01F7  0141               	movlb	1	; select bank1
  6632  01F8  0830               	movf	(SoundLevel_PrepareData@presAvgSquared+2)^(0+128),w
  6633  01F9  0140               	movlb	0	; select bank0
  6634  01FA  00AD               	movwf	___ftdiv@f1+2
  6635  01FB  3187  2700  3180   	fcall	___ftdiv
  6636  01FE  0140               	movlb	0	; select bank0
  6637  01FF  0828               	movf	?___ftdiv,w
  6638  0200  00E5               	movwf	log10@x
  6639  0201  0829               	movf	?___ftdiv+1,w
  6640  0202  00E6               	movwf	log10@x+1
  6641  0203  082A               	movf	?___ftdiv+2,w
  6642  0204  00E7               	movwf	log10@x+2
  6643  0205  318B  2332  3180   	fcall	_log10
  6644  0208  0140               	movlb	0	; select bank0
  6645  0209  0865               	movf	?_log10,w
  6646  020A  0141               	movlb	1	; select bank1
  6647  020B  00A8               	movwf	_SoundLevel_PrepareData$2651^(0+128)
  6648  020C  0140               	movlb	0	; select bank0
  6649  020D  0866               	movf	?_log10+1,w
  6650  020E  0141               	movlb	1	; select bank1
  6651  020F  00A9               	movwf	(_SoundLevel_PrepareData$2651+1)^(0+128)
  6652  0210  0140               	movlb	0	; select bank0
  6653  0211  0867               	movf	?_log10+2,w
  6654  0212  0141               	movlb	1	; select bank1
  6655  0213  00AA               	movwf	(_SoundLevel_PrepareData$2651+2)^(0+128)
  6656  0214                     l5737:
  6657                           
  6658                           ;sound_level.c: 512: {;sound_level.c: 513: dBZ = 10 * log10(presAvgSquared/(20e-6 * 20e-
      +                          6));
  6659  0214  3000               	movlw	0
  6660  0215  0140               	movlb	0	; select bank0
  6661  0216  00C5               	movwf	___ftmul@f1
  6662  0217  3020               	movlw	32
  6663  0218  00C6               	movwf	___ftmul@f1+1
  6664  0219  3041               	movlw	65
  6665  021A  00C7               	movwf	___ftmul@f1+2
  6666  021B  0141               	movlb	1	; select bank1
  6667  021C  0828               	movf	_SoundLevel_PrepareData$2651^(0+128),w
  6668  021D  0140               	movlb	0	; select bank0
  6669  021E  00C8               	movwf	___ftmul@f2
  6670  021F  0141               	movlb	1	; select bank1
  6671  0220  0829               	movf	(_SoundLevel_PrepareData$2651+1)^(0+128),w
  6672  0221  0140               	movlb	0	; select bank0
  6673  0222  00C9               	movwf	___ftmul@f2+1
  6674  0223  0141               	movlb	1	; select bank1
  6675  0224  082A               	movf	(_SoundLevel_PrepareData$2651+2)^(0+128),w
  6676  0225  0140               	movlb	0	; select bank0
  6677  0226  00CA               	movwf	___ftmul@f2+2
  6678  0227  3185  258A  3180   	fcall	___ftmul
  6679  022A  0140               	movlb	0	; select bank0
  6680  022B  0845               	movf	?___ftmul,w
  6681  022C  0141               	movlb	1	; select bank1
  6682  022D  00B3               	movwf	SoundLevel_PrepareData@dBZ^(0+128)
  6683  022E  0140               	movlb	0	; select bank0
  6684  022F  0846               	movf	?___ftmul+1,w
  6685  0230  0141               	movlb	1	; select bank1
  6686  0231  00B4               	movwf	(SoundLevel_PrepareData@dBZ+1)^(0+128)
  6687  0232  0140               	movlb	0	; select bank0
  6688  0233  0847               	movf	?___ftmul+2,w
  6689  0234  0141               	movlb	1	; select bank1
  6690  0235  00B5               	movwf	(SoundLevel_PrepareData@dBZ+2)^(0+128)
  6691                           
  6692                           ;sound_level.c: 514: }else{
  6693  0236  2A3E               	goto	l5741
  6694  0237                     l5739:
  6695                           
  6696                           ;sound_level.c: 515: dBZ = 0;
  6697  0237  3000               	movlw	0
  6698  0238  0141               	movlb	1	; select bank1
  6699  0239  00B3               	movwf	SoundLevel_PrepareData@dBZ^(0+128)
  6700  023A  3000               	movlw	0
  6701  023B  00B4               	movwf	(SoundLevel_PrepareData@dBZ+1)^(0+128)
  6702  023C  3000               	movlw	0
  6703  023D  00B5               	movwf	(SoundLevel_PrepareData@dBZ+2)^(0+128)
  6704  023E                     l5741:
  6705                           
  6706                           ;sound_level.c: 516: };sound_level.c: 518: if(dBZ > 106){
  6707  023E  3000               	movlw	0
  6708  023F  0140               	movlb	0	; select bank0
  6709  0240  00A0               	movwf	___ftge@ff1
  6710  0241  30D4               	movlw	212
  6711  0242  00A1               	movwf	___ftge@ff1+1
  6712  0243  3042               	movlw	66
  6713  0244  00A2               	movwf	___ftge@ff1+2
  6714  0245  0141               	movlb	1	; select bank1
  6715  0246  0833               	movf	SoundLevel_PrepareData@dBZ^(0+128),w
  6716  0247  0140               	movlb	0	; select bank0
  6717  0248  00A3               	movwf	___ftge@ff2
  6718  0249  0141               	movlb	1	; select bank1
  6719  024A  0834               	movf	(SoundLevel_PrepareData@dBZ+1)^(0+128),w
  6720  024B  0140               	movlb	0	; select bank0
  6721  024C  00A4               	movwf	___ftge@ff2+1
  6722  024D  0141               	movlb	1	; select bank1
  6723  024E  0835               	movf	(SoundLevel_PrepareData@dBZ+2)^(0+128),w
  6724  024F  0140               	movlb	0	; select bank0
  6725  0250  00A5               	movwf	___ftge@ff2+2
  6726  0251  318C  240C  3180   	fcall	___ftge
  6727  0254  1803               	btfsc	3,0
  6728  0255  2A57               	goto	u5841
  6729  0256  2A58               	goto	u5840
  6730  0257                     u5841:
  6731  0257  2A5F               	goto	l5745
  6732  0258                     u5840:
  6733  0258                     l5743:
  6734                           
  6735                           ;sound_level.c: 519: dBZ = 106;
  6736  0258  3000               	movlw	0
  6737  0259  0141               	movlb	1	; select bank1
  6738  025A  00B3               	movwf	SoundLevel_PrepareData@dBZ^(0+128)
  6739  025B  30D4               	movlw	212
  6740  025C  00B4               	movwf	(SoundLevel_PrepareData@dBZ+1)^(0+128)
  6741  025D  3042               	movlw	66
  6742  025E  00B5               	movwf	(SoundLevel_PrepareData@dBZ+2)^(0+128)
  6743  025F                     l5745:
  6744                           
  6745                           ;sound_level.c: 520: };sound_level.c: 522: uint16_t dataToSend = (uint16_t)(round(dBZ * 
      +                          600));
  6746  025F  0141               	movlb	1	; select bank1
  6747  0260  0833               	movf	SoundLevel_PrepareData@dBZ^(0+128),w
  6748  0261  0140               	movlb	0	; select bank0
  6749  0262  00C8               	movwf	___ftmul@f2
  6750  0263  0141               	movlb	1	; select bank1
  6751  0264  0834               	movf	(SoundLevel_PrepareData@dBZ+1)^(0+128),w
  6752  0265  0140               	movlb	0	; select bank0
  6753  0266  00C9               	movwf	___ftmul@f2+1
  6754  0267  0141               	movlb	1	; select bank1
  6755  0268  0835               	movf	(SoundLevel_PrepareData@dBZ+2)^(0+128),w
  6756  0269  0140               	movlb	0	; select bank0
  6757  026A  00CA               	movwf	___ftmul@f2+2
  6758  026B  3000               	movlw	0
  6759  026C  00C5               	movwf	___ftmul@f1
  6760  026D  3016               	movlw	22
  6761  026E  00C6               	movwf	___ftmul@f1+1
  6762  026F  3044               	movlw	68
  6763  0270  00C7               	movwf	___ftmul@f1+2
  6764  0271  3185  258A  3180   	fcall	___ftmul
  6765  0274  0140               	movlb	0	; select bank0
  6766  0275  0845               	movf	?___ftmul,w
  6767  0276  00D5               	movwf	round@x
  6768  0277  0846               	movf	?___ftmul+1,w
  6769  0278  00D6               	movwf	round@x+1
  6770  0279  0847               	movf	?___ftmul+2,w
  6771  027A  00D7               	movwf	round@x+2
  6772  027B  3187  27B2  3180   	fcall	_round
  6773  027E  0140               	movlb	0	; select bank0
  6774  027F  0855               	movf	?_round,w
  6775  0280  0141               	movlb	1	; select bank1
  6776  0281  00AB               	movwf	_SoundLevel_PrepareData$2652^(0+128)
  6777  0282  0140               	movlb	0	; select bank0
  6778  0283  0856               	movf	?_round+1,w
  6779  0284  0141               	movlb	1	; select bank1
  6780  0285  00AC               	movwf	(_SoundLevel_PrepareData$2652+1)^(0+128)
  6781  0286  0140               	movlb	0	; select bank0
  6782  0287  0857               	movf	?_round+2,w
  6783  0288  0141               	movlb	1	; select bank1
  6784  0289  00AD               	movwf	(_SoundLevel_PrepareData$2652+2)^(0+128)
  6785  028A                     l5747:
  6786                           
  6787                           ;sound_level.c: 520: };sound_level.c: 522: uint16_t dataToSend = (uint16_t)(round(dBZ * 
      +                          600));
  6788  028A  082B               	movf	_SoundLevel_PrepareData$2652^(0+128),w
  6789  028B  0140               	movlb	0	; select bank0
  6790  028C  00A0               	movwf	___fttol@f1
  6791  028D  0141               	movlb	1	; select bank1
  6792  028E  082C               	movf	(_SoundLevel_PrepareData$2652+1)^(0+128),w
  6793  028F  0140               	movlb	0	; select bank0
  6794  0290  00A1               	movwf	___fttol@f1+1
  6795  0291  0141               	movlb	1	; select bank1
  6796  0292  082D               	movf	(_SoundLevel_PrepareData$2652+2)^(0+128),w
  6797  0293  0140               	movlb	0	; select bank0
  6798  0294  00A2               	movwf	___fttol@f1+2
  6799  0295  318F  277B  3180   	fcall	___fttol
  6800  0298  0140               	movlb	0	; select bank0
  6801  0299  0821               	movf	?___fttol+1,w
  6802  029A  0141               	movlb	1	; select bank1
  6803  029B  00B2               	movwf	(SoundLevel_PrepareData@dataToSend+1)^(0+128)
  6804  029C  0140               	movlb	0	; select bank0
  6805  029D  0820               	movf	?___fttol,w
  6806  029E  0141               	movlb	1	; select bank1
  6807  029F  00B1               	movwf	SoundLevel_PrepareData@dataToSend^(0+128)
  6808  02A0                     l5749:
  6809                           
  6810                           ;sound_level.c: 524: measurementData[0] = (uint8_t)(dataToSend>>8);
  6811  02A0  0832               	movf	(SoundLevel_PrepareData@dataToSend+1)^(0+128),w
  6812  02A1  00A0               	movwf	??_SoundLevel_PrepareData^(0+128)
  6813  02A2  0820               	movf	??_SoundLevel_PrepareData^(0+128),w
  6814  02A3  00C9               	movwf	_measurementData^(0+128)	;volatile
  6815  02A4                     l5751:
  6816                           
  6817                           ;sound_level.c: 525: measurementData[1] = (uint8_t)(dataToSend);
  6818  02A4  0831               	movf	SoundLevel_PrepareData@dataToSend^(0+128),w
  6819  02A5  00A0               	movwf	??_SoundLevel_PrepareData^(0+128)
  6820  02A6  0820               	movf	??_SoundLevel_PrepareData^(0+128),w
  6821  02A7  00CA               	movwf	(_measurementData^(0+128)+1)	;volatile
  6822  02A8                     l5753:
  6823                           
  6824                           ;sound_level.c: 528: if(dataToSend > thresholdLevel){
  6825  02A8  0832               	movf	(SoundLevel_PrepareData@dataToSend+1)^(0+128),w
  6826  02A9  0142               	movlb	2	; select bank2
  6827  02AA  0256               	subwf	(_thresholdLevel+1)^(0+256),w
  6828  02AB  1D03               	skipz
  6829  02AC  2AB1               	goto	u5855
  6830  02AD  0141               	movlb	1	; select bank1
  6831  02AE  0831               	movf	SoundLevel_PrepareData@dataToSend^(0+128),w
  6832  02AF  0142               	movlb	2	; select bank2
  6833  02B0  0255               	subwf	_thresholdLevel^(0+256),w
  6834  02B1                     u5855:
  6835  02B1  1803               	skipnc
  6836  02B2  2AB4               	goto	u5851
  6837  02B3  2AB5               	goto	u5850
  6838  02B4                     u5851:
  6839  02B4  2AB9               	goto	l5757
  6840  02B5                     u5850:
  6841  02B5                     l5755:
  6842                           
  6843                           ;sound_level.c: 529: overThreshold = 1;
  6844  02B5  0141               	movlb	1	; select bank1
  6845  02B6  01CE               	clrf	_overThreshold^(0+128)
  6846  02B7  0ACE               	incf	_overThreshold^(0+128),f
  6847                           
  6848                           ;sound_level.c: 530: }
  6849  02B8  2ABB               	goto	l333
  6850  02B9                     l5757:
  6851                           
  6852                           ;sound_level.c: 531: else{;sound_level.c: 532: overThreshold = 0;
  6853  02B9  0141               	movlb	1	; select bank1
  6854  02BA  01CE               	clrf	_overThreshold^(0+128)
  6855  02BB                     l333:
  6856  02BB  0008               	return
  6857  02BC                     __end_of_SoundLevel_PrepareData:
  6858                           
  6859                           	psect	text10
  6860  07B2                     __ptext10:	
  6861 ;; *************** function _round *****************
  6862 ;; Defined at:
  6863 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\round.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  x               3   53[BANK0 ] void 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  f               3   56[BANK0 ] void 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  3   53[BANK0 ] void 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6877 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6878 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6880 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6881 ;;Total ram usage:        6 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    8
  6884 ;; This function calls:
  6885 ;;		___ftadd
  6886 ;;		___ftsub
  6887 ;;		_trunc
  6888 ;; This function is called by:
  6889 ;;		_SoundLevel_PrepareData
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           
  6894                           ;psect for function _round
  6895  07B2                     _round:
  6896  07B2                     l5605:	
  6897                           ;incstack = 0
  6898                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6899                           
  6900  07B2  0140               	movlb	0	; select bank0
  6901  07B3  0855               	movf	round@x,w
  6902  07B4  00B6               	movwf	trunc@x
  6903  07B5  0856               	movf	round@x+1,w
  6904  07B6  00B7               	movwf	trunc@x+1
  6905  07B7  0857               	movf	round@x+2,w
  6906  07B8  00B8               	movwf	trunc@x+2
  6907  07B9  318D  2546  3187   	fcall	_trunc
  6908  07BC  0140               	movlb	0	; select bank0
  6909  07BD  0836               	movf	?_trunc,w
  6910  07BE  00BF               	movwf	___ftsub@f2
  6911  07BF  0837               	movf	?_trunc+1,w
  6912  07C0  00C0               	movwf	___ftsub@f2+1
  6913  07C1  0838               	movf	?_trunc+2,w
  6914  07C2  00C1               	movwf	___ftsub@f2+2
  6915  07C3  0855               	movf	round@x,w
  6916  07C4  00C2               	movwf	___ftsub@f1
  6917  07C5  0856               	movf	round@x+1,w
  6918  07C6  00C3               	movwf	___ftsub@f1+1
  6919  07C7  0857               	movf	round@x+2,w
  6920  07C8  00C4               	movwf	___ftsub@f1+2
  6921  07C9  318A  227E  3187   	fcall	___ftsub
  6922  07CC  0140               	movlb	0	; select bank0
  6923  07CD  083F               	movf	?___ftsub,w
  6924  07CE  00D8               	movwf	round@f
  6925  07CF  0840               	movf	?___ftsub+1,w
  6926  07D0  00D9               	movwf	round@f+1
  6927  07D1  0841               	movf	?___ftsub+2,w
  6928  07D2  00DA               	movwf	round@f+2
  6929  07D3                     l5607:
  6930  07D3  0858               	movf	round@f,w
  6931  07D4  00AE               	movwf	___ftadd@f1
  6932  07D5  0859               	movf	round@f+1,w
  6933  07D6  00AF               	movwf	___ftadd@f1+1
  6934  07D7  085A               	movf	round@f+2,w
  6935  07D8  00B0               	movwf	___ftadd@f1+2
  6936  07D9  0855               	movf	round@x,w
  6937  07DA  00B1               	movwf	___ftadd@f2
  6938  07DB  0856               	movf	round@x+1,w
  6939  07DC  00B2               	movwf	___ftadd@f2+1
  6940  07DD  0857               	movf	round@x+2,w
  6941  07DE  00B3               	movwf	___ftadd@f2+2
  6942  07DF  3182  22BC  3187   	fcall	___ftadd
  6943  07E2  0140               	movlb	0	; select bank0
  6944  07E3  082E               	movf	?___ftadd,w
  6945  07E4  00D5               	movwf	round@x
  6946  07E5  082F               	movf	?___ftadd+1,w
  6947  07E6  00D6               	movwf	round@x+1
  6948  07E7  0830               	movf	?___ftadd+2,w
  6949  07E8  00D7               	movwf	round@x+2
  6950  07E9                     l5609:
  6951  07E9  0855               	movf	round@x,w
  6952  07EA  00B6               	movwf	trunc@x
  6953  07EB  0856               	movf	round@x+1,w
  6954  07EC  00B7               	movwf	trunc@x+1
  6955  07ED  0857               	movf	round@x+2,w
  6956  07EE  00B8               	movwf	trunc@x+2
  6957  07EF  318D  2546  3187   	fcall	_trunc
  6958  07F2  0140               	movlb	0	; select bank0
  6959  07F3  0836               	movf	?_trunc,w
  6960  07F4  00D5               	movwf	?_round
  6961  07F5  0837               	movf	?_trunc+1,w
  6962  07F6  00D6               	movwf	?_round+1
  6963  07F7  0838               	movf	?_trunc+2,w
  6964  07F8  00D7               	movwf	?_round+2
  6965  07F9                     l1458:
  6966  07F9  0008               	return
  6967  07FA                     __end_of_round:
  6968                           
  6969                           	psect	text11
  6970  0D46                     __ptext11:	
  6971 ;; *************** function _trunc *****************
  6972 ;; Defined at:
  6973 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\trunc.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  x               3   22[BANK0 ] void 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  i               3   26[BANK0 ] void 
  6978 ;;  expon           2   29[BANK0 ] int 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  3   22[BANK0 ] int 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6988 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6989 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6991 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6992 ;;Total ram usage:        9 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    7
  6995 ;; This function calls:
  6996 ;;		___altoft
  6997 ;;		___fttol
  6998 ;;		_frexp
  6999 ;; This function is called by:
  7000 ;;		_round
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           
  7005                           ;psect for function _trunc
  7006  0D46                     _trunc:
  7007  0D46                     l5581:	
  7008                           ;incstack = 0
  7009                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7010                           
  7011  0D46  0140               	movlb	0	; select bank0
  7012  0D47  0836               	movf	trunc@x,w
  7013  0D48  00A0               	movwf	frexp@value
  7014  0D49  0837               	movf	trunc@x+1,w
  7015  0D4A  00A1               	movwf	frexp@value+1
  7016  0D4B  0838               	movf	trunc@x+2,w
  7017  0D4C  00A2               	movwf	frexp@value+2
  7018  0D4D  303D               	movlw	(low (trunc@expon| 0))& (0+255)
  7019  0D4E  00B9               	movwf	??_trunc
  7020  0D4F  0839               	movf	??_trunc,w
  7021  0D50  00A3               	movwf	frexp@eptr
  7022  0D51  318C  2445  318D   	fcall	_frexp
  7023  0D54                     l5583:
  7024  0D54  0140               	movlb	0	; select bank0
  7025  0D55  1FBE               	btfss	trunc@expon+1,7
  7026  0D56  2D58               	goto	u5711
  7027  0D57  2D59               	goto	u5710
  7028  0D58                     u5711:
  7029  0D58  2D60               	goto	l5589
  7030  0D59                     u5710:
  7031  0D59                     l5585:
  7032  0D59  3000               	movlw	0
  7033  0D5A  00B6               	movwf	?_trunc
  7034  0D5B  3000               	movlw	0
  7035  0D5C  00B7               	movwf	?_trunc+1
  7036  0D5D  3000               	movlw	0
  7037  0D5E  00B8               	movwf	?_trunc+2
  7038  0D5F  2D8C               	goto	l1464
  7039  0D60                     l5589:
  7040  0D60  3000               	movlw	0
  7041  0D61  023E               	subwf	trunc@expon+1,w
  7042  0D62  3015               	movlw	21
  7043  0D63  1903               	skipnz
  7044  0D64  023D               	subwf	trunc@expon,w
  7045  0D65  1C03               	skipc
  7046  0D66  2D68               	goto	u5721
  7047  0D67  2D69               	goto	u5720
  7048  0D68                     u5721:
  7049  0D68  2D6A               	goto	l5593
  7050  0D69                     u5720:
  7051  0D69                     l5591:
  7052  0D69  2D8C               	goto	l1464
  7053  0D6A                     l5593:
  7054  0D6A  0836               	movf	trunc@x,w
  7055  0D6B  00A0               	movwf	___fttol@f1
  7056  0D6C  0837               	movf	trunc@x+1,w
  7057  0D6D  00A1               	movwf	___fttol@f1+1
  7058  0D6E  0838               	movf	trunc@x+2,w
  7059  0D6F  00A2               	movwf	___fttol@f1+2
  7060  0D70  318F  277B  318D   	fcall	___fttol
  7061  0D73  0140               	movlb	0	; select bank0
  7062  0D74  0823               	movf	?___fttol+3,w
  7063  0D75  00B1               	movwf	___altoft@c+3
  7064  0D76  0822               	movf	?___fttol+2,w
  7065  0D77  00B0               	movwf	___altoft@c+2
  7066  0D78  0821               	movf	?___fttol+1,w
  7067  0D79  00AF               	movwf	___altoft@c+1
  7068  0D7A  0820               	movf	?___fttol,w
  7069  0D7B  00AE               	movwf	___altoft@c
  7070  0D7C  318C  24C2  318D   	fcall	___altoft
  7071  0D7F  0140               	movlb	0	; select bank0
  7072  0D80  082E               	movf	?___altoft,w
  7073  0D81  00BA               	movwf	trunc@i
  7074  0D82  082F               	movf	?___altoft+1,w
  7075  0D83  00BB               	movwf	trunc@i+1
  7076  0D84  0830               	movf	?___altoft+2,w
  7077  0D85  00BC               	movwf	trunc@i+2
  7078  0D86                     l5595:
  7079  0D86  083A               	movf	trunc@i,w
  7080  0D87  00B6               	movwf	?_trunc
  7081  0D88  083B               	movf	trunc@i+1,w
  7082  0D89  00B7               	movwf	?_trunc+1
  7083  0D8A  083C               	movf	trunc@i+2,w
  7084  0D8B  00B8               	movwf	?_trunc+2
  7085  0D8C                     l1464:
  7086  0D8C  0008               	return
  7087  0D8D                     __end_of_trunc:
  7088                           
  7089                           	psect	text12
  7090  0F7B                     __ptext12:	
  7091 ;; *************** function ___fttol *****************
  7092 ;; Defined at:
  7093 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  f1              3    0[BANK0 ] float 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  lval            4    9[BANK0 ] unsigned long 
  7098 ;;  exp1            1   13[BANK0 ] unsigned char 
  7099 ;;  sign1           1    8[BANK0 ] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  4    0[BANK0 ] long 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7110 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7112 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7113 ;;Total ram usage:       14 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    5
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_SoundLevel_PrepareData
  7120 ;;		_trunc
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           
  7125                           ;psect for function ___fttol
  7126  0F7B                     ___fttol:
  7127  0F7B                     l5479:	
  7128                           ;incstack = 0
  7129                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7130                           
  7131  0F7B  0140               	movlb	0	; select bank0
  7132  0F7C  0820               	movf	___fttol@f1,w
  7133  0F7D  00A4               	movwf	??___fttol
  7134  0F7E  0821               	movf	___fttol@f1+1,w
  7135  0F7F  00A5               	movwf	??___fttol+1
  7136  0F80  0822               	movf	___fttol@f1+2,w
  7137  0F81  00A6               	movwf	??___fttol+2
  7138  0F82  1003               	clrc
  7139  0F83  0D25               	rlf	??___fttol+1,w
  7140  0F84  0D26               	rlf	??___fttol+2,w
  7141  0F85  00A7               	movwf	??___fttol+3
  7142  0F86  0827               	movf	??___fttol+3,w
  7143  0F87  00AD               	movwf	___fttol@exp1
  7144  0F88  082D               	movf	___fttol@exp1,w
  7145  0F89  1D03               	btfss	3,2
  7146  0F8A  2F8C               	goto	u5561
  7147  0F8B  2F8D               	goto	u5560
  7148  0F8C                     u5561:
  7149  0F8C  2F96               	goto	l5485
  7150  0F8D                     u5560:
  7151  0F8D                     l5481:
  7152  0F8D  3000               	movlw	0
  7153  0F8E  00A3               	movwf	?___fttol+3
  7154  0F8F  3000               	movlw	0
  7155  0F90  00A2               	movwf	?___fttol+2
  7156  0F91  3000               	movlw	0
  7157  0F92  00A1               	movwf	?___fttol+1
  7158  0F93  3000               	movlw	0
  7159  0F94  00A0               	movwf	?___fttol
  7160  0F95  2FFF               	goto	l1286
  7161  0F96                     l5485:
  7162  0F96  0820               	movf	___fttol@f1,w
  7163  0F97  00A4               	movwf	??___fttol
  7164  0F98  0821               	movf	___fttol@f1+1,w
  7165  0F99  00A5               	movwf	??___fttol+1
  7166  0F9A  0822               	movf	___fttol@f1+2,w
  7167  0F9B  00A6               	movwf	??___fttol+2
  7168  0F9C  3017               	movlw	23
  7169  0F9D                     u5575:
  7170  0F9D  36A6               	lsrf	??___fttol+2,f
  7171  0F9E  0CA5               	rrf	??___fttol+1,f
  7172  0F9F  0CA4               	rrf	??___fttol,f
  7173  0FA0                     u5570:
  7174  0FA0  0B89               	decfsz	9,f
  7175  0FA1  2F9D               	goto	u5575
  7176  0FA2  0824               	movf	??___fttol,w
  7177  0FA3  00A7               	movwf	??___fttol+3
  7178  0FA4  0827               	movf	??___fttol+3,w
  7179  0FA5  00A8               	movwf	___fttol@sign1
  7180  0FA6                     l5487:
  7181  0FA6  17A1               	bsf	___fttol@f1+1,7
  7182  0FA7                     l5489:
  7183  0FA7  30FF               	movlw	255
  7184  0FA8  05A0               	andwf	___fttol@f1,f
  7185  0FA9  30FF               	movlw	255
  7186  0FAA  05A1               	andwf	___fttol@f1+1,f
  7187  0FAB  3000               	movlw	0
  7188  0FAC  05A2               	andwf	___fttol@f1+2,f
  7189  0FAD                     l5491:
  7190  0FAD  0820               	movf	___fttol@f1,w
  7191  0FAE  00A9               	movwf	___fttol@lval
  7192  0FAF  0821               	movf	___fttol@f1+1,w
  7193  0FB0  00AA               	movwf	___fttol@lval+1
  7194  0FB1  0822               	movf	___fttol@f1+2,w
  7195  0FB2  00AB               	movwf	___fttol@lval+2
  7196  0FB3  01AC               	clrf	___fttol@lval+3
  7197  0FB4                     l5493:
  7198  0FB4  308E               	movlw	142
  7199  0FB5  02AD               	subwf	___fttol@exp1,f
  7200  0FB6                     l5495:
  7201  0FB6  1FAD               	btfss	___fttol@exp1,7
  7202  0FB7  2FB9               	goto	u5581
  7203  0FB8  2FBA               	goto	u5580
  7204  0FB9                     u5581:
  7205  0FB9  2FD2               	goto	l5505
  7206  0FBA                     u5580:
  7207  0FBA                     l5497:
  7208  0FBA  082D               	movf	___fttol@exp1,w
  7209  0FBB  3A80               	xorlw	128
  7210  0FBC  3E8F               	addlw	143
  7211  0FBD  1803               	skipnc
  7212  0FBE  2FC0               	goto	u5591
  7213  0FBF  2FC1               	goto	u5590
  7214  0FC0                     u5591:
  7215  0FC0  2FC2               	goto	l5503
  7216  0FC1                     u5590:
  7217  0FC1  2F8D               	goto	l5481
  7218  0FC2                     l5503:
  7219  0FC2  3001               	movlw	1
  7220  0FC3                     u5605:
  7221  0FC3  36AC               	lsrf	___fttol@lval+3,f
  7222  0FC4  0CAB               	rrf	___fttol@lval+2,f
  7223  0FC5  0CAA               	rrf	___fttol@lval+1,f
  7224  0FC6  0CA9               	rrf	___fttol@lval,f
  7225  0FC7  0B89               	decfsz	9,f
  7226  0FC8  2FC3               	goto	u5605
  7227  0FC9  3001               	movlw	1
  7228  0FCA  00A4               	movwf	??___fttol
  7229  0FCB  0824               	movf	??___fttol,w
  7230  0FCC  07AD               	addwf	___fttol@exp1,f
  7231  0FCD  1D03               	btfss	3,2
  7232  0FCE  2FD0               	goto	u5611
  7233  0FCF  2FD1               	goto	u5610
  7234  0FD0                     u5611:
  7235  0FD0  2FC2               	goto	l5503
  7236  0FD1                     u5610:
  7237  0FD1  2FE7               	goto	l5513
  7238  0FD2                     l5505:
  7239  0FD2  3018               	movlw	24
  7240  0FD3  022D               	subwf	___fttol@exp1,w
  7241  0FD4  1C03               	skipc
  7242  0FD5  2FD7               	goto	u5621
  7243  0FD6  2FD8               	goto	u5620
  7244  0FD7                     u5621:
  7245  0FD7  2FE2               	goto	l1293
  7246  0FD8                     u5620:
  7247  0FD8  2F8D               	goto	l5481
  7248  0FD9                     l5511:
  7249  0FD9  3001               	movlw	1
  7250  0FDA                     u5635:
  7251  0FDA  35A9               	lslf	___fttol@lval,f
  7252  0FDB  0DAA               	rlf	___fttol@lval+1,f
  7253  0FDC  0DAB               	rlf	___fttol@lval+2,f
  7254  0FDD  0DAC               	rlf	___fttol@lval+3,f
  7255  0FDE  0B89               	decfsz	9,f
  7256  0FDF  2FDA               	goto	u5635
  7257  0FE0  3001               	movlw	1
  7258  0FE1  02AD               	subwf	___fttol@exp1,f
  7259  0FE2                     l1293:
  7260  0FE2  082D               	movf	___fttol@exp1,w
  7261  0FE3  1D03               	btfss	3,2
  7262  0FE4  2FE6               	goto	u5641
  7263  0FE5  2FE7               	goto	u5640
  7264  0FE6                     u5641:
  7265  0FE6  2FD9               	goto	l5511
  7266  0FE7                     u5640:
  7267  0FE7                     l5513:
  7268  0FE7  0828               	movf	___fttol@sign1,w
  7269  0FE8  1903               	btfsc	3,2
  7270  0FE9  2FEB               	goto	u5651
  7271  0FEA  2FEC               	goto	u5650
  7272  0FEB                     u5651:
  7273  0FEB  2FF7               	goto	l5517
  7274  0FEC                     u5650:
  7275  0FEC                     l5515:
  7276  0FEC  09A9               	comf	___fttol@lval,f
  7277  0FED  09AA               	comf	___fttol@lval+1,f
  7278  0FEE  09AB               	comf	___fttol@lval+2,f
  7279  0FEF  09AC               	comf	___fttol@lval+3,f
  7280  0FF0  0AA9               	incf	___fttol@lval,f
  7281  0FF1  1903               	skipnz
  7282  0FF2  0AAA               	incf	___fttol@lval+1,f
  7283  0FF3  1903               	skipnz
  7284  0FF4  0AAB               	incf	___fttol@lval+2,f
  7285  0FF5  1903               	skipnz
  7286  0FF6  0AAC               	incf	___fttol@lval+3,f
  7287  0FF7                     l5517:
  7288  0FF7  082C               	movf	___fttol@lval+3,w
  7289  0FF8  00A3               	movwf	?___fttol+3
  7290  0FF9  082B               	movf	___fttol@lval+2,w
  7291  0FFA  00A2               	movwf	?___fttol+2
  7292  0FFB  082A               	movf	___fttol@lval+1,w
  7293  0FFC  00A1               	movwf	?___fttol+1
  7294  0FFD  0829               	movf	___fttol@lval,w
  7295  0FFE  00A0               	movwf	?___fttol
  7296  0FFF                     l1286:
  7297  0FFF  0008               	return
  7298  1000                     __end_of___fttol:
  7299                           
  7300                           	psect	text13
  7301  0CC2                     __ptext13:	
  7302 ;; *************** function ___altoft *****************
  7303 ;; Defined at:
  7304 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\altoft.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  c               4   14[BANK0 ] long 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  sign            1   21[BANK0 ] unsigned char 
  7309 ;;  exp             1   20[BANK0 ] unsigned char 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  3   14[BANK0 ] float 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0, pclath, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7320 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7321 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7322 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7323 ;;Total ram usage:        8 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    6
  7326 ;; This function calls:
  7327 ;;		___ftpack
  7328 ;; This function is called by:
  7329 ;;		_trunc
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           
  7334                           ;psect for function ___altoft
  7335  0CC2                     ___altoft:
  7336  0CC2                     l5431:	
  7337                           ;incstack = 0
  7338                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  7339                           
  7340  0CC2  0140               	movlb	0	; select bank0
  7341  0CC3  01B5               	clrf	___altoft@sign
  7342  0CC4                     l5433:
  7343  0CC4  308E               	movlw	142
  7344  0CC5  00B2               	movwf	??___altoft
  7345  0CC6  0832               	movf	??___altoft,w
  7346  0CC7  00B4               	movwf	___altoft@exp
  7347  0CC8                     l5435:
  7348  0CC8  1FB1               	btfss	___altoft@c+3,7
  7349  0CC9  2CCB               	goto	u5491
  7350  0CCA  2CCC               	goto	u5490
  7351  0CCB                     u5491:
  7352  0CCB  2CE5               	goto	l5441
  7353  0CCC                     u5490:
  7354  0CCC                     l5437:
  7355  0CCC  09AE               	comf	___altoft@c,f
  7356  0CCD  09AF               	comf	___altoft@c+1,f
  7357  0CCE  09B0               	comf	___altoft@c+2,f
  7358  0CCF  09B1               	comf	___altoft@c+3,f
  7359  0CD0  0AAE               	incf	___altoft@c,f
  7360  0CD1  1903               	skipnz
  7361  0CD2  0AAF               	incf	___altoft@c+1,f
  7362  0CD3  1903               	skipnz
  7363  0CD4  0AB0               	incf	___altoft@c+2,f
  7364  0CD5  1903               	skipnz
  7365  0CD6  0AB1               	incf	___altoft@c+3,f
  7366  0CD7  01B5               	clrf	___altoft@sign
  7367  0CD8  0AB5               	incf	___altoft@sign,f
  7368  0CD9  2CE5               	goto	l5441
  7369  0CDA                     l5439:
  7370  0CDA  3001               	movlw	1
  7371  0CDB                     u5505:
  7372  0CDB  36B1               	lsrf	___altoft@c+3,f
  7373  0CDC  0CB0               	rrf	___altoft@c+2,f
  7374  0CDD  0CAF               	rrf	___altoft@c+1,f
  7375  0CDE  0CAE               	rrf	___altoft@c,f
  7376  0CDF  0B89               	decfsz	9,f
  7377  0CE0  2CDB               	goto	u5505
  7378  0CE1  3001               	movlw	1
  7379  0CE2  00B2               	movwf	??___altoft
  7380  0CE3  0832               	movf	??___altoft,w
  7381  0CE4  07B4               	addwf	___altoft@exp,f
  7382  0CE5                     l5441:
  7383  0CE5  30FF               	movlw	255
  7384  0CE6  0531               	andwf	___altoft@c+3,w
  7385  0CE7  1D03               	btfss	3,2
  7386  0CE8  2CEA               	goto	u5511
  7387  0CE9  2CEB               	goto	u5510
  7388  0CEA                     u5511:
  7389  0CEA  2CDA               	goto	l5439
  7390  0CEB                     u5510:
  7391  0CEB                     l5443:
  7392  0CEB  082E               	movf	___altoft@c,w
  7393  0CEC  00A0               	movwf	___ftpack@arg
  7394  0CED  082F               	movf	___altoft@c+1,w
  7395  0CEE  00A1               	movwf	___ftpack@arg+1
  7396  0CEF  0830               	movf	___altoft@c+2,w
  7397  0CF0  00A2               	movwf	___ftpack@arg+2
  7398  0CF1  0834               	movf	___altoft@exp,w
  7399  0CF2  00B2               	movwf	??___altoft
  7400  0CF3  0832               	movf	??___altoft,w
  7401  0CF4  00A3               	movwf	___ftpack@exp
  7402  0CF5  0835               	movf	___altoft@sign,w
  7403  0CF6  00B3               	movwf	??___altoft+1
  7404  0CF7  0833               	movf	??___altoft+1,w
  7405  0CF8  00A4               	movwf	___ftpack@sign
  7406  0CF9  318F  2706  318C   	fcall	___ftpack
  7407  0CFC  0140               	movlb	0	; select bank0
  7408  0CFD  0820               	movf	?___ftpack,w
  7409  0CFE  00AE               	movwf	?___altoft
  7410  0CFF  0821               	movf	?___ftpack+1,w
  7411  0D00  00AF               	movwf	?___altoft+1
  7412  0D01  0822               	movf	?___ftpack+2,w
  7413  0D02  00B0               	movwf	?___altoft+2
  7414  0D03                     l1093:
  7415  0D03  0008               	return
  7416  0D04                     __end_of___altoft:
  7417                           
  7418                           	psect	text14
  7419  0A7E                     __ptext14:	
  7420 ;; *************** function ___ftsub *****************
  7421 ;; Defined at:
  7422 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftsub.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  f2              3   31[BANK0 ] float 
  7425 ;;  f1              3   34[BANK0 ] float 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  3   31[BANK0 ] float 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, pclath, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7437 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7440 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7441 ;;Total ram usage:        6 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    7
  7444 ;; This function calls:
  7445 ;;		___ftadd
  7446 ;; This function is called by:
  7447 ;;		_SoundLevel_PrepareData
  7448 ;;		_round
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function ___ftsub
  7454  0A7E                     ___ftsub:
  7455  0A7E                     l5551:	
  7456                           ;incstack = 0
  7457                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7458                           
  7459  0A7E  0140               	movlb	0	; select bank0
  7460  0A7F  0841               	movf	___ftsub@f2+2,w
  7461  0A80  0440               	iorwf	___ftsub@f2+1,w
  7462  0A81  043F               	iorwf	___ftsub@f2,w
  7463  0A82  1903               	skipnz
  7464  0A83  2A85               	goto	u5681
  7465  0A84  2A86               	goto	u5680
  7466  0A85                     u5681:
  7467  0A85  2A88               	goto	l5555
  7468  0A86                     u5680:
  7469  0A86                     l5553:
  7470  0A86  3080               	movlw	128
  7471  0A87  06C1               	xorwf	___ftsub@f2+2,f
  7472  0A88                     l5555:
  7473  0A88  0842               	movf	___ftsub@f1,w
  7474  0A89  00AE               	movwf	___ftadd@f1
  7475  0A8A  0843               	movf	___ftsub@f1+1,w
  7476  0A8B  00AF               	movwf	___ftadd@f1+1
  7477  0A8C  0844               	movf	___ftsub@f1+2,w
  7478  0A8D  00B0               	movwf	___ftadd@f1+2
  7479  0A8E  083F               	movf	___ftsub@f2,w
  7480  0A8F  00B1               	movwf	___ftadd@f2
  7481  0A90  0840               	movf	___ftsub@f2+1,w
  7482  0A91  00B2               	movwf	___ftadd@f2+1
  7483  0A92  0841               	movf	___ftsub@f2+2,w
  7484  0A93  00B3               	movwf	___ftadd@f2+2
  7485  0A94  3182  22BC  318A   	fcall	___ftadd
  7486  0A97  0140               	movlb	0	; select bank0
  7487  0A98  082E               	movf	?___ftadd,w
  7488  0A99  00BF               	movwf	?___ftsub
  7489  0A9A  082F               	movf	?___ftadd+1,w
  7490  0A9B  00C0               	movwf	?___ftsub+1
  7491  0A9C  0830               	movf	?___ftadd+2,w
  7492  0A9D  00C1               	movwf	?___ftsub+2
  7493  0A9E                     l1282:
  7494  0A9E  0008               	return
  7495  0A9F                     __end_of___ftsub:
  7496                           
  7497                           	psect	text15
  7498  0B32                     __ptext15:	
  7499 ;; *************** function _log10 *****************
  7500 ;; Defined at:
  7501 ;;		line 39 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\log.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  x               3   69[BANK0 ] float 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  3   69[BANK0 ] float 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7515 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7516 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7518 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7519 ;;Total ram usage:        6 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    9
  7522 ;; This function calls:
  7523 ;;		___ftmul
  7524 ;;		_log
  7525 ;; This function is called by:
  7526 ;;		_SoundLevel_PrepareData
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function _log10
  7532  0B32                     _log10:
  7533  0B32                     l5599:	
  7534                           ;incstack = 0
  7535                           ; Regs used in _log10: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7536                           
  7537  0B32  0140               	movlb	0	; select bank0
  7538  0B33  0865               	movf	log10@x,w
  7539  0B34  00DF               	movwf	log@x
  7540  0B35  0866               	movf	log10@x+1,w
  7541  0B36  00E0               	movwf	log@x+1
  7542  0B37  0867               	movf	log10@x+2,w
  7543  0B38  00E1               	movwf	log@x+2
  7544  0B39  3186  264B  318B   	fcall	_log
  7545  0B3C  0140               	movlb	0	; select bank0
  7546  0B3D  085F               	movf	?_log,w
  7547  0B3E  00E8               	movwf	_log10$2653
  7548  0B3F  0860               	movf	?_log+1,w
  7549  0B40  00E9               	movwf	_log10$2653+1
  7550  0B41  0861               	movf	?_log+2,w
  7551  0B42  00EA               	movwf	_log10$2653+2
  7552  0B43                     l5601:
  7553  0B43  305C               	movlw	92
  7554  0B44  00C5               	movwf	___ftmul@f1
  7555  0B45  30DE               	movlw	222
  7556  0B46  00C6               	movwf	___ftmul@f1+1
  7557  0B47  303E               	movlw	62
  7558  0B48  00C7               	movwf	___ftmul@f1+2
  7559  0B49  0868               	movf	_log10$2653,w
  7560  0B4A  00C8               	movwf	___ftmul@f2
  7561  0B4B  0869               	movf	_log10$2653+1,w
  7562  0B4C  00C9               	movwf	___ftmul@f2+1
  7563  0B4D  086A               	movf	_log10$2653+2,w
  7564  0B4E  00CA               	movwf	___ftmul@f2+2
  7565  0B4F  3185  258A  318B   	fcall	___ftmul
  7566  0B52  0140               	movlb	0	; select bank0
  7567  0B53  0845               	movf	?___ftmul,w
  7568  0B54  00E5               	movwf	?_log10
  7569  0B55  0846               	movf	?___ftmul+1,w
  7570  0B56  00E6               	movwf	?_log10+1
  7571  0B57  0847               	movf	?___ftmul+2,w
  7572  0B58  00E7               	movwf	?_log10+2
  7573  0B59                     l1429:
  7574  0B59  0008               	return
  7575  0B5A                     __end_of_log10:
  7576                           
  7577                           	psect	text16
  7578  064B                     __ptext16:	
  7579 ;; *************** function _log *****************
  7580 ;; Defined at:
  7581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\log.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  x               3   63[BANK0 ] float 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  exponent        2   67[BANK0 ] int 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  3   63[BANK0 ] int 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7598 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7599 ;;Total ram usage:        6 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    8
  7602 ;; This function calls:
  7603 ;;		___awtoft
  7604 ;;		___ftadd
  7605 ;;		___ftge
  7606 ;;		___ftmul
  7607 ;;		_eval_poly
  7608 ;;		_frexp
  7609 ;; This function is called by:
  7610 ;;		_log10
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           
  7615                           ;psect for function _log
  7616  064B                     _log:
  7617  064B                     l5559:	
  7618                           ;incstack = 0
  7619                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7620                           
  7621  064B  0140               	movlb	0	; select bank0
  7622  064C  085F               	movf	log@x,w
  7623  064D  00A0               	movwf	___ftge@ff1
  7624  064E  0860               	movf	log@x+1,w
  7625  064F  00A1               	movwf	___ftge@ff1+1
  7626  0650  0861               	movf	log@x+2,w
  7627  0651  00A2               	movwf	___ftge@ff1+2
  7628  0652  3000               	movlw	0
  7629  0653  00A3               	movwf	___ftge@ff2
  7630  0654  3000               	movlw	0
  7631  0655  00A4               	movwf	___ftge@ff2+1
  7632  0656  3000               	movlw	0
  7633  0657  00A5               	movwf	___ftge@ff2+2
  7634  0658  318C  240C  3186   	fcall	___ftge
  7635  065B  1803               	btfsc	3,0
  7636  065C  2E5E               	goto	u5691
  7637  065D  2E5F               	goto	u5690
  7638  065E                     u5691:
  7639  065E  2E6C               	goto	l5565
  7640  065F                     u5690:
  7641  065F                     l5561:
  7642  065F  3021               	movlw	33
  7643  0660  0142               	movlb	2	; select bank2
  7644  0661  00A3               	movwf	_errno^(0+256)
  7645  0662  3000               	movlw	0
  7646  0663  00A4               	movwf	(_errno^(0+256)+1)
  7647  0664  3000               	movlw	0
  7648  0665  0140               	movlb	0	; select bank0
  7649  0666  00DF               	movwf	?_log
  7650  0667  3000               	movlw	0
  7651  0668  00E0               	movwf	?_log+1
  7652  0669  3000               	movlw	0
  7653  066A  00E1               	movwf	?_log+2
  7654  066B  2EFF               	goto	l1425
  7655  066C                     l5565:
  7656  066C  0140               	movlb	0	; select bank0
  7657  066D  0861               	movf	log@x+2,w
  7658  066E  0460               	iorwf	log@x+1,w
  7659  066F  045F               	iorwf	log@x,w
  7660  0670  1D03               	skipz
  7661  0671  2E73               	goto	u5701
  7662  0672  2E74               	goto	u5700
  7663  0673                     u5701:
  7664  0673  2E81               	goto	l5571
  7665  0674                     u5700:
  7666  0674                     l5567:
  7667  0674  3022               	movlw	34
  7668  0675  0142               	movlb	2	; select bank2
  7669  0676  00A3               	movwf	_errno^(0+256)
  7670  0677  3000               	movlw	0
  7671  0678  00A4               	movwf	(_errno^(0+256)+1)
  7672  0679  3000               	movlw	0
  7673  067A  0140               	movlb	0	; select bank0
  7674  067B  00DF               	movwf	?_log
  7675  067C  3000               	movlw	0
  7676  067D  00E0               	movwf	?_log+1
  7677  067E  3000               	movlw	0
  7678  067F  00E1               	movwf	?_log+2
  7679  0680  2EFF               	goto	l1425
  7680  0681                     l5571:
  7681  0681  3000               	movlw	0
  7682  0682  00AE               	movwf	___ftadd@f1
  7683  0683  3080               	movlw	128
  7684  0684  00AF               	movwf	___ftadd@f1+1
  7685  0685  30BF               	movlw	191
  7686  0686  00B0               	movwf	___ftadd@f1+2
  7687  0687  3000               	movlw	0
  7688  0688  00C5               	movwf	___ftmul@f1
  7689  0689  3000               	movlw	0
  7690  068A  00C6               	movwf	___ftmul@f1+1
  7691  068B  3040               	movlw	64
  7692  068C  00C7               	movwf	___ftmul@f1+2
  7693  068D  3063               	movlw	(low (log@exponent| 0))& (0+255)
  7694  068E  00E2               	movwf	??_log
  7695  068F  0862               	movf	??_log,w
  7696  0690  00A3               	movwf	frexp@eptr
  7697  0691  085F               	movf	log@x,w
  7698  0692  00A0               	movwf	frexp@value
  7699  0693  0860               	movf	log@x+1,w
  7700  0694  00A1               	movwf	frexp@value+1
  7701  0695  0861               	movf	log@x+2,w
  7702  0696  00A2               	movwf	frexp@value+2
  7703  0697  318C  2445  3186   	fcall	_frexp
  7704  069A  0140               	movlb	0	; select bank0
  7705  069B  0820               	movf	?_frexp,w
  7706  069C  00C8               	movwf	___ftmul@f2
  7707  069D  0821               	movf	?_frexp+1,w
  7708  069E  00C9               	movwf	___ftmul@f2+1
  7709  069F  0822               	movf	?_frexp+2,w
  7710  06A0  00CA               	movwf	___ftmul@f2+2
  7711  06A1  3185  258A  3186   	fcall	___ftmul
  7712  06A4  0140               	movlb	0	; select bank0
  7713  06A5  0845               	movf	?___ftmul,w
  7714  06A6  00B1               	movwf	___ftadd@f2
  7715  06A7  0846               	movf	?___ftmul+1,w
  7716  06A8  00B2               	movwf	___ftadd@f2+1
  7717  06A9  0847               	movf	?___ftmul+2,w
  7718  06AA  00B3               	movwf	___ftadd@f2+2
  7719  06AB  3182  22BC  3186   	fcall	___ftadd
  7720  06AE  0140               	movlb	0	; select bank0
  7721  06AF  082E               	movf	?___ftadd,w
  7722  06B0  00DF               	movwf	log@x
  7723  06B1  082F               	movf	?___ftadd+1,w
  7724  06B2  00E0               	movwf	log@x+1
  7725  06B3  0830               	movf	?___ftadd+2,w
  7726  06B4  00E1               	movwf	log@x+2
  7727  06B5                     l5573:
  7728  06B5  30FF               	movlw	255
  7729  06B6  07E3               	addwf	log@exponent,f
  7730  06B7  30FF               	movlw	255
  7731  06B8  3DE4               	addwfc	log@exponent+1,f
  7732  06B9                     l5575:
  7733  06B9  085F               	movf	log@x,w
  7734  06BA  00D5               	movwf	eval_poly@x
  7735  06BB  0860               	movf	log@x+1,w
  7736  06BC  00D6               	movwf	eval_poly@x+1
  7737  06BD  0861               	movf	log@x+2,w
  7738  06BE  00D7               	movwf	eval_poly@x+2
  7739  06BF  3000               	movlw	low (log@coeff| (0+32768))
  7740  06C0  00D8               	movwf	eval_poly@d
  7741  06C1  3090               	movlw	high (log@coeff| (0+32768))
  7742  06C2  00D9               	movwf	eval_poly@d+1
  7743  06C3  3008               	movlw	8
  7744  06C4  00DA               	movwf	eval_poly@n
  7745  06C5  3000               	movlw	0
  7746  06C6  00DB               	movwf	eval_poly@n+1
  7747  06C7  318E  2635  3186   	fcall	_eval_poly
  7748  06CA  0140               	movlb	0	; select bank0
  7749  06CB  0855               	movf	?_eval_poly,w
  7750  06CC  00DF               	movwf	log@x
  7751  06CD  0856               	movf	?_eval_poly+1,w
  7752  06CE  00E0               	movwf	log@x+1
  7753  06CF  0857               	movf	?_eval_poly+2,w
  7754  06D0  00E1               	movwf	log@x+2
  7755  06D1                     l5577:
  7756  06D1  085F               	movf	log@x,w
  7757  06D2  00AE               	movwf	___ftadd@f1
  7758  06D3  0860               	movf	log@x+1,w
  7759  06D4  00AF               	movwf	___ftadd@f1+1
  7760  06D5  0861               	movf	log@x+2,w
  7761  06D6  00B0               	movwf	___ftadd@f1+2
  7762  06D7  3072               	movlw	114
  7763  06D8  00C5               	movwf	___ftmul@f1
  7764  06D9  3031               	movlw	49
  7765  06DA  00C6               	movwf	___ftmul@f1+1
  7766  06DB  303F               	movlw	63
  7767  06DC  00C7               	movwf	___ftmul@f1+2
  7768  06DD  0864               	movf	log@exponent+1,w
  7769  06DE  00A9               	movwf	___awtoft@c+1
  7770  06DF  0863               	movf	log@exponent,w
  7771  06E0  00A8               	movwf	___awtoft@c
  7772  06E1  318A  22E5  3186   	fcall	___awtoft
  7773  06E4  0140               	movlb	0	; select bank0
  7774  06E5  0828               	movf	?___awtoft,w
  7775  06E6  00C8               	movwf	___ftmul@f2
  7776  06E7  0829               	movf	?___awtoft+1,w
  7777  06E8  00C9               	movwf	___ftmul@f2+1
  7778  06E9  082A               	movf	?___awtoft+2,w
  7779  06EA  00CA               	movwf	___ftmul@f2+2
  7780  06EB  3185  258A  3186   	fcall	___ftmul
  7781  06EE  0140               	movlb	0	; select bank0
  7782  06EF  0845               	movf	?___ftmul,w
  7783  06F0  00B1               	movwf	___ftadd@f2
  7784  06F1  0846               	movf	?___ftmul+1,w
  7785  06F2  00B2               	movwf	___ftadd@f2+1
  7786  06F3  0847               	movf	?___ftmul+2,w
  7787  06F4  00B3               	movwf	___ftadd@f2+2
  7788  06F5  3182  22BC  3186   	fcall	___ftadd
  7789  06F8  0140               	movlb	0	; select bank0
  7790  06F9  082E               	movf	?___ftadd,w
  7791  06FA  00DF               	movwf	?_log
  7792  06FB  082F               	movf	?___ftadd+1,w
  7793  06FC  00E0               	movwf	?_log+1
  7794  06FD  0830               	movf	?___ftadd+2,w
  7795  06FE  00E1               	movwf	?_log+2
  7796  06FF                     l1425:
  7797  06FF  0008               	return
  7798  0700                     __end_of_log:
  7799                           
  7800                           	psect	text17
  7801  0C45                     __ptext17:	
  7802 ;; *************** function _frexp *****************
  7803 ;; Defined at:
  7804 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  value           3    0[BANK0 ] int 
  7807 ;;  eptr            1    3[BANK0 ] PTR int 
  7808 ;;		 -> trunc@expon(2), log@exponent(2), 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  3    0[BANK0 ] PTR int 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7820 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7823 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7824 ;;Total ram usage:        6 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    5
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_log
  7831 ;;		_trunc
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           
  7836                           ;psect for function _frexp
  7837  0C45                     _frexp:
  7838  0C45                     l5521:	
  7839                           ;incstack = 0
  7840                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7841                           
  7842  0C45  0140               	movlb	0	; select bank0
  7843  0C46  0822               	movf	frexp@value+2,w
  7844  0C47  0421               	iorwf	frexp@value+1,w
  7845  0C48  0420               	iorwf	frexp@value,w
  7846  0C49  1D03               	skipz
  7847  0C4A  2C4C               	goto	u5661
  7848  0C4B  2C4D               	goto	u5660
  7849  0C4C                     u5661:
  7850  0C4C  2C5A               	goto	l5529
  7851  0C4D                     u5660:
  7852  0C4D                     l5523:
  7853  0C4D  0823               	movf	frexp@eptr,w
  7854  0C4E  0086               	movwf	6
  7855  0C4F  0187               	clrf	7
  7856  0C50  3000               	movlw	0
  7857  0C51  3FC0               	movwi [0]fsr1
  7858  0C52  3FC1               	movwi [1]fsr1
  7859  0C53                     l5525:
  7860  0C53  3000               	movlw	0
  7861  0C54  00A0               	movwf	?_frexp
  7862  0C55  3000               	movlw	0
  7863  0C56  00A1               	movwf	?_frexp+1
  7864  0C57  3000               	movlw	0
  7865  0C58  00A2               	movwf	?_frexp+2
  7866  0C59  2C82               	goto	l1443
  7867  0C5A                     l5529:
  7868  0C5A  0822               	movf	frexp@value+2,w
  7869  0C5B  397F               	andlw	127
  7870  0C5C  00A4               	movwf	??_frexp
  7871  0C5D  01A5               	clrf	??_frexp+1
  7872  0C5E  35A4               	lslf	??_frexp,f
  7873  0C5F  0DA5               	rlf	??_frexp+1,f
  7874  0C60  0823               	movf	frexp@eptr,w
  7875  0C61  0086               	movwf	6
  7876  0C62  0187               	clrf	7
  7877  0C63  0824               	movf	??_frexp,w
  7878  0C64  3FC0               	movwi [0]fsr1
  7879  0C65  0825               	movf	??_frexp+1,w
  7880  0C66  3FC1               	movwi [1]fsr1
  7881  0C67  0D21               	rlf	frexp@value+1,w
  7882  0C68  0D21               	rlf	frexp@value+1,w
  7883  0C69  3901               	andlw	1
  7884  0C6A  00A4               	movwf	??_frexp
  7885  0C6B  01A5               	clrf	??_frexp+1
  7886  0C6C  0823               	movf	frexp@eptr,w
  7887  0C6D  0086               	movwf	6
  7888  0C6E  0187               	clrf	7
  7889  0C6F  0824               	movf	??_frexp,w
  7890  0C70  0481               	iorwf	1,f
  7891  0C71  3141               	addfsr 1,1
  7892  0C72  0825               	movf	??_frexp+1,w
  7893  0C73  0481               	iorwf	1,f
  7894  0C74                     l5531:
  7895  0C74  0823               	movf	frexp@eptr,w
  7896  0C75  0086               	movwf	6
  7897  0C76  0187               	clrf	7
  7898  0C77  3082               	movlw	130
  7899  0C78  0781               	addwf	1,f
  7900  0C79  3141               	addfsr 1,1
  7901  0C7A  30FF               	movlw	255
  7902  0C7B  3D81               	addwfc	1,f
  7903  0C7C  317F               	addfsr 1,-1
  7904  0C7D                     l5533:
  7905  0C7D  0822               	movf	frexp@value+2,w
  7906  0C7E  3980               	andlw	-128
  7907  0C7F  383F               	iorlw	63
  7908  0C80  00A2               	movwf	frexp@value+2
  7909  0C81                     l5535:
  7910  0C81  13A1               	bcf	frexp@value+1,7
  7911  0C82                     l5537:
  7912  0C82                     l1443:
  7913  0C82  0008               	return
  7914  0C83                     __end_of_frexp:
  7915                           
  7916                           	psect	text18
  7917  0E35                     __ptext18:	
  7918 ;; *************** function _eval_poly *****************
  7919 ;; Defined at:
  7920 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\evalpoly.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  x               3   53[BANK0 ] PTR int 
  7923 ;;  d               2   56[BANK0 ] PTR const 
  7924 ;;		 -> log@coeff(27), 
  7925 ;;  n               2   58[BANK0 ] int 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  res             3   60[BANK0 ] int 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  3   53[BANK0 ] int 
  7930 ;; Registers used:
  7931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7937 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7938 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7940 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7941 ;;Total ram usage:       10 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; Hardware stack levels required when called:    7
  7944 ;; This function calls:
  7945 ;;		___ftadd
  7946 ;;		___ftmul
  7947 ;;		___wmul
  7948 ;; This function is called by:
  7949 ;;		_log
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           
  7954                           ;psect for function _eval_poly
  7955  0E35                     _eval_poly:
  7956  0E35                     l5541:	
  7957                           ;incstack = 0
  7958                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7959                           
  7960  0E35  0140               	movlb	0	; select bank0
  7961  0E36  085B               	movf	eval_poly@n+1,w
  7962  0E37  00A1               	movwf	___wmul@multiplier+1
  7963  0E38  085A               	movf	eval_poly@n,w
  7964  0E39  00A0               	movwf	___wmul@multiplier
  7965  0E3A  3003               	movlw	3
  7966  0E3B  00A2               	movwf	___wmul@multiplicand
  7967  0E3C  3000               	movlw	0
  7968  0E3D  00A3               	movwf	___wmul@multiplicand+1
  7969  0E3E  318A  221C  318E   	fcall	___wmul
  7970  0E41  0140               	movlb	0	; select bank0
  7971  0E42  0858               	movf	eval_poly@d,w
  7972  0E43  0720               	addwf	?___wmul,w
  7973  0E44  0084               	movwf	4
  7974  0E45  0859               	movf	eval_poly@d+1,w
  7975  0E46  3D21               	addwfc	?___wmul+1,w
  7976  0E47  0085               	movwf	5
  7977  0E48  3F00               	moviw [0]fsr0
  7978  0E49  00DC               	movwf	eval_poly@res
  7979  0E4A  3F01               	moviw [1]fsr0
  7980  0E4B  00DD               	movwf	eval_poly@res+1
  7981  0E4C  3F02               	moviw [2]fsr0
  7982  0E4D  00DE               	movwf	eval_poly@res+2
  7983  0E4E  2E8B               	goto	l5545
  7984  0E4F                     l5543:
  7985  0E4F  30FF               	movlw	255
  7986  0E50  07DA               	addwf	eval_poly@n,f
  7987  0E51  30FF               	movlw	255
  7988  0E52  3DDB               	addwfc	eval_poly@n+1,f
  7989  0E53  085B               	movf	eval_poly@n+1,w
  7990  0E54  00A1               	movwf	___wmul@multiplier+1
  7991  0E55  085A               	movf	eval_poly@n,w
  7992  0E56  00A0               	movwf	___wmul@multiplier
  7993  0E57  3003               	movlw	3
  7994  0E58  00A2               	movwf	___wmul@multiplicand
  7995  0E59  3000               	movlw	0
  7996  0E5A  00A3               	movwf	___wmul@multiplicand+1
  7997  0E5B  318A  221C  318E   	fcall	___wmul
  7998  0E5E  0140               	movlb	0	; select bank0
  7999  0E5F  0858               	movf	eval_poly@d,w
  8000  0E60  0720               	addwf	?___wmul,w
  8001  0E61  0084               	movwf	4
  8002  0E62  0859               	movf	eval_poly@d+1,w
  8003  0E63  3D21               	addwfc	?___wmul+1,w
  8004  0E64  0085               	movwf	5
  8005  0E65  3F00               	moviw [0]fsr0
  8006  0E66  00AE               	movwf	___ftadd@f1
  8007  0E67  3F01               	moviw [1]fsr0
  8008  0E68  00AF               	movwf	___ftadd@f1+1
  8009  0E69  3F02               	moviw [2]fsr0
  8010  0E6A  00B0               	movwf	___ftadd@f1+2
  8011  0E6B  085C               	movf	eval_poly@res,w
  8012  0E6C  00C5               	movwf	___ftmul@f1
  8013  0E6D  085D               	movf	eval_poly@res+1,w
  8014  0E6E  00C6               	movwf	___ftmul@f1+1
  8015  0E6F  085E               	movf	eval_poly@res+2,w
  8016  0E70  00C7               	movwf	___ftmul@f1+2
  8017  0E71  0855               	movf	eval_poly@x,w
  8018  0E72  00C8               	movwf	___ftmul@f2
  8019  0E73  0856               	movf	eval_poly@x+1,w
  8020  0E74  00C9               	movwf	___ftmul@f2+1
  8021  0E75  0857               	movf	eval_poly@x+2,w
  8022  0E76  00CA               	movwf	___ftmul@f2+2
  8023  0E77  3185  258A  318E   	fcall	___ftmul
  8024  0E7A  0140               	movlb	0	; select bank0
  8025  0E7B  0845               	movf	?___ftmul,w
  8026  0E7C  00B1               	movwf	___ftadd@f2
  8027  0E7D  0846               	movf	?___ftmul+1,w
  8028  0E7E  00B2               	movwf	___ftadd@f2+1
  8029  0E7F  0847               	movf	?___ftmul+2,w
  8030  0E80  00B3               	movwf	___ftadd@f2+2
  8031  0E81  3182  22BC  318E   	fcall	___ftadd
  8032  0E84  0140               	movlb	0	; select bank0
  8033  0E85  082E               	movf	?___ftadd,w
  8034  0E86  00DC               	movwf	eval_poly@res
  8035  0E87  082F               	movf	?___ftadd+1,w
  8036  0E88  00DD               	movwf	eval_poly@res+1
  8037  0E89  0830               	movf	?___ftadd+2,w
  8038  0E8A  00DE               	movwf	eval_poly@res+2
  8039  0E8B                     l5545:
  8040  0E8B  085A               	movf	eval_poly@n,w
  8041  0E8C  045B               	iorwf	eval_poly@n+1,w
  8042  0E8D  1D03               	btfss	3,2
  8043  0E8E  2E90               	goto	u5671
  8044  0E8F  2E91               	goto	u5670
  8045  0E90                     u5671:
  8046  0E90  2E4F               	goto	l5543
  8047  0E91                     u5670:
  8048  0E91                     l5547:
  8049  0E91  085C               	movf	eval_poly@res,w
  8050  0E92  00D5               	movwf	?_eval_poly
  8051  0E93  085D               	movf	eval_poly@res+1,w
  8052  0E94  00D6               	movwf	?_eval_poly+1
  8053  0E95  085E               	movf	eval_poly@res+2,w
  8054  0E96  00D7               	movwf	?_eval_poly+2
  8055  0E97                     l1437:
  8056  0E97  0008               	return
  8057  0E98                     __end_of_eval_poly:
  8058                           
  8059                           	psect	text19
  8060  0A1C                     __ptext19:	
  8061 ;; *************** function ___wmul *****************
  8062 ;; Defined at:
  8063 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8066 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  product         2    4[BANK0 ] unsigned int 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  2    0[BANK0 ] unsigned int 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8081 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8082 ;;Total ram usage:        6 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    5
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_eval_poly
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           
  8093                           ;psect for function ___wmul
  8094  0A1C                     ___wmul:
  8095  0A1C                     l5297:	
  8096                           ;incstack = 0
  8097                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8098                           
  8099  0A1C  0140               	movlb	0	; select bank0
  8100  0A1D  01A4               	clrf	___wmul@product
  8101  0A1E  01A5               	clrf	___wmul@product+1
  8102  0A1F                     l5299:
  8103  0A1F  1C20               	btfss	___wmul@multiplier,0
  8104  0A20  2A22               	goto	u5101
  8105  0A21  2A23               	goto	u5100
  8106  0A22                     u5101:
  8107  0A22  2A27               	goto	l990
  8108  0A23                     u5100:
  8109  0A23                     l5301:
  8110  0A23  0822               	movf	___wmul@multiplicand,w
  8111  0A24  07A4               	addwf	___wmul@product,f
  8112  0A25  0823               	movf	___wmul@multiplicand+1,w
  8113  0A26  3DA5               	addwfc	___wmul@product+1,f
  8114  0A27                     l990:
  8115  0A27  3001               	movlw	1
  8116  0A28                     u5115:
  8117  0A28  35A2               	lslf	___wmul@multiplicand,f
  8118  0A29  0DA3               	rlf	___wmul@multiplicand+1,f
  8119  0A2A  0B89               	decfsz	9,f
  8120  0A2B  2A28               	goto	u5115
  8121  0A2C                     l5303:
  8122  0A2C  3001               	movlw	1
  8123  0A2D                     u5125:
  8124  0A2D  36A1               	lsrf	___wmul@multiplier+1,f
  8125  0A2E  0CA0               	rrf	___wmul@multiplier,f
  8126  0A2F  0B89               	decfsz	9,f
  8127  0A30  2A2D               	goto	u5125
  8128  0A31                     l5305:
  8129  0A31  0820               	movf	___wmul@multiplier,w
  8130  0A32  0421               	iorwf	___wmul@multiplier+1,w
  8131  0A33  1D03               	btfss	3,2
  8132  0A34  2A36               	goto	u5131
  8133  0A35  2A37               	goto	u5130
  8134  0A36                     u5131:
  8135  0A36  2A1F               	goto	l5299
  8136  0A37                     u5130:
  8137  0A37                     l5307:
  8138  0A37  0825               	movf	___wmul@product+1,w
  8139  0A38  00A1               	movwf	?___wmul+1
  8140  0A39  0824               	movf	___wmul@product,w
  8141  0A3A  00A0               	movwf	?___wmul
  8142  0A3B                     l992:
  8143  0A3B  0008               	return
  8144  0A3C                     __end_of___wmul:
  8145                           
  8146                           	psect	text20
  8147  058A                     __ptext20:	
  8148 ;; *************** function ___ftmul *****************
  8149 ;; Defined at:
  8150 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  f1              3   37[BANK0 ] float 
  8153 ;;  f2              3   40[BANK0 ] float 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  f3_as_produc    3   48[BANK0 ] unsigned um
  8156 ;;  sign            1   52[BANK0 ] unsigned char 
  8157 ;;  cntr            1   51[BANK0 ] unsigned char 
  8158 ;;  exp             1   47[BANK0 ] unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  3   37[BANK0 ] float 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0, pclath, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8168 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8169 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8170 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8171 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8172 ;;Total ram usage:       16 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    6
  8175 ;; This function calls:
  8176 ;;		___ftpack
  8177 ;; This function is called by:
  8178 ;;		_SoundLevel_PrepareData
  8179 ;;		_log
  8180 ;;		_log10
  8181 ;;		_eval_poly
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           
  8186                           ;psect for function ___ftmul
  8187  058A                     ___ftmul:
  8188  058A                     l5381:	
  8189                           ;incstack = 0
  8190                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8191                           
  8192  058A  0140               	movlb	0	; select bank0
  8193  058B  0845               	movf	___ftmul@f1,w
  8194  058C  00CB               	movwf	??___ftmul
  8195  058D  0846               	movf	___ftmul@f1+1,w
  8196  058E  00CC               	movwf	??___ftmul+1
  8197  058F  0847               	movf	___ftmul@f1+2,w
  8198  0590  00CD               	movwf	??___ftmul+2
  8199  0591  1003               	clrc
  8200  0592  0D4C               	rlf	??___ftmul+1,w
  8201  0593  0D4D               	rlf	??___ftmul+2,w
  8202  0594  00CE               	movwf	??___ftmul+3
  8203  0595  084E               	movf	??___ftmul+3,w
  8204  0596  00CF               	movwf	___ftmul@exp
  8205  0597  084F               	movf	___ftmul@exp,w
  8206  0598  1D03               	btfss	3,2
  8207  0599  2D9B               	goto	u5371
  8208  059A  2D9C               	goto	u5370
  8209  059B                     u5371:
  8210  059B  2DA3               	goto	l5387
  8211  059C                     u5370:
  8212  059C                     l5383:
  8213  059C  3000               	movlw	0
  8214  059D  00C5               	movwf	?___ftmul
  8215  059E  3000               	movlw	0
  8216  059F  00C6               	movwf	?___ftmul+1
  8217  05A0  3000               	movlw	0
  8218  05A1  00C7               	movwf	?___ftmul+2
  8219  05A2  2E4A               	goto	l1265
  8220  05A3                     l5387:
  8221  05A3  0848               	movf	___ftmul@f2,w
  8222  05A4  00CB               	movwf	??___ftmul
  8223  05A5  0849               	movf	___ftmul@f2+1,w
  8224  05A6  00CC               	movwf	??___ftmul+1
  8225  05A7  084A               	movf	___ftmul@f2+2,w
  8226  05A8  00CD               	movwf	??___ftmul+2
  8227  05A9  1003               	clrc
  8228  05AA  0D4C               	rlf	??___ftmul+1,w
  8229  05AB  0D4D               	rlf	??___ftmul+2,w
  8230  05AC  00CE               	movwf	??___ftmul+3
  8231  05AD  084E               	movf	??___ftmul+3,w
  8232  05AE  00D4               	movwf	___ftmul@sign
  8233  05AF  0854               	movf	___ftmul@sign,w
  8234  05B0  1D03               	btfss	3,2
  8235  05B1  2DB3               	goto	u5381
  8236  05B2  2DB4               	goto	u5380
  8237  05B3                     u5381:
  8238  05B3  2DBB               	goto	l5393
  8239  05B4                     u5380:
  8240  05B4                     l5389:
  8241  05B4  3000               	movlw	0
  8242  05B5  00C5               	movwf	?___ftmul
  8243  05B6  3000               	movlw	0
  8244  05B7  00C6               	movwf	?___ftmul+1
  8245  05B8  3000               	movlw	0
  8246  05B9  00C7               	movwf	?___ftmul+2
  8247  05BA  2E4A               	goto	l1265
  8248  05BB                     l5393:
  8249  05BB  0854               	movf	___ftmul@sign,w
  8250  05BC  3E7B               	addlw	123
  8251  05BD  00CB               	movwf	??___ftmul
  8252  05BE  084B               	movf	??___ftmul,w
  8253  05BF  07CF               	addwf	___ftmul@exp,f
  8254  05C0  0845               	movf	___ftmul@f1,w
  8255  05C1  00CB               	movwf	??___ftmul
  8256  05C2  0846               	movf	___ftmul@f1+1,w
  8257  05C3  00CC               	movwf	??___ftmul+1
  8258  05C4  0847               	movf	___ftmul@f1+2,w
  8259  05C5  00CD               	movwf	??___ftmul+2
  8260  05C6  3010               	movlw	16
  8261  05C7                     u5395:
  8262  05C7  36CD               	lsrf	??___ftmul+2,f
  8263  05C8  0CCC               	rrf	??___ftmul+1,f
  8264  05C9  0CCB               	rrf	??___ftmul,f
  8265  05CA                     u5390:
  8266  05CA  0B89               	decfsz	9,f
  8267  05CB  2DC7               	goto	u5395
  8268  05CC  084B               	movf	??___ftmul,w
  8269  05CD  00CE               	movwf	??___ftmul+3
  8270  05CE  084E               	movf	??___ftmul+3,w
  8271  05CF  00D4               	movwf	___ftmul@sign
  8272  05D0  0848               	movf	___ftmul@f2,w
  8273  05D1  00CB               	movwf	??___ftmul
  8274  05D2  0849               	movf	___ftmul@f2+1,w
  8275  05D3  00CC               	movwf	??___ftmul+1
  8276  05D4  084A               	movf	___ftmul@f2+2,w
  8277  05D5  00CD               	movwf	??___ftmul+2
  8278  05D6  3010               	movlw	16
  8279  05D7                     u5405:
  8280  05D7  36CD               	lsrf	??___ftmul+2,f
  8281  05D8  0CCC               	rrf	??___ftmul+1,f
  8282  05D9  0CCB               	rrf	??___ftmul,f
  8283  05DA                     u5400:
  8284  05DA  0B89               	decfsz	9,f
  8285  05DB  2DD7               	goto	u5405
  8286  05DC  084B               	movf	??___ftmul,w
  8287  05DD  00CE               	movwf	??___ftmul+3
  8288  05DE  084E               	movf	??___ftmul+3,w
  8289  05DF  06D4               	xorwf	___ftmul@sign,f
  8290  05E0  3080               	movlw	128
  8291  05E1  00CB               	movwf	??___ftmul
  8292  05E2  084B               	movf	??___ftmul,w
  8293  05E3  05D4               	andwf	___ftmul@sign,f
  8294  05E4                     l5395:
  8295  05E4  17C6               	bsf	___ftmul@f1+1,7
  8296  05E5                     l5397:
  8297  05E5  17C9               	bsf	___ftmul@f2+1,7
  8298  05E6                     l5399:
  8299  05E6  30FF               	movlw	255
  8300  05E7  05C8               	andwf	___ftmul@f2,f
  8301  05E8  30FF               	movlw	255
  8302  05E9  05C9               	andwf	___ftmul@f2+1,f
  8303  05EA  3000               	movlw	0
  8304  05EB  05CA               	andwf	___ftmul@f2+2,f
  8305  05EC                     l5401:
  8306  05EC  3000               	movlw	0
  8307  05ED  00D0               	movwf	___ftmul@f3_as_product
  8308  05EE  3000               	movlw	0
  8309  05EF  00D1               	movwf	___ftmul@f3_as_product+1
  8310  05F0  3000               	movlw	0
  8311  05F1  00D2               	movwf	___ftmul@f3_as_product+2
  8312  05F2                     l5403:
  8313  05F2  3007               	movlw	7
  8314  05F3  00CB               	movwf	??___ftmul
  8315  05F4  084B               	movf	??___ftmul,w
  8316  05F5  00D3               	movwf	___ftmul@cntr
  8317  05F6                     l5405:
  8318  05F6  1C45               	btfss	___ftmul@f1,0
  8319  05F7  2DF9               	goto	u5411
  8320  05F8  2DFA               	goto	u5410
  8321  05F9                     u5411:
  8322  05F9  2E00               	goto	l5409
  8323  05FA                     u5410:
  8324  05FA                     l5407:
  8325  05FA  0848               	movf	___ftmul@f2,w
  8326  05FB  07D0               	addwf	___ftmul@f3_as_product,f
  8327  05FC  0849               	movf	___ftmul@f2+1,w
  8328  05FD  3DD1               	addwfc	___ftmul@f3_as_product+1,f
  8329  05FE  084A               	movf	___ftmul@f2+2,w
  8330  05FF  3DD2               	addwfc	___ftmul@f3_as_product+2,f
  8331  0600                     l5409:
  8332  0600  3001               	movlw	1
  8333  0601                     u5425:
  8334  0601  36C7               	lsrf	___ftmul@f1+2,f
  8335  0602  0CC6               	rrf	___ftmul@f1+1,f
  8336  0603  0CC5               	rrf	___ftmul@f1,f
  8337  0604  0B89               	decfsz	9,f
  8338  0605  2E01               	goto	u5425
  8339  0606                     l5411:
  8340  0606  3001               	movlw	1
  8341  0607                     u5435:
  8342  0607  35C8               	lslf	___ftmul@f2,f
  8343  0608  0DC9               	rlf	___ftmul@f2+1,f
  8344  0609  0DCA               	rlf	___ftmul@f2+2,f
  8345  060A  0B89               	decfsz	9,f
  8346  060B  2E07               	goto	u5435
  8347  060C                     l5413:
  8348  060C  3001               	movlw	1
  8349  060D  02D3               	subwf	___ftmul@cntr,f
  8350  060E  1D03               	btfss	3,2
  8351  060F  2E11               	goto	u5441
  8352  0610  2E12               	goto	u5440
  8353  0611                     u5441:
  8354  0611  2DF6               	goto	l5405
  8355  0612                     u5440:
  8356  0612                     l5415:
  8357  0612  3009               	movlw	9
  8358  0613  00CB               	movwf	??___ftmul
  8359  0614  084B               	movf	??___ftmul,w
  8360  0615  00D3               	movwf	___ftmul@cntr
  8361  0616                     l5417:
  8362  0616  1C45               	btfss	___ftmul@f1,0
  8363  0617  2E19               	goto	u5451
  8364  0618  2E1A               	goto	u5450
  8365  0619                     u5451:
  8366  0619  2E20               	goto	l5421
  8367  061A                     u5450:
  8368  061A                     l5419:
  8369  061A  0848               	movf	___ftmul@f2,w
  8370  061B  07D0               	addwf	___ftmul@f3_as_product,f
  8371  061C  0849               	movf	___ftmul@f2+1,w
  8372  061D  3DD1               	addwfc	___ftmul@f3_as_product+1,f
  8373  061E  084A               	movf	___ftmul@f2+2,w
  8374  061F  3DD2               	addwfc	___ftmul@f3_as_product+2,f
  8375  0620                     l5421:
  8376  0620  3001               	movlw	1
  8377  0621                     u5465:
  8378  0621  36C7               	lsrf	___ftmul@f1+2,f
  8379  0622  0CC6               	rrf	___ftmul@f1+1,f
  8380  0623  0CC5               	rrf	___ftmul@f1,f
  8381  0624  0B89               	decfsz	9,f
  8382  0625  2E21               	goto	u5465
  8383  0626                     l5423:
  8384  0626  3001               	movlw	1
  8385  0627                     u5475:
  8386  0627  36D2               	lsrf	___ftmul@f3_as_product+2,f
  8387  0628  0CD1               	rrf	___ftmul@f3_as_product+1,f
  8388  0629  0CD0               	rrf	___ftmul@f3_as_product,f
  8389  062A  0B89               	decfsz	9,f
  8390  062B  2E27               	goto	u5475
  8391  062C                     l5425:
  8392  062C  3001               	movlw	1
  8393  062D  02D3               	subwf	___ftmul@cntr,f
  8394  062E  1D03               	btfss	3,2
  8395  062F  2E31               	goto	u5481
  8396  0630  2E32               	goto	u5480
  8397  0631                     u5481:
  8398  0631  2E16               	goto	l5417
  8399  0632                     u5480:
  8400  0632                     l5427:
  8401  0632  0850               	movf	___ftmul@f3_as_product,w
  8402  0633  00A0               	movwf	___ftpack@arg
  8403  0634  0851               	movf	___ftmul@f3_as_product+1,w
  8404  0635  00A1               	movwf	___ftpack@arg+1
  8405  0636  0852               	movf	___ftmul@f3_as_product+2,w
  8406  0637  00A2               	movwf	___ftpack@arg+2
  8407  0638  084F               	movf	___ftmul@exp,w
  8408  0639  00CB               	movwf	??___ftmul
  8409  063A  084B               	movf	??___ftmul,w
  8410  063B  00A3               	movwf	___ftpack@exp
  8411  063C  0854               	movf	___ftmul@sign,w
  8412  063D  00CC               	movwf	??___ftmul+1
  8413  063E  084C               	movf	??___ftmul+1,w
  8414  063F  00A4               	movwf	___ftpack@sign
  8415  0640  318F  2706  3185   	fcall	___ftpack
  8416  0643  0140               	movlb	0	; select bank0
  8417  0644  0820               	movf	?___ftpack,w
  8418  0645  00C5               	movwf	?___ftmul
  8419  0646  0821               	movf	?___ftpack+1,w
  8420  0647  00C6               	movwf	?___ftmul+1
  8421  0648  0822               	movf	?___ftpack+2,w
  8422  0649  00C7               	movwf	?___ftmul+2
  8423  064A                     l1265:
  8424  064A  0008               	return
  8425  064B                     __end_of___ftmul:
  8426                           
  8427                           	psect	text21
  8428  02BC                     __ptext21:	
  8429 ;; *************** function ___ftadd *****************
  8430 ;; Defined at:
  8431 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftadd.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  f1              3   14[BANK0 ] float 
  8434 ;;  f2              3   17[BANK0 ] float 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;  exp1            1   26[BANK0 ] unsigned char 
  8437 ;;  exp2            1   25[BANK0 ] unsigned char 
  8438 ;;  sign            1   24[BANK0 ] unsigned char 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  3   14[BANK0 ] float 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, status,0, pclath, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8448 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8449 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8450 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8451 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8452 ;;Total ram usage:       13 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    6
  8455 ;; This function calls:
  8456 ;;		___ftpack
  8457 ;; This function is called by:
  8458 ;;		_SoundLevel_PrepareData
  8459 ;;		___ftsub
  8460 ;;		_log
  8461 ;;		_eval_poly
  8462 ;;		_round
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function ___ftadd
  8468  02BC                     ___ftadd:
  8469  02BC                     l5311:	
  8470                           ;incstack = 0
  8471                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8472                           
  8473  02BC  0140               	movlb	0	; select bank0
  8474  02BD  082E               	movf	___ftadd@f1,w
  8475  02BE  00B4               	movwf	??___ftadd
  8476  02BF  082F               	movf	___ftadd@f1+1,w
  8477  02C0  00B5               	movwf	??___ftadd+1
  8478  02C1  0830               	movf	___ftadd@f1+2,w
  8479  02C2  00B6               	movwf	??___ftadd+2
  8480  02C3  1003               	clrc
  8481  02C4  0D35               	rlf	??___ftadd+1,w
  8482  02C5  0D36               	rlf	??___ftadd+2,w
  8483  02C6  00B7               	movwf	??___ftadd+3
  8484  02C7  0837               	movf	??___ftadd+3,w
  8485  02C8  00BA               	movwf	___ftadd@exp1
  8486  02C9  0831               	movf	___ftadd@f2,w
  8487  02CA  00B4               	movwf	??___ftadd
  8488  02CB  0832               	movf	___ftadd@f2+1,w
  8489  02CC  00B5               	movwf	??___ftadd+1
  8490  02CD  0833               	movf	___ftadd@f2+2,w
  8491  02CE  00B6               	movwf	??___ftadd+2
  8492  02CF  1003               	clrc
  8493  02D0  0D35               	rlf	??___ftadd+1,w
  8494  02D1  0D36               	rlf	??___ftadd+2,w
  8495  02D2  00B7               	movwf	??___ftadd+3
  8496  02D3  0837               	movf	??___ftadd+3,w
  8497  02D4  00B9               	movwf	___ftadd@exp2
  8498  02D5  083A               	movf	___ftadd@exp1,w
  8499  02D6  1903               	btfsc	3,2
  8500  02D7  2AD9               	goto	u5141
  8501  02D8  2ADA               	goto	u5140
  8502  02D9                     u5141:
  8503  02D9  2AEA               	goto	l5317
  8504  02DA                     u5140:
  8505  02DA                     l5313:
  8506  02DA  0839               	movf	___ftadd@exp2,w
  8507  02DB  023A               	subwf	___ftadd@exp1,w
  8508  02DC  1803               	skipnc
  8509  02DD  2ADF               	goto	u5151
  8510  02DE  2AE0               	goto	u5150
  8511  02DF                     u5151:
  8512  02DF  2AF1               	goto	l5321
  8513  02E0                     u5150:
  8514  02E0                     l5315:
  8515  02E0  0839               	movf	___ftadd@exp2,w
  8516  02E1  00B4               	movwf	??___ftadd
  8517  02E2  083A               	movf	___ftadd@exp1,w
  8518  02E3  02B4               	subwf	??___ftadd,f
  8519  02E4  3019               	movlw	25
  8520  02E5  0234               	subwf	??___ftadd,w
  8521  02E6  1C03               	skipc
  8522  02E7  2AE9               	goto	u5161
  8523  02E8  2AEA               	goto	u5160
  8524  02E9                     u5161:
  8525  02E9  2AF1               	goto	l5321
  8526  02EA                     u5160:
  8527  02EA                     l5317:
  8528  02EA  0831               	movf	___ftadd@f2,w
  8529  02EB  00AE               	movwf	?___ftadd
  8530  02EC  0832               	movf	___ftadd@f2+1,w
  8531  02ED  00AF               	movwf	?___ftadd+1
  8532  02EE  0833               	movf	___ftadd@f2+2,w
  8533  02EF  00B0               	movwf	?___ftadd+2
  8534  02F0  2BDB               	goto	l1219
  8535  02F1                     l5321:
  8536  02F1  0839               	movf	___ftadd@exp2,w
  8537  02F2  1903               	btfsc	3,2
  8538  02F3  2AF5               	goto	u5171
  8539  02F4  2AF6               	goto	u5170
  8540  02F5                     u5171:
  8541  02F5  2B06               	goto	l1222
  8542  02F6                     u5170:
  8543  02F6                     l5323:
  8544  02F6  083A               	movf	___ftadd@exp1,w
  8545  02F7  0239               	subwf	___ftadd@exp2,w
  8546  02F8  1803               	skipnc
  8547  02F9  2AFB               	goto	u5181
  8548  02FA  2AFC               	goto	u5180
  8549  02FB                     u5181:
  8550  02FB  2B07               	goto	l5327
  8551  02FC                     u5180:
  8552  02FC                     l5325:
  8553  02FC  083A               	movf	___ftadd@exp1,w
  8554  02FD  00B4               	movwf	??___ftadd
  8555  02FE  0839               	movf	___ftadd@exp2,w
  8556  02FF  02B4               	subwf	??___ftadd,f
  8557  0300  3019               	movlw	25
  8558  0301  0234               	subwf	??___ftadd,w
  8559  0302  1C03               	skipc
  8560  0303  2B05               	goto	u5191
  8561  0304  2B06               	goto	u5190
  8562  0305                     u5191:
  8563  0305  2B07               	goto	l5327
  8564  0306                     u5190:
  8565  0306                     l1222:
  8566  0306  2BDB               	goto	l1219
  8567  0307                     l5327:
  8568  0307  3006               	movlw	6
  8569  0308  00B4               	movwf	??___ftadd
  8570  0309  0834               	movf	??___ftadd,w
  8571  030A  00B8               	movwf	___ftadd@sign
  8572  030B                     l5329:
  8573  030B  1FB0               	btfss	___ftadd@f1+2,7
  8574  030C  2B0E               	goto	u5201
  8575  030D  2B0F               	goto	u5200
  8576  030E                     u5201:
  8577  030E  2B10               	goto	l1223
  8578  030F                     u5200:
  8579  030F                     l5331:
  8580  030F  17B8               	bsf	___ftadd@sign,7
  8581  0310                     l1223:
  8582  0310  1FB3               	btfss	___ftadd@f2+2,7
  8583  0311  2B13               	goto	u5211
  8584  0312  2B14               	goto	u5210
  8585  0313                     u5211:
  8586  0313  2B15               	goto	l1224
  8587  0314                     u5210:
  8588  0314                     l5333:
  8589  0314  1738               	bsf	___ftadd@sign,6
  8590  0315                     l1224:
  8591  0315  17AF               	bsf	___ftadd@f1+1,7
  8592  0316                     l5335:
  8593  0316  30FF               	movlw	255
  8594  0317  05AE               	andwf	___ftadd@f1,f
  8595  0318  30FF               	movlw	255
  8596  0319  05AF               	andwf	___ftadd@f1+1,f
  8597  031A  3000               	movlw	0
  8598  031B  05B0               	andwf	___ftadd@f1+2,f
  8599  031C                     l5337:
  8600  031C  17B2               	bsf	___ftadd@f2+1,7
  8601  031D  30FF               	movlw	255
  8602  031E  05B1               	andwf	___ftadd@f2,f
  8603  031F  30FF               	movlw	255
  8604  0320  05B2               	andwf	___ftadd@f2+1,f
  8605  0321  3000               	movlw	0
  8606  0322  05B3               	andwf	___ftadd@f2+2,f
  8607  0323  0839               	movf	___ftadd@exp2,w
  8608  0324  023A               	subwf	___ftadd@exp1,w
  8609  0325  1803               	skipnc
  8610  0326  2B28               	goto	u5221
  8611  0327  2B29               	goto	u5220
  8612  0328                     u5221:
  8613  0328  2B51               	goto	l5349
  8614  0329                     u5220:
  8615  0329                     l5339:
  8616  0329  3001               	movlw	1
  8617  032A                     u5235:
  8618  032A  35B1               	lslf	___ftadd@f2,f
  8619  032B  0DB2               	rlf	___ftadd@f2+1,f
  8620  032C  0DB3               	rlf	___ftadd@f2+2,f
  8621  032D  0B89               	decfsz	9,f
  8622  032E  2B2A               	goto	u5235
  8623  032F  3001               	movlw	1
  8624  0330  02B9               	subwf	___ftadd@exp2,f
  8625  0331                     l5341:
  8626  0331  0839               	movf	___ftadd@exp2,w
  8627  0332  063A               	xorwf	___ftadd@exp1,w
  8628  0333  1903               	skipnz
  8629  0334  2B36               	goto	u5241
  8630  0335  2B37               	goto	u5240
  8631  0336                     u5241:
  8632  0336  2B4A               	goto	l5347
  8633  0337                     u5240:
  8634  0337                     l5343:
  8635  0337  3001               	movlw	1
  8636  0338  02B8               	subwf	___ftadd@sign,f
  8637  0339  0838               	movf	___ftadd@sign,w
  8638  033A  3907               	andlw	7
  8639  033B  1D03               	btfss	3,2
  8640  033C  2B3E               	goto	u5251
  8641  033D  2B3F               	goto	u5250
  8642  033E                     u5251:
  8643  033E  2B29               	goto	l5339
  8644  033F                     u5250:
  8645  033F  2B4A               	goto	l5347
  8646  0340                     l5345:
  8647  0340  3001               	movlw	1
  8648  0341                     u5265:
  8649  0341  36B0               	lsrf	___ftadd@f1+2,f
  8650  0342  0CAF               	rrf	___ftadd@f1+1,f
  8651  0343  0CAE               	rrf	___ftadd@f1,f
  8652  0344  0B89               	decfsz	9,f
  8653  0345  2B41               	goto	u5265
  8654  0346  3001               	movlw	1
  8655  0347  00B4               	movwf	??___ftadd
  8656  0348  0834               	movf	??___ftadd,w
  8657  0349  07BA               	addwf	___ftadd@exp1,f
  8658  034A                     l5347:
  8659  034A  083A               	movf	___ftadd@exp1,w
  8660  034B  0639               	xorwf	___ftadd@exp2,w
  8661  034C  1D03               	skipz
  8662  034D  2B4F               	goto	u5271
  8663  034E  2B50               	goto	u5270
  8664  034F                     u5271:
  8665  034F  2B40               	goto	l5345
  8666  0350                     u5270:
  8667  0350  2B7E               	goto	l1233
  8668  0351                     l5349:
  8669  0351  083A               	movf	___ftadd@exp1,w
  8670  0352  0239               	subwf	___ftadd@exp2,w
  8671  0353  1803               	skipnc
  8672  0354  2B56               	goto	u5281
  8673  0355  2B57               	goto	u5280
  8674  0356                     u5281:
  8675  0356  2B7E               	goto	l1233
  8676  0357                     u5280:
  8677  0357                     l5351:
  8678  0357  3001               	movlw	1
  8679  0358                     u5295:
  8680  0358  35AE               	lslf	___ftadd@f1,f
  8681  0359  0DAF               	rlf	___ftadd@f1+1,f
  8682  035A  0DB0               	rlf	___ftadd@f1+2,f
  8683  035B  0B89               	decfsz	9,f
  8684  035C  2B58               	goto	u5295
  8685  035D  3001               	movlw	1
  8686  035E  02BA               	subwf	___ftadd@exp1,f
  8687  035F                     l5353:
  8688  035F  0839               	movf	___ftadd@exp2,w
  8689  0360  063A               	xorwf	___ftadd@exp1,w
  8690  0361  1903               	skipnz
  8691  0362  2B64               	goto	u5301
  8692  0363  2B65               	goto	u5300
  8693  0364                     u5301:
  8694  0364  2B78               	goto	l5359
  8695  0365                     u5300:
  8696  0365                     l5355:
  8697  0365  3001               	movlw	1
  8698  0366  02B8               	subwf	___ftadd@sign,f
  8699  0367  0838               	movf	___ftadd@sign,w
  8700  0368  3907               	andlw	7
  8701  0369  1D03               	btfss	3,2
  8702  036A  2B6C               	goto	u5311
  8703  036B  2B6D               	goto	u5310
  8704  036C                     u5311:
  8705  036C  2B57               	goto	l5351
  8706  036D                     u5310:
  8707  036D  2B78               	goto	l5359
  8708  036E                     l5357:
  8709  036E  3001               	movlw	1
  8710  036F                     u5325:
  8711  036F  36B3               	lsrf	___ftadd@f2+2,f
  8712  0370  0CB2               	rrf	___ftadd@f2+1,f
  8713  0371  0CB1               	rrf	___ftadd@f2,f
  8714  0372  0B89               	decfsz	9,f
  8715  0373  2B6F               	goto	u5325
  8716  0374  3001               	movlw	1
  8717  0375  00B4               	movwf	??___ftadd
  8718  0376  0834               	movf	??___ftadd,w
  8719  0377  07B9               	addwf	___ftadd@exp2,f
  8720  0378                     l5359:
  8721  0378  083A               	movf	___ftadd@exp1,w
  8722  0379  0639               	xorwf	___ftadd@exp2,w
  8723  037A  1D03               	skipz
  8724  037B  2B7D               	goto	u5331
  8725  037C  2B7E               	goto	u5330
  8726  037D                     u5331:
  8727  037D  2B6E               	goto	l5357
  8728  037E                     u5330:
  8729  037E                     l1233:
  8730  037E  1FB8               	btfss	___ftadd@sign,7
  8731  037F  2B81               	goto	u5341
  8732  0380  2B82               	goto	u5340
  8733  0381                     u5341:
  8734  0381  2B92               	goto	l5363
  8735  0382                     u5340:
  8736  0382                     l5361:
  8737  0382  30FF               	movlw	255
  8738  0383  06AE               	xorwf	___ftadd@f1,f
  8739  0384  30FF               	movlw	255
  8740  0385  06AF               	xorwf	___ftadd@f1+1,f
  8741  0386  30FF               	movlw	255
  8742  0387  06B0               	xorwf	___ftadd@f1+2,f
  8743  0388  3001               	movlw	1
  8744  0389  07AE               	addwf	___ftadd@f1,f
  8745  038A  3000               	movlw	0
  8746  038B  1803               	skipnc
  8747  038C  3001               	movlw	1
  8748  038D  07AF               	addwf	___ftadd@f1+1,f
  8749  038E  3000               	movlw	0
  8750  038F  1803               	skipnc
  8751  0390  3001               	movlw	1
  8752  0391  07B0               	addwf	___ftadd@f1+2,f
  8753  0392                     l5363:
  8754  0392  1F38               	btfss	___ftadd@sign,6
  8755  0393  2B95               	goto	u5351
  8756  0394  2B96               	goto	u5350
  8757  0395                     u5351:
  8758  0395  2BA6               	goto	l5367
  8759  0396                     u5350:
  8760  0396                     l5365:
  8761  0396  30FF               	movlw	255
  8762  0397  06B1               	xorwf	___ftadd@f2,f
  8763  0398  30FF               	movlw	255
  8764  0399  06B2               	xorwf	___ftadd@f2+1,f
  8765  039A  30FF               	movlw	255
  8766  039B  06B3               	xorwf	___ftadd@f2+2,f
  8767  039C  3001               	movlw	1
  8768  039D  07B1               	addwf	___ftadd@f2,f
  8769  039E  3000               	movlw	0
  8770  039F  1803               	skipnc
  8771  03A0  3001               	movlw	1
  8772  03A1  07B2               	addwf	___ftadd@f2+1,f
  8773  03A2  3000               	movlw	0
  8774  03A3  1803               	skipnc
  8775  03A4  3001               	movlw	1
  8776  03A5  07B3               	addwf	___ftadd@f2+2,f
  8777  03A6                     l5367:
  8778  03A6  01B8               	clrf	___ftadd@sign
  8779  03A7                     l5369:
  8780  03A7  082E               	movf	___ftadd@f1,w
  8781  03A8  07B1               	addwf	___ftadd@f2,f
  8782  03A9  082F               	movf	___ftadd@f1+1,w
  8783  03AA  3DB2               	addwfc	___ftadd@f2+1,f
  8784  03AB  0830               	movf	___ftadd@f1+2,w
  8785  03AC  3DB3               	addwfc	___ftadd@f2+2,f
  8786  03AD                     l5371:
  8787  03AD  1FB3               	btfss	___ftadd@f2+2,7
  8788  03AE  2BB0               	goto	u5361
  8789  03AF  2BB1               	goto	u5360
  8790  03B0                     u5361:
  8791  03B0  2BC3               	goto	l5377
  8792  03B1                     u5360:
  8793  03B1                     l5373:
  8794  03B1  30FF               	movlw	255
  8795  03B2  06B1               	xorwf	___ftadd@f2,f
  8796  03B3  30FF               	movlw	255
  8797  03B4  06B2               	xorwf	___ftadd@f2+1,f
  8798  03B5  30FF               	movlw	255
  8799  03B6  06B3               	xorwf	___ftadd@f2+2,f
  8800  03B7  3001               	movlw	1
  8801  03B8  07B1               	addwf	___ftadd@f2,f
  8802  03B9  3000               	movlw	0
  8803  03BA  1803               	skipnc
  8804  03BB  3001               	movlw	1
  8805  03BC  07B2               	addwf	___ftadd@f2+1,f
  8806  03BD  3000               	movlw	0
  8807  03BE  1803               	skipnc
  8808  03BF  3001               	movlw	1
  8809  03C0  07B3               	addwf	___ftadd@f2+2,f
  8810  03C1                     l5375:
  8811  03C1  01B8               	clrf	___ftadd@sign
  8812  03C2  0AB8               	incf	___ftadd@sign,f
  8813  03C3                     l5377:
  8814  03C3  0831               	movf	___ftadd@f2,w
  8815  03C4  00A0               	movwf	___ftpack@arg
  8816  03C5  0832               	movf	___ftadd@f2+1,w
  8817  03C6  00A1               	movwf	___ftpack@arg+1
  8818  03C7  0833               	movf	___ftadd@f2+2,w
  8819  03C8  00A2               	movwf	___ftpack@arg+2
  8820  03C9  083A               	movf	___ftadd@exp1,w
  8821  03CA  00B4               	movwf	??___ftadd
  8822  03CB  0834               	movf	??___ftadd,w
  8823  03CC  00A3               	movwf	___ftpack@exp
  8824  03CD  0838               	movf	___ftadd@sign,w
  8825  03CE  00B5               	movwf	??___ftadd+1
  8826  03CF  0835               	movf	??___ftadd+1,w
  8827  03D0  00A4               	movwf	___ftpack@sign
  8828  03D1  318F  2706  3182   	fcall	___ftpack
  8829  03D4  0140               	movlb	0	; select bank0
  8830  03D5  0820               	movf	?___ftpack,w
  8831  03D6  00AE               	movwf	?___ftadd
  8832  03D7  0821               	movf	?___ftpack+1,w
  8833  03D8  00AF               	movwf	?___ftadd+1
  8834  03D9  0822               	movf	?___ftpack+2,w
  8835  03DA  00B0               	movwf	?___ftadd+2
  8836  03DB                     l1219:
  8837  03DB  0008               	return
  8838  03DC                     __end_of___ftadd:
  8839                           
  8840                           	psect	text22
  8841  0C0C                     __ptext22:	
  8842 ;; *************** function ___ftge *****************
  8843 ;; Defined at:
  8844 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftge.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  ff1             3    0[BANK0 ] float 
  8847 ;;  ff2             3    3[BANK0 ] float 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;		None               void
  8852 ;; Registers used:
  8853 ;;		wreg, status,2, status,0
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8859 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8862 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8863 ;;Total ram usage:        6 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    5
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_SoundLevel_PrepareData
  8870 ;;		_log
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           
  8875                           ;psect for function ___ftge
  8876  0C0C                     ___ftge:
  8877  0C0C                     l5459:	
  8878                           ;incstack = 0
  8879                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8880                           
  8881  0C0C  0140               	movlb	0	; select bank0
  8882  0C0D  1FA2               	btfss	___ftge@ff1+2,7
  8883  0C0E  2C10               	goto	u5531
  8884  0C0F  2C11               	goto	u5530
  8885  0C10                     u5531:
  8886  0C10  2C1E               	goto	l5463
  8887  0C11                     u5530:
  8888  0C11                     l5461:
  8889  0C11  0820               	movf	___ftge@ff1,w
  8890  0C12  3C00               	sublw	0
  8891  0C13  00A0               	movwf	___ftge@ff1
  8892  0C14  0821               	movf	___ftge@ff1+1,w
  8893  0C15  1C03               	skipc
  8894  0C16  0F21               	incfsz	___ftge@ff1+1,w
  8895  0C17  3C00               	sublw	0
  8896  0C18  00A1               	movwf	___ftge@ff1+1
  8897  0C19  0822               	movf	___ftge@ff1+2,w
  8898  0C1A  1C03               	skipc
  8899  0C1B  0F22               	incfsz	___ftge@ff1+2,w
  8900  0C1C  3C80               	sublw	128
  8901  0C1D  00A2               	movwf	___ftge@ff1+2
  8902  0C1E                     l5463:
  8903  0C1E  1FA5               	btfss	___ftge@ff2+2,7
  8904  0C1F  2C21               	goto	u5541
  8905  0C20  2C22               	goto	u5540
  8906  0C21                     u5541:
  8907  0C21  2C2F               	goto	l5467
  8908  0C22                     u5540:
  8909  0C22                     l5465:
  8910  0C22  0823               	movf	___ftge@ff2,w
  8911  0C23  3C00               	sublw	0
  8912  0C24  00A3               	movwf	___ftge@ff2
  8913  0C25  0824               	movf	___ftge@ff2+1,w
  8914  0C26  1C03               	skipc
  8915  0C27  0F24               	incfsz	___ftge@ff2+1,w
  8916  0C28  3C00               	sublw	0
  8917  0C29  00A4               	movwf	___ftge@ff2+1
  8918  0C2A  0825               	movf	___ftge@ff2+2,w
  8919  0C2B  1C03               	skipc
  8920  0C2C  0F25               	incfsz	___ftge@ff2+2,w
  8921  0C2D  3C80               	sublw	128
  8922  0C2E  00A5               	movwf	___ftge@ff2+2
  8923  0C2F                     l5467:
  8924  0C2F  3080               	movlw	128
  8925  0C30  06A2               	xorwf	___ftge@ff1+2,f
  8926  0C31                     l5469:
  8927  0C31  3080               	movlw	128
  8928  0C32  06A5               	xorwf	___ftge@ff2+2,f
  8929  0C33                     l5471:
  8930  0C33  0825               	movf	___ftge@ff2+2,w
  8931  0C34  0222               	subwf	___ftge@ff1+2,w
  8932  0C35  1D03               	skipz
  8933  0C36  2C3D               	goto	u5555
  8934  0C37  0824               	movf	___ftge@ff2+1,w
  8935  0C38  0221               	subwf	___ftge@ff1+1,w
  8936  0C39  1D03               	skipz
  8937  0C3A  2C3D               	goto	u5555
  8938  0C3B  0823               	movf	___ftge@ff2,w
  8939  0C3C  0220               	subwf	___ftge@ff1,w
  8940  0C3D                     u5555:
  8941  0C3D  1803               	skipnc
  8942  0C3E  2C40               	goto	u5551
  8943  0C3F  2C41               	goto	u5550
  8944  0C40                     u5551:
  8945  0C40  2C43               	goto	l5475
  8946  0C41                     u5550:
  8947  0C41                     l5473:
  8948  0C41  1003               	clrc
  8949  0C42  2C44               	goto	l1259
  8950  0C43                     l5475:
  8951  0C43  1403               	setc
  8952  0C44                     l1259:
  8953  0C44  0008               	return
  8954  0C45                     __end_of___ftge:
  8955                           
  8956                           	psect	text23
  8957  0AE5                     __ptext23:	
  8958 ;; *************** function ___awtoft *****************
  8959 ;; Defined at:
  8960 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  c               2    8[BANK0 ] int 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  sign            1   13[BANK0 ] unsigned char 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  3    8[BANK0 ] float 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, pclath, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8974 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8976 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8977 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8978 ;;Total ram usage:        6 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    6
  8981 ;; This function calls:
  8982 ;;		___ftpack
  8983 ;; This function is called by:
  8984 ;;		_log
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           
  8989                           ;psect for function ___awtoft
  8990  0AE5                     ___awtoft:
  8991  0AE5                     l5447:	
  8992                           ;incstack = 0
  8993                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8994                           
  8995  0AE5  0140               	movlb	0	; select bank0
  8996  0AE6  01AD               	clrf	___awtoft@sign
  8997  0AE7                     l5449:
  8998  0AE7  1FA9               	btfss	___awtoft@c+1,7
  8999  0AE8  2AEA               	goto	u5521
  9000  0AE9  2AEB               	goto	u5520
  9001  0AEA                     u5521:
  9002  0AEA  2AF2               	goto	l5455
  9003  0AEB                     u5520:
  9004  0AEB                     l5451:
  9005  0AEB  09A8               	comf	___awtoft@c,f
  9006  0AEC  09A9               	comf	___awtoft@c+1,f
  9007  0AED  0AA8               	incf	___awtoft@c,f
  9008  0AEE  1903               	skipnz
  9009  0AEF  0AA9               	incf	___awtoft@c+1,f
  9010  0AF0                     l5453:
  9011  0AF0  01AD               	clrf	___awtoft@sign
  9012  0AF1  0AAD               	incf	___awtoft@sign,f
  9013  0AF2                     l5455:
  9014  0AF2  0828               	movf	___awtoft@c,w
  9015  0AF3  00A0               	movwf	___ftpack@arg
  9016  0AF4  0829               	movf	___awtoft@c+1,w
  9017  0AF5  00A1               	movwf	___ftpack@arg+1
  9018  0AF6  01A2               	clrf	___ftpack@arg+2
  9019  0AF7  308E               	movlw	142
  9020  0AF8  00AB               	movwf	??___awtoft
  9021  0AF9  082B               	movf	??___awtoft,w
  9022  0AFA  00A3               	movwf	___ftpack@exp
  9023  0AFB  082D               	movf	___awtoft@sign,w
  9024  0AFC  00AC               	movwf	??___awtoft+1
  9025  0AFD  082C               	movf	??___awtoft+1,w
  9026  0AFE  00A4               	movwf	___ftpack@sign
  9027  0AFF  318F  2706  318A   	fcall	___ftpack
  9028  0B02  0140               	movlb	0	; select bank0
  9029  0B03  0820               	movf	?___ftpack,w
  9030  0B04  00A8               	movwf	?___awtoft
  9031  0B05  0821               	movf	?___ftpack+1,w
  9032  0B06  00A9               	movwf	?___awtoft+1
  9033  0B07  0822               	movf	?___ftpack+2,w
  9034  0B08  00AA               	movwf	?___awtoft+2
  9035  0B09                     l1192:
  9036  0B09  0008               	return
  9037  0B0A                     __end_of___awtoft:
  9038                           
  9039                           	psect	text24
  9040  09EB                     __ptext24:	
  9041 ;; *************** function ___lwtoft *****************
  9042 ;; Defined at:
  9043 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwtoft.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  c               2    8[BANK0 ] unsigned int 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  3    8[BANK0 ] float 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0, pclath, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9057 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9060 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9061 ;;Total ram usage:        4 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    6
  9064 ;; This function calls:
  9065 ;;		___ftpack
  9066 ;; This function is called by:
  9067 ;;		_SoundLevel_PrepareData
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           
  9072                           ;psect for function ___lwtoft
  9073  09EB                     ___lwtoft:
  9074  09EB                     l5663:	
  9075                           ;incstack = 0
  9076                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9077                           
  9078  09EB  0140               	movlb	0	; select bank0
  9079  09EC  0828               	movf	___lwtoft@c,w
  9080  09ED  00A0               	movwf	___ftpack@arg
  9081  09EE  0829               	movf	___lwtoft@c+1,w
  9082  09EF  00A1               	movwf	___ftpack@arg+1
  9083  09F0  01A2               	clrf	___ftpack@arg+2
  9084  09F1  308E               	movlw	142
  9085  09F2  00AB               	movwf	??___lwtoft
  9086  09F3  082B               	movf	??___lwtoft,w
  9087  09F4  00A3               	movwf	___ftpack@exp
  9088  09F5  01A4               	clrf	___ftpack@sign
  9089  09F6  318F  2706  3189   	fcall	___ftpack
  9090  09F9  0140               	movlb	0	; select bank0
  9091  09FA  0820               	movf	?___ftpack,w
  9092  09FB  00A8               	movwf	?___lwtoft
  9093  09FC  0821               	movf	?___ftpack+1,w
  9094  09FD  00A9               	movwf	?___lwtoft+1
  9095  09FE  0822               	movf	?___ftpack+2,w
  9096  09FF  00AA               	movwf	?___lwtoft+2
  9097  0A00                     l1413:
  9098  0A00  0008               	return
  9099  0A01                     __end_of___lwtoft:
  9100                           
  9101                           	psect	text25
  9102  0700                     __ptext25:	
  9103 ;; *************** function ___ftdiv *****************
  9104 ;; Defined at:
  9105 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdiv.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  f2              3    8[BANK0 ] float 
  9108 ;;  f1              3   11[BANK0 ] float 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  f3              3   20[BANK0 ] float 
  9111 ;;  sign            1   23[BANK0 ] unsigned char 
  9112 ;;  exp             1   19[BANK0 ] unsigned char 
  9113 ;;  cntr            1   18[BANK0 ] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  3    8[BANK0 ] float 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, pclath, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9123 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9124 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9126 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9127 ;;Total ram usage:       16 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    6
  9130 ;; This function calls:
  9131 ;;		___ftpack
  9132 ;; This function is called by:
  9133 ;;		_SoundLevel_PrepareData
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           
  9138                           ;psect for function ___ftdiv
  9139  0700                     ___ftdiv:
  9140  0700                     l5621:	
  9141                           ;incstack = 0
  9142                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9143                           
  9144  0700  0140               	movlb	0	; select bank0
  9145  0701  082B               	movf	___ftdiv@f1,w
  9146  0702  00AE               	movwf	??___ftdiv
  9147  0703  082C               	movf	___ftdiv@f1+1,w
  9148  0704  00AF               	movwf	??___ftdiv+1
  9149  0705  082D               	movf	___ftdiv@f1+2,w
  9150  0706  00B0               	movwf	??___ftdiv+2
  9151  0707  1003               	clrc
  9152  0708  0D2F               	rlf	??___ftdiv+1,w
  9153  0709  0D30               	rlf	??___ftdiv+2,w
  9154  070A  00B1               	movwf	??___ftdiv+3
  9155  070B  0831               	movf	??___ftdiv+3,w
  9156  070C  00B3               	movwf	___ftdiv@exp
  9157  070D  0833               	movf	___ftdiv@exp,w
  9158  070E  1D03               	btfss	3,2
  9159  070F  2F11               	goto	u5731
  9160  0710  2F12               	goto	u5730
  9161  0711                     u5731:
  9162  0711  2F19               	goto	l5627
  9163  0712                     u5730:
  9164  0712                     l5623:
  9165  0712  3000               	movlw	0
  9166  0713  00A8               	movwf	?___ftdiv
  9167  0714  3000               	movlw	0
  9168  0715  00A9               	movwf	?___ftdiv+1
  9169  0716  3000               	movlw	0
  9170  0717  00AA               	movwf	?___ftdiv+2
  9171  0718  2FB1               	goto	l1250
  9172  0719                     l5627:
  9173  0719  0828               	movf	___ftdiv@f2,w
  9174  071A  00AE               	movwf	??___ftdiv
  9175  071B  0829               	movf	___ftdiv@f2+1,w
  9176  071C  00AF               	movwf	??___ftdiv+1
  9177  071D  082A               	movf	___ftdiv@f2+2,w
  9178  071E  00B0               	movwf	??___ftdiv+2
  9179  071F  1003               	clrc
  9180  0720  0D2F               	rlf	??___ftdiv+1,w
  9181  0721  0D30               	rlf	??___ftdiv+2,w
  9182  0722  00B1               	movwf	??___ftdiv+3
  9183  0723  0831               	movf	??___ftdiv+3,w
  9184  0724  00B7               	movwf	___ftdiv@sign
  9185  0725  0837               	movf	___ftdiv@sign,w
  9186  0726  1D03               	btfss	3,2
  9187  0727  2F29               	goto	u5741
  9188  0728  2F2A               	goto	u5740
  9189  0729                     u5741:
  9190  0729  2F31               	goto	l5633
  9191  072A                     u5740:
  9192  072A                     l5629:
  9193  072A  3000               	movlw	0
  9194  072B  00A8               	movwf	?___ftdiv
  9195  072C  3000               	movlw	0
  9196  072D  00A9               	movwf	?___ftdiv+1
  9197  072E  3000               	movlw	0
  9198  072F  00AA               	movwf	?___ftdiv+2
  9199  0730  2FB1               	goto	l1250
  9200  0731                     l5633:
  9201  0731  3000               	movlw	0
  9202  0732  00B4               	movwf	___ftdiv@f3
  9203  0733  3000               	movlw	0
  9204  0734  00B5               	movwf	___ftdiv@f3+1
  9205  0735  3000               	movlw	0
  9206  0736  00B6               	movwf	___ftdiv@f3+2
  9207  0737                     l5635:
  9208  0737  3089               	movlw	137
  9209  0738  0737               	addwf	___ftdiv@sign,w
  9210  0739  00AE               	movwf	??___ftdiv
  9211  073A  082E               	movf	??___ftdiv,w
  9212  073B  02B3               	subwf	___ftdiv@exp,f
  9213  073C                     l5637:
  9214  073C  082B               	movf	___ftdiv@f1,w
  9215  073D  00AE               	movwf	??___ftdiv
  9216  073E  082C               	movf	___ftdiv@f1+1,w
  9217  073F  00AF               	movwf	??___ftdiv+1
  9218  0740  082D               	movf	___ftdiv@f1+2,w
  9219  0741  00B0               	movwf	??___ftdiv+2
  9220  0742  3010               	movlw	16
  9221  0743                     u5755:
  9222  0743  36B0               	lsrf	??___ftdiv+2,f
  9223  0744  0CAF               	rrf	??___ftdiv+1,f
  9224  0745  0CAE               	rrf	??___ftdiv,f
  9225  0746                     u5750:
  9226  0746  0B89               	decfsz	9,f
  9227  0747  2F43               	goto	u5755
  9228  0748  082E               	movf	??___ftdiv,w
  9229  0749  00B1               	movwf	??___ftdiv+3
  9230  074A  0831               	movf	??___ftdiv+3,w
  9231  074B  00B7               	movwf	___ftdiv@sign
  9232  074C                     l5639:
  9233  074C  0828               	movf	___ftdiv@f2,w
  9234  074D  00AE               	movwf	??___ftdiv
  9235  074E  0829               	movf	___ftdiv@f2+1,w
  9236  074F  00AF               	movwf	??___ftdiv+1
  9237  0750  082A               	movf	___ftdiv@f2+2,w
  9238  0751  00B0               	movwf	??___ftdiv+2
  9239  0752  3010               	movlw	16
  9240  0753                     u5765:
  9241  0753  36B0               	lsrf	??___ftdiv+2,f
  9242  0754  0CAF               	rrf	??___ftdiv+1,f
  9243  0755  0CAE               	rrf	??___ftdiv,f
  9244  0756                     u5760:
  9245  0756  0B89               	decfsz	9,f
  9246  0757  2F53               	goto	u5765
  9247  0758  082E               	movf	??___ftdiv,w
  9248  0759  00B1               	movwf	??___ftdiv+3
  9249  075A  0831               	movf	??___ftdiv+3,w
  9250  075B  06B7               	xorwf	___ftdiv@sign,f
  9251  075C                     l5641:
  9252  075C  3080               	movlw	128
  9253  075D  00AE               	movwf	??___ftdiv
  9254  075E  082E               	movf	??___ftdiv,w
  9255  075F  05B7               	andwf	___ftdiv@sign,f
  9256  0760                     l5643:
  9257  0760  17AC               	bsf	___ftdiv@f1+1,7
  9258  0761  30FF               	movlw	255
  9259  0762  05AB               	andwf	___ftdiv@f1,f
  9260  0763  30FF               	movlw	255
  9261  0764  05AC               	andwf	___ftdiv@f1+1,f
  9262  0765  3000               	movlw	0
  9263  0766  05AD               	andwf	___ftdiv@f1+2,f
  9264  0767                     l5645:
  9265  0767  17A9               	bsf	___ftdiv@f2+1,7
  9266  0768  30FF               	movlw	255
  9267  0769  05A8               	andwf	___ftdiv@f2,f
  9268  076A  30FF               	movlw	255
  9269  076B  05A9               	andwf	___ftdiv@f2+1,f
  9270  076C  3000               	movlw	0
  9271  076D  05AA               	andwf	___ftdiv@f2+2,f
  9272  076E  3018               	movlw	24
  9273  076F  00AE               	movwf	??___ftdiv
  9274  0770  082E               	movf	??___ftdiv,w
  9275  0771  00B2               	movwf	___ftdiv@cntr
  9276  0772                     l5647:
  9277  0772  3001               	movlw	1
  9278  0773                     u5775:
  9279  0773  35B4               	lslf	___ftdiv@f3,f
  9280  0774  0DB5               	rlf	___ftdiv@f3+1,f
  9281  0775  0DB6               	rlf	___ftdiv@f3+2,f
  9282  0776  0B89               	decfsz	9,f
  9283  0777  2F73               	goto	u5775
  9284  0778                     l5649:
  9285  0778  082A               	movf	___ftdiv@f2+2,w
  9286  0779  022D               	subwf	___ftdiv@f1+2,w
  9287  077A  1D03               	skipz
  9288  077B  2F82               	goto	u5785
  9289  077C  0829               	movf	___ftdiv@f2+1,w
  9290  077D  022C               	subwf	___ftdiv@f1+1,w
  9291  077E  1D03               	skipz
  9292  077F  2F82               	goto	u5785
  9293  0780  0828               	movf	___ftdiv@f2,w
  9294  0781  022B               	subwf	___ftdiv@f1,w
  9295  0782                     u5785:
  9296  0782  1C03               	skipc
  9297  0783  2F85               	goto	u5781
  9298  0784  2F86               	goto	u5780
  9299  0785                     u5781:
  9300  0785  2F8D               	goto	l5655
  9301  0786                     u5780:
  9302  0786                     l5651:
  9303  0786  0828               	movf	___ftdiv@f2,w
  9304  0787  02AB               	subwf	___ftdiv@f1,f
  9305  0788  0829               	movf	___ftdiv@f2+1,w
  9306  0789  3BAC               	subwfb	___ftdiv@f1+1,f
  9307  078A  082A               	movf	___ftdiv@f2+2,w
  9308  078B  3BAD               	subwfb	___ftdiv@f1+2,f
  9309  078C                     l5653:
  9310  078C  1434               	bsf	___ftdiv@f3,0
  9311  078D                     l5655:
  9312  078D  3001               	movlw	1
  9313  078E                     u5795:
  9314  078E  35AB               	lslf	___ftdiv@f1,f
  9315  078F  0DAC               	rlf	___ftdiv@f1+1,f
  9316  0790  0DAD               	rlf	___ftdiv@f1+2,f
  9317  0791  0B89               	decfsz	9,f
  9318  0792  2F8E               	goto	u5795
  9319  0793                     l5657:
  9320  0793  3001               	movlw	1
  9321  0794  02B2               	subwf	___ftdiv@cntr,f
  9322  0795  1D03               	btfss	3,2
  9323  0796  2F98               	goto	u5801
  9324  0797  2F99               	goto	u5800
  9325  0798                     u5801:
  9326  0798  2F72               	goto	l5647
  9327  0799                     u5800:
  9328  0799                     l5659:
  9329  0799  0834               	movf	___ftdiv@f3,w
  9330  079A  00A0               	movwf	___ftpack@arg
  9331  079B  0835               	movf	___ftdiv@f3+1,w
  9332  079C  00A1               	movwf	___ftpack@arg+1
  9333  079D  0836               	movf	___ftdiv@f3+2,w
  9334  079E  00A2               	movwf	___ftpack@arg+2
  9335  079F  0833               	movf	___ftdiv@exp,w
  9336  07A0  00AE               	movwf	??___ftdiv
  9337  07A1  082E               	movf	??___ftdiv,w
  9338  07A2  00A3               	movwf	___ftpack@exp
  9339  07A3  0837               	movf	___ftdiv@sign,w
  9340  07A4  00AF               	movwf	??___ftdiv+1
  9341  07A5  082F               	movf	??___ftdiv+1,w
  9342  07A6  00A4               	movwf	___ftpack@sign
  9343  07A7  318F  2706  3187   	fcall	___ftpack
  9344  07AA  0140               	movlb	0	; select bank0
  9345  07AB  0820               	movf	?___ftpack,w
  9346  07AC  00A8               	movwf	?___ftdiv
  9347  07AD  0821               	movf	?___ftpack+1,w
  9348  07AE  00A9               	movwf	?___ftdiv+1
  9349  07AF  0822               	movf	?___ftpack+2,w
  9350  07B0  00AA               	movwf	?___ftdiv+2
  9351  07B1                     l1250:
  9352  07B1  0008               	return
  9353  07B2                     __end_of___ftdiv:
  9354                           
  9355                           	psect	text26
  9356  0F06                     __ptext26:	
  9357 ;; *************** function ___ftpack *****************
  9358 ;; Defined at:
  9359 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  arg             3    0[BANK0 ] unsigned um
  9362 ;;  exp             1    3[BANK0 ] unsigned char 
  9363 ;;  sign            1    4[BANK0 ] unsigned char 
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;		None
  9366 ;; Return value:  Size  Location     Type
  9367 ;;                  3    0[BANK0 ] float 
  9368 ;; Registers used:
  9369 ;;		wreg, status,2, status,0
  9370 ;; Tracked objects:
  9371 ;;		On entry : 0/0
  9372 ;;		On exit  : 0/0
  9373 ;;		Unchanged: 0/0
  9374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9375 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9377 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9378 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9379 ;;Total ram usage:        8 bytes
  9380 ;; Hardware stack levels used:    1
  9381 ;; Hardware stack levels required when called:    5
  9382 ;; This function calls:
  9383 ;;		Nothing
  9384 ;; This function is called by:
  9385 ;;		___altoft
  9386 ;;		___awtoft
  9387 ;;		___ftadd
  9388 ;;		___ftdiv
  9389 ;;		___ftmul
  9390 ;;		___lwtoft
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           
  9395                           ;psect for function ___ftpack
  9396  0F06                     ___ftpack:
  9397  0F06                     l5265:	
  9398                           ;incstack = 0
  9399                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9400                           
  9401  0F06  0140               	movlb	0	; select bank0
  9402  0F07  0823               	movf	___ftpack@exp,w
  9403  0F08  1903               	btfsc	3,2
  9404  0F09  2F0B               	goto	u4981
  9405  0F0A  2F0C               	goto	u4980
  9406  0F0B                     u4981:
  9407  0F0B  2F13               	goto	l5269
  9408  0F0C                     u4980:
  9409  0F0C                     l5267:
  9410  0F0C  0822               	movf	___ftpack@arg+2,w
  9411  0F0D  0421               	iorwf	___ftpack@arg+1,w
  9412  0F0E  0420               	iorwf	___ftpack@arg,w
  9413  0F0F  1D03               	skipz
  9414  0F10  2F12               	goto	u4991
  9415  0F11  2F13               	goto	u4990
  9416  0F12                     u4991:
  9417  0F12  2F24               	goto	l5275
  9418  0F13                     u4990:
  9419  0F13                     l5269:
  9420  0F13  3000               	movlw	0
  9421  0F14  00A0               	movwf	?___ftpack
  9422  0F15  3000               	movlw	0
  9423  0F16  00A1               	movwf	?___ftpack+1
  9424  0F17  3000               	movlw	0
  9425  0F18  00A2               	movwf	?___ftpack+2
  9426  0F19  2F7A               	goto	l1198
  9427  0F1A                     l5273:
  9428  0F1A  3001               	movlw	1
  9429  0F1B  00A5               	movwf	??___ftpack
  9430  0F1C  0825               	movf	??___ftpack,w
  9431  0F1D  07A3               	addwf	___ftpack@exp,f
  9432  0F1E  3001               	movlw	1
  9433  0F1F                     u5005:
  9434  0F1F  36A2               	lsrf	___ftpack@arg+2,f
  9435  0F20  0CA1               	rrf	___ftpack@arg+1,f
  9436  0F21  0CA0               	rrf	___ftpack@arg,f
  9437  0F22  0B89               	decfsz	9,f
  9438  0F23  2F1F               	goto	u5005
  9439  0F24                     l5275:
  9440  0F24  30FE               	movlw	254
  9441  0F25  0522               	andwf	___ftpack@arg+2,w
  9442  0F26  1D03               	btfss	3,2
  9443  0F27  2F29               	goto	u5011
  9444  0F28  2F2A               	goto	u5010
  9445  0F29                     u5011:
  9446  0F29  2F1A               	goto	l5273
  9447  0F2A                     u5010:
  9448  0F2A  2F3F               	goto	l1202
  9449  0F2B                     l5277:
  9450  0F2B  3001               	movlw	1
  9451  0F2C  00A5               	movwf	??___ftpack
  9452  0F2D  0825               	movf	??___ftpack,w
  9453  0F2E  07A3               	addwf	___ftpack@exp,f
  9454  0F2F                     l5279:
  9455  0F2F  3001               	movlw	1
  9456  0F30  07A0               	addwf	___ftpack@arg,f
  9457  0F31  3000               	movlw	0
  9458  0F32  1803               	skipnc
  9459  0F33  3001               	movlw	1
  9460  0F34  07A1               	addwf	___ftpack@arg+1,f
  9461  0F35  3000               	movlw	0
  9462  0F36  1803               	skipnc
  9463  0F37  3001               	movlw	1
  9464  0F38  07A2               	addwf	___ftpack@arg+2,f
  9465  0F39                     l5281:
  9466  0F39  3001               	movlw	1
  9467  0F3A                     u5025:
  9468  0F3A  36A2               	lsrf	___ftpack@arg+2,f
  9469  0F3B  0CA1               	rrf	___ftpack@arg+1,f
  9470  0F3C  0CA0               	rrf	___ftpack@arg,f
  9471  0F3D  0B89               	decfsz	9,f
  9472  0F3E  2F3A               	goto	u5025
  9473  0F3F                     l1202:
  9474  0F3F  30FF               	movlw	255
  9475  0F40  0522               	andwf	___ftpack@arg+2,w
  9476  0F41  1D03               	btfss	3,2
  9477  0F42  2F44               	goto	u5031
  9478  0F43  2F45               	goto	u5030
  9479  0F44                     u5031:
  9480  0F44  2F2B               	goto	l5277
  9481  0F45                     u5030:
  9482  0F45  2F4E               	goto	l5285
  9483  0F46                     l5283:
  9484  0F46  3001               	movlw	1
  9485  0F47  02A3               	subwf	___ftpack@exp,f
  9486  0F48  3001               	movlw	1
  9487  0F49                     u5045:
  9488  0F49  35A0               	lslf	___ftpack@arg,f
  9489  0F4A  0DA1               	rlf	___ftpack@arg+1,f
  9490  0F4B  0DA2               	rlf	___ftpack@arg+2,f
  9491  0F4C  0B89               	decfsz	9,f
  9492  0F4D  2F49               	goto	u5045
  9493  0F4E                     l5285:
  9494  0F4E  1BA1               	btfsc	___ftpack@arg+1,7
  9495  0F4F  2F51               	goto	u5051
  9496  0F50  2F52               	goto	u5050
  9497  0F51                     u5051:
  9498  0F51  2F58               	goto	l1209
  9499  0F52                     u5050:
  9500  0F52                     l5287:
  9501  0F52  3002               	movlw	2
  9502  0F53  0223               	subwf	___ftpack@exp,w
  9503  0F54  1803               	skipnc
  9504  0F55  2F57               	goto	u5061
  9505  0F56  2F58               	goto	u5060
  9506  0F57                     u5061:
  9507  0F57  2F46               	goto	l5283
  9508  0F58                     u5060:
  9509  0F58                     l1209:
  9510  0F58  1823               	btfsc	___ftpack@exp,0
  9511  0F59  2F5B               	goto	u5071
  9512  0F5A  2F5C               	goto	u5070
  9513  0F5B                     u5071:
  9514  0F5B  2F62               	goto	l1210
  9515  0F5C                     u5070:
  9516  0F5C                     l5289:
  9517  0F5C  30FF               	movlw	255
  9518  0F5D  05A0               	andwf	___ftpack@arg,f
  9519  0F5E  307F               	movlw	127
  9520  0F5F  05A1               	andwf	___ftpack@arg+1,f
  9521  0F60  30FF               	movlw	255
  9522  0F61  05A2               	andwf	___ftpack@arg+2,f
  9523  0F62                     l1210:
  9524  0F62  1003               	clrc
  9525  0F63  0CA3               	rrf	___ftpack@exp,f
  9526  0F64                     l5291:
  9527  0F64  0823               	movf	___ftpack@exp,w
  9528  0F65  00A5               	movwf	??___ftpack
  9529  0F66  01A6               	clrf	??___ftpack+1
  9530  0F67  01A7               	clrf	??___ftpack+2
  9531  0F68  3010               	movlw	16
  9532  0F69                     u5085:
  9533  0F69  35A5               	lslf	??___ftpack,f
  9534  0F6A  0DA6               	rlf	??___ftpack+1,f
  9535  0F6B  0DA7               	rlf	??___ftpack+2,f
  9536  0F6C                     u5080:
  9537  0F6C  0B89               	decfsz	9,f
  9538  0F6D  2F69               	goto	u5085
  9539  0F6E  0825               	movf	??___ftpack,w
  9540  0F6F  04A0               	iorwf	___ftpack@arg,f
  9541  0F70  0826               	movf	??___ftpack+1,w
  9542  0F71  04A1               	iorwf	___ftpack@arg+1,f
  9543  0F72  0827               	movf	??___ftpack+2,w
  9544  0F73  04A2               	iorwf	___ftpack@arg+2,f
  9545  0F74                     l5293:
  9546  0F74  0824               	movf	___ftpack@sign,w
  9547  0F75  1903               	btfsc	3,2
  9548  0F76  2F78               	goto	u5091
  9549  0F77  2F79               	goto	u5090
  9550  0F78                     u5091:
  9551  0F78  2F7A               	goto	l1211
  9552  0F79                     u5090:
  9553  0F79                     l5295:
  9554  0F79  17A2               	bsf	___ftpack@arg+2,7
  9555  0F7A                     l1211:
  9556  0F7A                     l1198:
  9557  0F7A  0008               	return
  9558  0F7B                     __end_of___ftpack:
  9559                           
  9560                           	psect	text27
  9561  09C6                     __ptext27:	
  9562 ;; *************** function _MIC_Mode *****************
  9563 ;; Defined at:
  9564 ;;		line 196 in file "Sensors/sound_level.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  mode            1    wreg     unsigned char 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  mode            1    0[BANK0 ] unsigned char 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      void 
  9571 ;; Registers used:
  9572 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9582 ;;Total ram usage:        1 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; Hardware stack levels required when called:    5
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_SoundLevel_Loop
  9589 ;;		_SoundLevel_SetThreshold
  9590 ;;		_measure
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           
  9595                           ;psect for function _MIC_Mode
  9596  09C6                     _MIC_Mode:
  9597                           
  9598                           ;incstack = 0
  9599                           ; Regs used in _MIC_Mode: [wreg-fsr0h+status,2+status,0]
  9600                           ;MIC_Mode@mode stored from wreg
  9601  09C6  0140               	movlb	0	; select bank0
  9602  09C7  00A0               	movwf	MIC_Mode@mode
  9603  09C8                     l5689:
  9604                           
  9605                           ;sound_level.c: 198: switch(mode)
  9606  09C8  29CF               	goto	l5691
  9607  09C9                     l200:	
  9608                           ;sound_level.c: 201: do { LATCbits.LATC3 = 0; } while(0);
  9609                           
  9610  09C9  119A               	bcf	26,3	;volatile
  9611  09CA  29D7               	goto	l209
  9612  09CB                     l204:	
  9613                           ;sound_level.c: 207: do { LATCbits.LATC3 = 1; } while(0);
  9614                           
  9615  09CB  159A               	bsf	26,3	;volatile
  9616  09CC  29D7               	goto	l209
  9617  09CD                     l207:	
  9618                           ;sound_level.c: 212: do { LATCbits.LATC3 = 0; } while(0);
  9619                           
  9620  09CD  119A               	bcf	26,3	;volatile
  9621  09CE  29D7               	goto	l209
  9622  09CF                     l5691:
  9623  09CF  0820               	movf	MIC_Mode@mode,w
  9624                           
  9625                           ; Switch size 1, requested type "simple"
  9626                           ; Number of cases is 2, Range of values is 1 to 2
  9627                           ; switch strategies available:
  9628                           ; Name         Instructions Cycles
  9629                           ; simple_byte            7     4 (average)
  9630                           ; direct_byte           13     9 (fixed)
  9631                           ; jumptable            263     9 (fixed)
  9632                           ;	Chosen strategy is simple_byte
  9633  09D0  3A01               	xorlw	1	; case 1
  9634  09D1  1903               	skipnz
  9635  09D2  29C9               	goto	l200
  9636  09D3  3A03               	xorlw	3	; case 2
  9637  09D4  1903               	skipnz
  9638  09D5  29CB               	goto	l204
  9639  09D6  29CD               	goto	l207
  9640  09D7                     l209:
  9641  09D7  0008               	return
  9642  09D8                     __end_of_MIC_Mode:
  9643                           
  9644                           	psect	text28
  9645  0AC1                     __ptext28:	
  9646 ;; *************** function _AMPS_enable *****************
  9647 ;; Defined at:
  9648 ;;		line 252 in file "Sensors/sound_level.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  enable          1    wreg     unsigned char 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  enable          1    2[BANK0 ] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9664 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9665 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9666 ;;Total ram usage:        3 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    5
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_measure
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function _AMPS_enable
  9678  0AC1                     _AMPS_enable:
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in _AMPS_enable: [wreg-fsr0h+status,2+status,0]
  9682                           ;AMPS_enable@enable stored from wreg
  9683  0AC1  0140               	movlb	0	; select bank0
  9684  0AC2  00A2               	movwf	AMPS_enable@enable
  9685  0AC3                     l5693:
  9686                           
  9687                           ;sound_level.c: 254: switch(enable)
  9688  0AC3  2ADC               	goto	l5697
  9689  0AC4                     l252:	
  9690                           ;sound_level.c: 257: do { LATBbits.LATB4 = 1; } while(0);
  9691                           
  9692  0AC4  1619               	bsf	25,4	;volatile
  9693  0AC5                     l254:	
  9694                           ;sound_level.c: 258: do { LATCbits.LATC2 = 1; } while(0);
  9695                           
  9696  0AC5  151A               	bsf	26,2	;volatile
  9697  0AC6                     l256:	
  9698                           ;sound_level.c: 259: do { LATCbits.LATC4 = 1; } while(0);
  9699                           
  9700  0AC6  161A               	bsf	26,4	;volatile
  9701  0AC7                     l5695:
  9702                           
  9703                           ;sound_level.c: 260: _delay((unsigned long)((100)*(32000000/4000.0)));
  9704  0AC7  3005               	movlw	5
  9705  0AC8  0140               	movlb	0	; select bank0
  9706  0AC9  00A1               	movwf	??_AMPS_enable+1
  9707  0ACA  300F               	movlw	15
  9708  0ACB  00A0               	movwf	??_AMPS_enable
  9709  0ACC  30F1               	movlw	241
  9710  0ACD                     u6247:
  9711  0ACD  0B89               	decfsz	9,f
  9712  0ACE  2ACD               	goto	u6247
  9713  0ACF  0BA0               	decfsz	??_AMPS_enable,f
  9714  0AD0  2ACD               	goto	u6247
  9715  0AD1  0BA1               	decfsz	??_AMPS_enable+1,f
  9716  0AD2  2ACD               	goto	u6247
  9717                           
  9718                           ;sound_level.c: 261: break;
  9719  0AD3  2AE4               	goto	l273
  9720  0AD4                     l260:	
  9721                           ;sound_level.c: 264: do { LATBbits.LATB4 = 0; } while(0);
  9722                           
  9723  0AD4  1219               	bcf	25,4	;volatile
  9724  0AD5                     l262:	
  9725                           ;sound_level.c: 265: do { LATCbits.LATC2 = 0; } while(0);
  9726                           
  9727  0AD5  111A               	bcf	26,2	;volatile
  9728  0AD6                     l264:	
  9729                           ;sound_level.c: 266: do { LATCbits.LATC4 = 0; } while(0);
  9730                           
  9731  0AD6  121A               	bcf	26,4	;volatile
  9732  0AD7  2AE4               	goto	l273
  9733  0AD8                     l267:	
  9734                           ;sound_level.c: 270: do { LATBbits.LATB4 = 0; } while(0);
  9735                           
  9736  0AD8  1219               	bcf	25,4	;volatile
  9737  0AD9                     l269:	
  9738                           ;sound_level.c: 271: do { LATCbits.LATC2 = 0; } while(0);
  9739                           
  9740  0AD9  111A               	bcf	26,2	;volatile
  9741  0ADA                     l271:	
  9742                           ;sound_level.c: 272: do { LATCbits.LATC4 = 0; } while(0);
  9743                           
  9744  0ADA  121A               	bcf	26,4	;volatile
  9745  0ADB  2AE4               	goto	l273
  9746  0ADC                     l5697:
  9747  0ADC  0822               	movf	AMPS_enable@enable,w
  9748                           
  9749                           ; Switch size 1, requested type "simple"
  9750                           ; Number of cases is 2, Range of values is 0 to 1
  9751                           ; switch strategies available:
  9752                           ; Name         Instructions Cycles
  9753                           ; simple_byte            7     4 (average)
  9754                           ; direct_byte           10     6 (fixed)
  9755                           ; jumptable            260     6 (fixed)
  9756                           ;	Chosen strategy is simple_byte
  9757  0ADD  3A00               	xorlw	0	; case 0
  9758  0ADE  1903               	skipnz
  9759  0ADF  2AD4               	goto	l260
  9760  0AE0  3A01               	xorlw	1	; case 1
  9761  0AE1  1903               	skipnz
  9762  0AE2  2AC4               	goto	l252
  9763  0AE3  2AD8               	goto	l267
  9764  0AE4                     l273:
  9765  0AE4  0008               	return
  9766  0AE5                     __end_of_AMPS_enable:
  9767                           
  9768                           	psect	text29
  9769  099A                     __ptext29:	
  9770 ;; *************** function _generateInt *****************
  9771 ;; Defined at:
  9772 ;;		line 586 in file "Sensors/sound_level.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9790 ;;Total ram usage:        1 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    5
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_SoundLevel_Loop
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           
  9801                           ;psect for function _generateInt
  9802  099A                     _generateInt:
  9803  099A                     l361:	
  9804                           ;incstack = 0
  9805                           ; Regs used in _generateInt: [wreg]
  9806                           ;sound_level.c: 587: do { LATCbits.LATC7 = 0; } while(0);
  9807                           
  9808  099A  0140               	movlb	0	; select bank0
  9809  099B  139A               	bcf	26,7	;volatile
  9810  099C                     l5809:
  9811                           
  9812                           ;sound_level.c: 588: _delay((unsigned long)((5)*(32000000/4000.0)));
  9813  099C  3034               	movlw	52
  9814  099D  0140               	movlb	0	; select bank0
  9815  099E  00A0               	movwf	??_generateInt
  9816  099F  30F1               	movlw	241
  9817  09A0                     u6257:
  9818  09A0  0B89               	decfsz	9,f
  9819  09A1  29A0               	goto	u6257
  9820  09A2  0BA0               	decfsz	??_generateInt,f
  9821  09A3  29A0               	goto	u6257
  9822  09A4  3200               	nop2
  9823  09A5                     l5811:
  9824  09A5  0140               	movlb	0	; select bank0
  9825  09A6  179A               	bsf	26,7	;volatile
  9826  09A7                     l365:
  9827  09A7  0008               	return
  9828  09A8                     __end_of_generateInt:
  9829                           
  9830                           	psect	text30
  9831  090D                     __ptext30:	
  9832 ;; *************** function _EnterSleep *****************
  9833 ;; Defined at:
  9834 ;;		line 459 in file "Sensors/sound_level.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;		None
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  1    wreg      void 
  9841 ;; Registers used:
  9842 ;;		None
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9852 ;;Total ram usage:        0 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:    5
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_SoundLevel_Loop
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           
  9863                           ;psect for function _EnterSleep
  9864  090D                     _EnterSleep:
  9865  090D                     l5813:	
  9866                           ;incstack = 0
  9867                           ; Regs used in _EnterSleep: []
  9868                           
  9869                           
  9870                           ;sound_level.c: 460: CPUDOZEbits.IDLEN = 0;
  9871  090D  0151               	movlb	17	; select bank17
  9872  090E  138C               	bcf	12,7	;volatile
  9873                           
  9874                           ;sound_level.c: 461: __nop();
  9875  090F  0000               	nop
  9876  0910  0063               	sleep	;# 
  9877                           
  9878                           ;sound_level.c: 463: __nop();
  9879  0911  0000               	nop
  9880                           
  9881                           ;sound_level.c: 464: __nop();
  9882  0912  0000               	nop
  9883  0913                     l311:
  9884  0913  0008               	return
  9885  0914                     __end_of_EnterSleep:
  9886                           
  9887                           	psect	text31
  9888  0DDF                     __ptext31:	
  9889 ;; *************** function _SoundLevel_Init *****************
  9890 ;; Defined at:
  9891 ;;		line 285 in file "Sensors/sound_level.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;		None
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;		None
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, pclath, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9909 ;;Total ram usage:        1 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    8
  9912 ;; This function calls:
  9913 ;;		_ADCC_Initialize
  9914 ;;		_ADCC_SetADIInterruptHandler
  9915 ;;		_DOUT_Init
  9916 ;;		_IOCCF6_SetInterruptHandler
  9917 ;;		_LED_Init
  9918 ;;		_READY_Init
  9919 ;;		_VDDAMP_Init
  9920 ;;		_VDDBIAS_Init
  9921 ;;		_WDT_Init
  9922 ;;		_nWakeMic_Init
  9923 ;;		_powerMic_Init
  9924 ;; This function is called by:
  9925 ;;		_main
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           
  9930                           ;psect for function _SoundLevel_Init
  9931  0DDF                     _SoundLevel_Init:
  9932  0DDF                     l5913:	
  9933                           ;incstack = 0
  9934                           ; Regs used in _SoundLevel_Init: [wreg+status,2+status,0+pclath+cstack]
  9935                           
  9936                           
  9937                           ;sound_level.c: 287: LED_Init();
  9938  0DDF  3189  2153  318D   	fcall	_LED_Init
  9939  0DE2                     l5915:
  9940                           
  9941                           ;sound_level.c: 289: PMD0bits.IOCMD = 0;
  9942  0DE2  014F               	movlb	15	; select bank15
  9943  0DE3  1016               	bcf	22,0	;volatile
  9944  0DE4                     l5917:
  9945                           
  9946                           ;sound_level.c: 291: powerMic_Init();
  9947  0DE4  3187  27FA  318D   	fcall	_powerMic_Init
  9948                           
  9949                           ;sound_level.c: 292: _delay((unsigned long)((1)*(32000000/4000.0)));
  9950  0DE7  300B               	movlw	11
  9951  0DE8  0140               	movlb	0	; select bank0
  9952  0DE9  00A2               	movwf	??_SoundLevel_Init
  9953  0DEA  3062               	movlw	98
  9954  0DEB                     u6267:
  9955  0DEB  0B89               	decfsz	9,f
  9956  0DEC  2DEB               	goto	u6267
  9957  0DED  0BA2               	decfsz	??_SoundLevel_Init,f
  9958  0DEE  2DEB               	goto	u6267
  9959  0DEF  0000               	nop
  9960  0DF0                     l5919:
  9961                           
  9962                           ;sound_level.c: 293: nWakeMic_Init();
  9963  0DF0  3189  2100  318D   	fcall	_nWakeMic_Init
  9964  0DF3                     l5921:
  9965                           
  9966                           ;sound_level.c: 294: _delay((unsigned long)((1)*(32000000/4000.0)));
  9967  0DF3  300B               	movlw	11
  9968  0DF4  0140               	movlb	0	; select bank0
  9969  0DF5  00A2               	movwf	??_SoundLevel_Init
  9970  0DF6  3062               	movlw	98
  9971  0DF7                     u6277:
  9972  0DF7  0B89               	decfsz	9,f
  9973  0DF8  2DF7               	goto	u6277
  9974  0DF9  0BA2               	decfsz	??_SoundLevel_Init,f
  9975  0DFA  2DF7               	goto	u6277
  9976  0DFB  0000               	nop
  9977                           
  9978                           ;sound_level.c: 296: READY_Init();
  9979  0DFC  3188  20DB  318D   	fcall	_READY_Init
  9980                           
  9981                           ;sound_level.c: 297: DOUT_Init();
  9982  0DFF  3188  20E3  318D   	fcall	_DOUT_Init
  9983                           
  9984                           ;sound_level.c: 298: VDDAMP_Init();
  9985  0E02  3188  20F4  318D   	fcall	_VDDAMP_Init
  9986                           
  9987                           ;sound_level.c: 299: VDDBIAS_Init();
  9988  0E05  3189  215E  318D   	fcall	_VDDBIAS_Init
  9989  0E08                     l5923:
  9990                           
  9991                           ;sound_level.c: 300: _delay((unsigned long)((1)*(32000000/4000.0)));
  9992  0E08  300B               	movlw	11
  9993  0E09  0140               	movlb	0	; select bank0
  9994  0E0A  00A2               	movwf	??_SoundLevel_Init
  9995  0E0B  3062               	movlw	98
  9996  0E0C                     u6287:
  9997  0E0C  0B89               	decfsz	9,f
  9998  0E0D  2E0C               	goto	u6287
  9999  0E0E  0BA2               	decfsz	??_SoundLevel_Init,f
 10000  0E0F  2E0C               	goto	u6287
 10001  0E10  0000               	nop
 10002  0E11                     l5925:
 10003                           
 10004                           ;sound_level.c: 314: PIE0bits.IOCIE = 1;
 10005  0E11  014E               	movlb	14	; select bank14
 10006  0E12  1616               	bsf	22,4	;volatile
 10007  0E13                     l5927:
 10008                           
 10009                           ;sound_level.c: 316: IOCCFbits.IOCCF6 = 0;
 10010  0E13  017E               	movlb	62	; select bank62
 10011  0E14  1355               	bcf	85,6	;volatile
 10012  0E15                     l5929:
 10013                           
 10014                           ;sound_level.c: 318: IOCCNbits.IOCCN6 = 0;
 10015  0E15  1354               	bcf	84,6	;volatile
 10016  0E16                     l5931:
 10017                           
 10018                           ;sound_level.c: 320: IOCCPbits.IOCCP6 = 1;
 10019  0E16  1753               	bsf	83,6	;volatile
 10020                           
 10021                           ;sound_level.c: 322: IOCCF6_SetInterruptHandler(ISR_MIC_Wake);
 10022  0E17  303F               	movlw	low _ISR_MIC_Wake
 10023  0E18  0140               	movlb	0	; select bank0
 10024  0E19  00A0               	movwf	IOCCF6_SetInterruptHandler@InterruptHandler
 10025  0E1A  3009               	movlw	high _ISR_MIC_Wake
 10026  0E1B  00A1               	movwf	IOCCF6_SetInterruptHandler@InterruptHandler+1
 10027  0E1C  3189  212D  318D   	fcall	_IOCCF6_SetInterruptHandler
 10028  0E1F                     l5933:
 10029                           
 10030                           ;sound_level.c: 325: adcScaler = 3.3 / (4095 * 0.01258925 * 44);
 10031  0E1F  30AF               	movlw	175
 10032  0E20  0142               	movlb	2	; select bank2
 10033  0E21  00A0               	movwf	_adcScaler^(0+256)
 10034  0E22  30BE               	movlw	190
 10035  0E23  00A1               	movwf	(_adcScaler+1)^(0+256)
 10036  0E24  303A               	movlw	58
 10037  0E25  00A2               	movwf	(_adcScaler+2)^(0+256)
 10038  0E26                     l5935:
 10039                           
 10040                           ;sound_level.c: 328: ADCC_Initialize();
 10041  0E26  318B  230A  318D   	fcall	_ADCC_Initialize
 10042  0E29                     l5937:
 10043                           
 10044                           ;sound_level.c: 329: ADCC_SetADIInterruptHandler(SoundLevel_GetSample);
 10045  0E29  30AE               	movlw	low _SoundLevel_GetSample
 10046  0E2A  0140               	movlb	0	; select bank0
 10047  0E2B  00A0               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler
 10048  0E2C  300B               	movlw	high _SoundLevel_GetSample
 10049  0E2D  00A1               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler+1
 10050  0E2E  3189  2124  318D   	fcall	_ADCC_SetADIInterruptHandler
 10051  0E31                     l5939:
 10052                           
 10053                           ;sound_level.c: 332: WDT_Init();
 10054  0E31  3188  20FA  318D   	fcall	_WDT_Init
 10055  0E34                     l279:
 10056  0E34  0008               	return
 10057  0E35                     __end_of_SoundLevel_Init:
 10058                           
 10059                           	psect	text32
 10060  07FA                     __ptext32:	
 10061 ;; *************** function _powerMic_Init *****************
 10062 ;; Defined at:
 10063 ;;		line 180 in file "Sensors/sound_level.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;		None
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;		None
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      void 
 10070 ;; Registers used:
 10071 ;;		None
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;Total ram usage:        0 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; Hardware stack levels required when called:    5
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_SoundLevel_Init
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function _powerMic_Init
 10093  07FA                     _powerMic_Init:
 10094  07FA                     l180:	
 10095                           ;incstack = 0
 10096                           ; Regs used in _powerMic_Init: []
 10097                           ;sound_level.c: 182: do { ANSELCbits.ANSC0 = 0; } while(0);
 10098                           
 10099  07FA  017E               	movlb	62	; select bank62
 10100  07FB  104E               	bcf	78,0	;volatile
 10101  07FC                     l182:	
 10102                           ;sound_level.c: 183: do { TRISCbits.TRISC0 = 0; } while(0);
 10103                           
 10104  07FC  0140               	movlb	0	; select bank0
 10105  07FD  1014               	bcf	20,0	;volatile
 10106  07FE                     l184:	
 10107                           ;sound_level.c: 184: do { LATCbits.LATC0 = 0; } while(0);
 10108                           
 10109  07FE  101A               	bcf	26,0	;volatile
 10110  07FF                     l186:
 10111  07FF  0008               	return
 10112  0800                     __end_of_powerMic_Init:
 10113                           
 10114                           	psect	text33
 10115  0900                     __ptext33:	
 10116 ;; *************** function _nWakeMic_Init *****************
 10117 ;; Defined at:
 10118 ;;		line 188 in file "Sensors/sound_level.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;		None
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		None
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10136 ;;Total ram usage:        0 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    5
 10139 ;; This function calls:
 10140 ;;		Nothing
 10141 ;; This function is called by:
 10142 ;;		_SoundLevel_Init
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           
 10146                           
 10147                           ;psect for function _nWakeMic_Init
 10148  0900                     _nWakeMic_Init:
 10149  0900                     l189:	
 10150                           ;incstack = 0
 10151                           ; Regs used in _nWakeMic_Init: []
 10152                           ;sound_level.c: 190: do { ANSELCbits.ANSC3 = 0; } while(0);
 10153                           
 10154  0900  017E               	movlb	62	; select bank62
 10155  0901  11CE               	bcf	78,3	;volatile
 10156  0902                     l191:	
 10157                           ;sound_level.c: 191: do { TRISCbits.TRISC3 = 0; } while(0);
 10158                           
 10159  0902  0140               	movlb	0	; select bank0
 10160  0903  1194               	bcf	20,3	;volatile
 10161  0904                     l193:	
 10162                           ;sound_level.c: 192: do { LATCbits.LATC3 = 0; } while(0);
 10163                           
 10164  0904  119A               	bcf	26,3	;volatile
 10165  0905                     l195:
 10166  0905  0008               	return
 10167  0906                     __end_of_nWakeMic_Init:
 10168                           
 10169                           	psect	text34
 10170  08FA                     __ptext34:	
 10171 ;; *************** function _WDT_Init *****************
 10172 ;; Defined at:
 10173 ;;		line 277 in file "Sensors/sound_level.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		wreg
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10191 ;;Total ram usage:        0 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:    5
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_SoundLevel_Init
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           
 10202                           ;psect for function _WDT_Init
 10203  08FA                     _WDT_Init:
 10204  08FA                     l5767:	
 10205                           ;incstack = 0
 10206                           ; Regs used in _WDT_Init: [wreg]
 10207                           
 10208                           
 10209                           ;sound_level.c: 280: WDTCON0 = 0x1C;
 10210  08FA  301C               	movlw	28
 10211  08FB  0150               	movlb	16	; select bank16
 10212  08FC  008C               	movwf	12	;volatile
 10213                           
 10214                           ;sound_level.c: 281: WDTCON1 = 0x07;
 10215  08FD  3007               	movlw	7
 10216  08FE  008D               	movwf	13	;volatile
 10217  08FF                     l276:
 10218  08FF  0008               	return
 10219  0900                     __end_of_WDT_Init:
 10220                           
 10221                           	psect	text35
 10222  095E                     __ptext35:	
 10223 ;; *************** function _VDDBIAS_Init *****************
 10224 ;; Defined at:
 10225 ;;		line 239 in file "Sensors/sound_level.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		None
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10243 ;;Total ram usage:        0 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    5
 10246 ;; This function calls:
 10247 ;;		Nothing
 10248 ;; This function is called by:
 10249 ;;		_SoundLevel_Init
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           
 10254                           ;psect for function _VDDBIAS_Init
 10255  095E                     _VDDBIAS_Init:
 10256  095E                     l235:	
 10257                           ;incstack = 0
 10258                           ; Regs used in _VDDBIAS_Init: []
 10259                           ;sound_level.c: 241: do { ANSELCbits.ANSC2 = 0; } while(0);
 10260                           
 10261  095E  017E               	movlb	62	; select bank62
 10262  095F  114E               	bcf	78,2	;volatile
 10263  0960                     l237:	
 10264                           ;sound_level.c: 242: do { TRISCbits.TRISC2 = 0; } while(0);
 10265                           
 10266  0960  0140               	movlb	0	; select bank0
 10267  0961  1114               	bcf	20,2	;volatile
 10268  0962                     l239:	
 10269                           ;sound_level.c: 243: do { LATCbits.LATC2 = 0; } while(0);
 10270                           
 10271  0962  111A               	bcf	26,2	;volatile
 10272  0963                     l241:	
 10273                           ;sound_level.c: 246: do { ANSELBbits.ANSB4 = 0; } while(0);
 10274                           
 10275  0963  017E               	movlb	62	; select bank62
 10276  0964  1243               	bcf	67,4	;volatile
 10277  0965                     l243:	
 10278                           ;sound_level.c: 247: do { TRISBbits.TRISB4 = 0; } while(0);
 10279                           
 10280  0965  0140               	movlb	0	; select bank0
 10281  0966  1213               	bcf	19,4	;volatile
 10282  0967                     l245:	
 10283                           ;sound_level.c: 248: do { LATBbits.LATB4 = 0; } while(0);
 10284                           
 10285  0967  1219               	bcf	25,4	;volatile
 10286  0968                     l247:
 10287  0968  0008               	return
 10288  0969                     __end_of_VDDBIAS_Init:
 10289                           
 10290                           	psect	text36
 10291  08F4                     __ptext36:	
 10292 ;; *************** function _VDDAMP_Init *****************
 10293 ;; Defined at:
 10294 ;;		line 231 in file "Sensors/sound_level.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;		None
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      void 
 10301 ;; Registers used:
 10302 ;;		None
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10312 ;;Total ram usage:        0 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:    5
 10315 ;; This function calls:
 10316 ;;		Nothing
 10317 ;; This function is called by:
 10318 ;;		_SoundLevel_Init
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           
 10323                           ;psect for function _VDDAMP_Init
 10324  08F4                     _VDDAMP_Init:
 10325  08F4                     l226:	
 10326                           ;incstack = 0
 10327                           ; Regs used in _VDDAMP_Init: []
 10328                           ;sound_level.c: 233: do { ANSELCbits.ANSC4 = 0; } while(0);
 10329                           
 10330  08F4  017E               	movlb	62	; select bank62
 10331  08F5  124E               	bcf	78,4	;volatile
 10332  08F6                     l228:	
 10333                           ;sound_level.c: 234: do { TRISCbits.TRISC4 = 0; } while(0);
 10334                           
 10335  08F6  0140               	movlb	0	; select bank0
 10336  08F7  1214               	bcf	20,4	;volatile
 10337  08F8                     l230:	
 10338                           ;sound_level.c: 235: do { LATCbits.LATC4 = 0; } while(0);
 10339                           
 10340  08F8  121A               	bcf	26,4	;volatile
 10341  08F9                     l232:
 10342  08F9  0008               	return
 10343  08FA                     __end_of_VDDAMP_Init:
 10344                           
 10345                           	psect	text37
 10346  08DB                     __ptext37:	
 10347 ;; *************** function _READY_Init *****************
 10348 ;; Defined at:
 10349 ;;		line 216 in file "Sensors/sound_level.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		None
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10367 ;;Total ram usage:        0 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    5
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_SoundLevel_Init
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           
 10378                           ;psect for function _READY_Init
 10379  08DB                     _READY_Init:
 10380  08DB                     l212:	
 10381                           ;incstack = 0
 10382                           ; Regs used in _READY_Init: []
 10383                           ;sound_level.c: 218: do { TRISCbits.TRISC7 = 0; } while(0);
 10384                           
 10385  08DB  0140               	movlb	0	; select bank0
 10386  08DC  1394               	bcf	20,7	;volatile
 10387  08DD                     l214:	
 10388                           ;sound_level.c: 219: do { LATCbits.LATC7 = 1; } while(0);
 10389                           
 10390  08DD  179A               	bsf	26,7	;volatile
 10391  08DE                     l216:
 10392  08DE  0008               	return
 10393  08DF                     __end_of_READY_Init:
 10394                           
 10395                           	psect	text38
 10396  0953                     __ptext38:	
 10397 ;; *************** function _LED_Init *****************
 10398 ;; Defined at:
 10399 ;;		line 142 in file "Sensors/sound_level.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0, pclath, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    7
 10420 ;; This function calls:
 10421 ;;		_LED_Blink
 10422 ;;		_SoundLevel_LedOff
 10423 ;; This function is called by:
 10424 ;;		_SoundLevel_Init
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           
 10429                           ;psect for function _LED_Init
 10430  0953                     _LED_Init:
 10431  0953                     l167:	
 10432                           ;incstack = 0
 10433                           ; Regs used in _LED_Init: [wreg+status,2+status,0+pclath+cstack]
 10434                           ;sound_level.c: 145: do { ANSELBbits.ANSB6 = 0; } while(0);
 10435                           
 10436  0953  017E               	movlb	62	; select bank62
 10437  0954  1343               	bcf	67,6	;volatile
 10438  0955                     l169:	
 10439                           ;sound_level.c: 146: do { TRISBbits.TRISB6 = 0; } while(0);
 10440                           
 10441  0955  0140               	movlb	0	; select bank0
 10442  0956  1313               	bcf	19,6	;volatile
 10443  0957                     l5763:
 10444                           
 10445                           ;sound_level.c: 147: SoundLevel_LedOff();
 10446  0957  3188  20D2  3189   	fcall	_SoundLevel_LedOff
 10447  095A                     l5765:
 10448                           
 10449                           ;sound_level.c: 148: LED_Blink();
 10450  095A  318E  2698  3189   	fcall	_LED_Blink
 10451  095D                     l171:
 10452  095D  0008               	return
 10453  095E                     __end_of_LED_Init:
 10454                           
 10455                           	psect	text39
 10456  0E98                     __ptext39:	
 10457 ;; *************** function _LED_Blink *****************
 10458 ;; Defined at:
 10459 ;;		line 161 in file "Sensors/sound_level.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;		None
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;		None
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      void 
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0, pclath, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10477 ;;Total ram usage:        2 bytes
 10478 ;; Hardware stack levels used:    1
 10479 ;; Hardware stack levels required when called:    6
 10480 ;; This function calls:
 10481 ;;		_SoundLevel_LedOff
 10482 ;;		_SoundLevel_LedOn
 10483 ;; This function is called by:
 10484 ;;		_LED_Init
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           
 10489                           ;psect for function _LED_Blink
 10490  0E98                     _LED_Blink:
 10491  0E98                     l5667:	
 10492                           ;incstack = 0
 10493                           ; Regs used in _LED_Blink: [wreg+status,2+status,0+pclath+cstack]
 10494                           
 10495                           
 10496                           ;sound_level.c: 163: SoundLevel_LedOn();
 10497  0E98  3188  20D5  318E   	fcall	_SoundLevel_LedOn
 10498  0E9B                     l5669:
 10499                           
 10500                           ;sound_level.c: 164: _delay((unsigned long)((100)*(32000000/4000.0)));
 10501  0E9B  3005               	movlw	5
 10502  0E9C  0140               	movlb	0	; select bank0
 10503  0E9D  00A1               	movwf	??_LED_Blink+1
 10504  0E9E  300F               	movlw	15
 10505  0E9F  00A0               	movwf	??_LED_Blink
 10506  0EA0  30F1               	movlw	241
 10507  0EA1                     u6297:
 10508  0EA1  0B89               	decfsz	9,f
 10509  0EA2  2EA1               	goto	u6297
 10510  0EA3  0BA0               	decfsz	??_LED_Blink,f
 10511  0EA4  2EA1               	goto	u6297
 10512  0EA5  0BA1               	decfsz	??_LED_Blink+1,f
 10513  0EA6  2EA1               	goto	u6297
 10514  0EA7                     l5671:
 10515                           
 10516                           ;sound_level.c: 165: SoundLevel_LedOff();
 10517  0EA7  3188  20D2  318E   	fcall	_SoundLevel_LedOff
 10518                           
 10519                           ;sound_level.c: 166: _delay((unsigned long)((100)*(32000000/4000.0)));
 10520  0EAA  3005               	movlw	5
 10521  0EAB  0140               	movlb	0	; select bank0
 10522  0EAC  00A1               	movwf	??_LED_Blink+1
 10523  0EAD  300F               	movlw	15
 10524  0EAE  00A0               	movwf	??_LED_Blink
 10525  0EAF  30F1               	movlw	241
 10526  0EB0                     u6307:
 10527  0EB0  0B89               	decfsz	9,f
 10528  0EB1  2EB0               	goto	u6307
 10529  0EB2  0BA0               	decfsz	??_LED_Blink,f
 10530  0EB3  2EB0               	goto	u6307
 10531  0EB4  0BA1               	decfsz	??_LED_Blink+1,f
 10532  0EB5  2EB0               	goto	u6307
 10533  0EB6                     l5673:
 10534                           
 10535                           ;sound_level.c: 167: SoundLevel_LedOn();
 10536  0EB6  3188  20D5  318E   	fcall	_SoundLevel_LedOn
 10537  0EB9                     l5675:
 10538                           
 10539                           ;sound_level.c: 168: _delay((unsigned long)((100)*(32000000/4000.0)));
 10540  0EB9  3005               	movlw	5
 10541  0EBA  0140               	movlb	0	; select bank0
 10542  0EBB  00A1               	movwf	??_LED_Blink+1
 10543  0EBC  300F               	movlw	15
 10544  0EBD  00A0               	movwf	??_LED_Blink
 10545  0EBE  30F1               	movlw	241
 10546  0EBF                     u6317:
 10547  0EBF  0B89               	decfsz	9,f
 10548  0EC0  2EBF               	goto	u6317
 10549  0EC1  0BA0               	decfsz	??_LED_Blink,f
 10550  0EC2  2EBF               	goto	u6317
 10551  0EC3  0BA1               	decfsz	??_LED_Blink+1,f
 10552  0EC4  2EBF               	goto	u6317
 10553                           
 10554                           ;sound_level.c: 169: SoundLevel_LedOff();
 10555  0EC5  3188  20D2  318E   	fcall	_SoundLevel_LedOff
 10556  0EC8                     l5677:
 10557                           
 10558                           ;sound_level.c: 170: _delay((unsigned long)((500)*(32000000/4000.0)));
 10559  0EC8  3015               	movlw	21
 10560  0EC9  0140               	movlb	0	; select bank0
 10561  0ECA  00A1               	movwf	??_LED_Blink+1
 10562  0ECB  304B               	movlw	75
 10563  0ECC  00A0               	movwf	??_LED_Blink
 10564  0ECD  30BE               	movlw	190
 10565  0ECE                     u6327:
 10566  0ECE  0B89               	decfsz	9,f
 10567  0ECF  2ECE               	goto	u6327
 10568  0ED0  0BA0               	decfsz	??_LED_Blink,f
 10569  0ED1  2ECE               	goto	u6327
 10570  0ED2  0BA1               	decfsz	??_LED_Blink+1,f
 10571  0ED3  2ECE               	goto	u6327
 10572  0ED4  0000               	nop
 10573  0ED5                     l5679:
 10574                           
 10575                           ;sound_level.c: 171: SoundLevel_LedOn();
 10576  0ED5  3188  20D5  318E   	fcall	_SoundLevel_LedOn
 10577                           
 10578                           ;sound_level.c: 172: _delay((unsigned long)((100)*(32000000/4000.0)));
 10579  0ED8  3005               	movlw	5
 10580  0ED9  0140               	movlb	0	; select bank0
 10581  0EDA  00A1               	movwf	??_LED_Blink+1
 10582  0EDB  300F               	movlw	15
 10583  0EDC  00A0               	movwf	??_LED_Blink
 10584  0EDD  30F1               	movlw	241
 10585  0EDE                     u6337:
 10586  0EDE  0B89               	decfsz	9,f
 10587  0EDF  2EDE               	goto	u6337
 10588  0EE0  0BA0               	decfsz	??_LED_Blink,f
 10589  0EE1  2EDE               	goto	u6337
 10590  0EE2  0BA1               	decfsz	??_LED_Blink+1,f
 10591  0EE3  2EDE               	goto	u6337
 10592  0EE4                     l5681:
 10593                           
 10594                           ;sound_level.c: 173: SoundLevel_LedOff();
 10595  0EE4  3188  20D2  318E   	fcall	_SoundLevel_LedOff
 10596  0EE7                     l5683:
 10597                           
 10598                           ;sound_level.c: 174: _delay((unsigned long)((100)*(32000000/4000.0)));
 10599  0EE7  3005               	movlw	5
 10600  0EE8  0140               	movlb	0	; select bank0
 10601  0EE9  00A1               	movwf	??_LED_Blink+1
 10602  0EEA  300F               	movlw	15
 10603  0EEB  00A0               	movwf	??_LED_Blink
 10604  0EEC  30F1               	movlw	241
 10605  0EED                     u6347:
 10606  0EED  0B89               	decfsz	9,f
 10607  0EEE  2EED               	goto	u6347
 10608  0EEF  0BA0               	decfsz	??_LED_Blink,f
 10609  0EF0  2EED               	goto	u6347
 10610  0EF1  0BA1               	decfsz	??_LED_Blink+1,f
 10611  0EF2  2EED               	goto	u6347
 10612                           
 10613                           ;sound_level.c: 175: SoundLevel_LedOn();
 10614  0EF3  3188  20D5  318E   	fcall	_SoundLevel_LedOn
 10615  0EF6                     l5685:
 10616                           
 10617                           ;sound_level.c: 176: _delay((unsigned long)((100)*(32000000/4000.0)));
 10618  0EF6  3005               	movlw	5
 10619  0EF7  0140               	movlb	0	; select bank0
 10620  0EF8  00A1               	movwf	??_LED_Blink+1
 10621  0EF9  300F               	movlw	15
 10622  0EFA  00A0               	movwf	??_LED_Blink
 10623  0EFB  30F1               	movlw	241
 10624  0EFC                     u6357:
 10625  0EFC  0B89               	decfsz	9,f
 10626  0EFD  2EFC               	goto	u6357
 10627  0EFE  0BA0               	decfsz	??_LED_Blink,f
 10628  0EFF  2EFC               	goto	u6357
 10629  0F00  0BA1               	decfsz	??_LED_Blink+1,f
 10630  0F01  2EFC               	goto	u6357
 10631  0F02                     l5687:
 10632                           
 10633                           ;sound_level.c: 177: SoundLevel_LedOff();
 10634  0F02  3188  20D2  318E   	fcall	_SoundLevel_LedOff
 10635  0F05                     l177:
 10636  0F05  0008               	return
 10637  0F06                     __end_of_LED_Blink:
 10638                           
 10639                           	psect	text40
 10640  08D5                     __ptext40:	
 10641 ;; *************** function _SoundLevel_LedOn *****************
 10642 ;; Defined at:
 10643 ;;		line 565 in file "Sensors/sound_level.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;		None
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		None
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10661 ;;Total ram usage:        0 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:    5
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_LED_Blink
 10668 ;;		_measure
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _SoundLevel_LedOn
 10674  08D5                     _SoundLevel_LedOn:
 10675  08D5                     l346:	
 10676                           ;incstack = 0
 10677                           ; Regs used in _SoundLevel_LedOn: []
 10678                           ;sound_level.c: 567: do { LATBbits.LATB6 = 1; } while(0);
 10679                           
 10680  08D5  0140               	movlb	0	; select bank0
 10681  08D6  1719               	bsf	25,6	;volatile
 10682  08D7                     l348:
 10683  08D7  0008               	return
 10684  08D8                     __end_of_SoundLevel_LedOn:
 10685                           
 10686                           	psect	text41
 10687  08D2                     __ptext41:	
 10688 ;; *************** function _SoundLevel_LedOff *****************
 10689 ;; Defined at:
 10690 ;;		line 572 in file "Sensors/sound_level.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;		None
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		None
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10708 ;;Total ram usage:        0 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    5
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_LED_Init
 10715 ;;		_LED_Blink
 10716 ;;		_measure
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function _SoundLevel_LedOff
 10722  08D2                     _SoundLevel_LedOff:
 10723  08D2                     l351:	
 10724                           ;incstack = 0
 10725                           ; Regs used in _SoundLevel_LedOff: []
 10726                           ;sound_level.c: 574: do { LATBbits.LATB6 = 0; } while(0);
 10727                           
 10728  08D2  0140               	movlb	0	; select bank0
 10729  08D3  1319               	bcf	25,6	;volatile
 10730  08D4                     l353:
 10731  08D4  0008               	return
 10732  08D5                     __end_of_SoundLevel_LedOff:
 10733                           
 10734                           	psect	text42
 10735  092D                     __ptext42:	
 10736 ;; *************** function _IOCCF6_SetInterruptHandler *****************
 10737 ;; Defined at:
 10738 ;;		line 162 in file "system/pin_manager.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10741 ;;		 -> ISR_MIC_Wake(1), 
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10756 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10757 ;;Total ram usage:        2 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    5
 10760 ;; This function calls:
 10761 ;;		Nothing
 10762 ;; This function is called by:
 10763 ;;		_SoundLevel_Init
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           
 10768                           ;psect for function _IOCCF6_SetInterruptHandler
 10769  092D                     _IOCCF6_SetInterruptHandler:
 10770  092D                     l5769:	
 10771                           ;incstack = 0
 10772                           ; Regs used in _IOCCF6_SetInterruptHandler: [wreg]
 10773                           
 10774                           
 10775                           ;pin_manager.c: 163: IOCCF6_InterruptHandler = InterruptHandler;
 10776  092D  0140               	movlb	0	; select bank0
 10777  092E  0821               	movf	IOCCF6_SetInterruptHandler@InterruptHandler+1,w
 10778  092F  0141               	movlb	1	; select bank1
 10779  0930  00C6               	movwf	(_IOCCF6_InterruptHandler+1)^(0+128)
 10780  0931  0140               	movlb	0	; select bank0
 10781  0932  0820               	movf	IOCCF6_SetInterruptHandler@InterruptHandler,w
 10782  0933  0141               	movlb	1	; select bank1
 10783  0934  00C5               	movwf	_IOCCF6_InterruptHandler^(0+128)
 10784  0935                     l737:
 10785  0935  0008               	return
 10786  0936                     __end_of_IOCCF6_SetInterruptHandler:
 10787                           
 10788                           	psect	text43
 10789  08E3                     __ptext43:	
 10790 ;; *************** function _DOUT_Init *****************
 10791 ;; Defined at:
 10792 ;;		line 222 in file "Sensors/sound_level.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		None
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10810 ;;Total ram usage:        0 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    5
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_SoundLevel_Init
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function _DOUT_Init
 10822  08E3                     _DOUT_Init:
 10823  08E3                     l219:	
 10824                           ;incstack = 0
 10825                           ; Regs used in _DOUT_Init: []
 10826                           ;sound_level.c: 224: do { ANSELCbits.ANSC6 = 0; } while(0);
 10827                           
 10828  08E3  017E               	movlb	62	; select bank62
 10829  08E4  134E               	bcf	78,6	;volatile
 10830  08E5                     l221:	
 10831                           ;sound_level.c: 225: do { TRISCbits.TRISC6 = 1; } while(0);
 10832                           
 10833  08E5  0140               	movlb	0	; select bank0
 10834  08E6  1714               	bsf	20,6	;volatile
 10835  08E7                     l223:
 10836  08E7  0008               	return
 10837  08E8                     __end_of_DOUT_Init:
 10838                           
 10839                           	psect	text44
 10840  0B0A                     __ptext44:	
 10841 ;; *************** function _ADCC_Initialize *****************
 10842 ;; Defined at:
 10843 ;;		line 36 in file "system/adcc.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0, pclath, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10861 ;;Total ram usage:        0 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    6
 10864 ;; This function calls:
 10865 ;;		_ADCC_SetADIInterruptHandler
 10866 ;; This function is called by:
 10867 ;;		_SoundLevel_Init
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function _ADCC_Initialize
 10873  0B0A                     _ADCC_Initialize:
 10874  0B0A                     l5771:	
 10875                           ;incstack = 0
 10876                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10877                           
 10878                           
 10879                           ;adcc.c: 39: PMD3bits.ADCMD = 0;
 10880  0B0A  014F               	movlb	15	; select bank15
 10881  0B0B  1299               	bcf	25,5	;volatile
 10882  0B0C                     l5773:
 10883                           
 10884                           ;adcc.c: 44: ADLTHL = 0x00;
 10885  0B0C  0141               	movlb	1	; select bank1
 10886  0B0D  018C               	clrf	12	;volatile
 10887                           
 10888                           ;adcc.c: 46: ADLTHH = 0x00;
 10889  0B0E  018D               	clrf	13	;volatile
 10890                           
 10891                           ;adcc.c: 48: ADUTHL = 0x00;
 10892  0B0F  018E               	clrf	14	;volatile
 10893                           
 10894                           ;adcc.c: 50: ADUTHH = 0x00;
 10895  0B10  018F               	clrf	15	;volatile
 10896                           
 10897                           ;adcc.c: 52: ADSTPTL = 0x00;
 10898  0B11  0192               	clrf	18	;volatile
 10899                           
 10900                           ;adcc.c: 54: ADSTPTH = 0x00;
 10901  0B12  0193               	clrf	19	;volatile
 10902                           
 10903                           ;adcc.c: 56: ADACCU = 0x00;
 10904  0B13  0198               	clrf	24	;volatile
 10905                           
 10906                           ;adcc.c: 58: ADRPT = 0x00;
 10907  0B14  019A               	clrf	26	;volatile
 10908                           
 10909                           ;adcc.c: 60: ADPCH = 0x00;
 10910  0B15  019F               	clrf	31	;volatile
 10911                           
 10912                           ;adcc.c: 62: ADACQL = 0x00;
 10913  0B16  0142               	movlb	2	; select bank2
 10914  0B17  018C               	clrf	12	;volatile
 10915                           
 10916                           ;adcc.c: 64: ADACQH = 0x00;
 10917  0B18  018D               	clrf	13	;volatile
 10918                           
 10919                           ;adcc.c: 66: ADCAP = 0x00;
 10920  0B19  018E               	clrf	14	;volatile
 10921                           
 10922                           ;adcc.c: 68: ADPREL = 0x00;
 10923  0B1A  018F               	clrf	15	;volatile
 10924                           
 10925                           ;adcc.c: 70: ADPREH = 0x00;
 10926  0B1B  0190               	clrf	16	;volatile
 10927                           
 10928                           ;adcc.c: 72: ADCON1 = 0x00;
 10929  0B1C  0192               	clrf	18	;volatile
 10930                           
 10931                           ;adcc.c: 74: ADCON2 = 0x00;
 10932  0B1D  0193               	clrf	19	;volatile
 10933                           
 10934                           ;adcc.c: 76: ADCON3 = 0x00;
 10935  0B1E  0194               	clrf	20	;volatile
 10936                           
 10937                           ;adcc.c: 78: ADSTAT = 0x00;
 10938  0B1F  0195               	clrf	21	;volatile
 10939                           
 10940                           ;adcc.c: 80: ADREF = 0x00;
 10941  0B20  0196               	clrf	22	;volatile
 10942                           
 10943                           ;adcc.c: 82: ADACT = 0x00;
 10944  0B21  0197               	clrf	23	;volatile
 10945  0B22                     l5775:
 10946                           
 10947                           ;adcc.c: 84: ADCLK = 0x3F;
 10948  0B22  303F               	movlw	63
 10949  0B23  0098               	movwf	24	;volatile
 10950  0B24                     l5777:
 10951                           
 10952                           ;adcc.c: 86: ADCON0 = 0x84;
 10953  0B24  3084               	movlw	132
 10954  0B25  0091               	movwf	17	;volatile
 10955  0B26                     l5779:
 10956                           
 10957                           ;adcc.c: 89: PIR1bits.ADIF = 0;
 10958  0B26  014E               	movlb	14	; select bank14
 10959  0B27  100D               	bcf	13,0	;volatile
 10960  0B28                     l5781:
 10961                           
 10962                           ;adcc.c: 91: PIE1bits.ADIE = 1;
 10963  0B28  1417               	bsf	23,0	;volatile
 10964  0B29                     l5783:
 10965                           
 10966                           ;adcc.c: 93: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 10967  0B29  30C1               	movlw	low _ADCC_DefaultInterruptHandler
 10968  0B2A  0140               	movlb	0	; select bank0
 10969  0B2B  00A0               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler
 10970  0B2C  3008               	movlw	high _ADCC_DefaultInterruptHandler
 10971  0B2D  00A1               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler+1
 10972  0B2E  3189  2124  318B   	fcall	_ADCC_SetADIInterruptHandler
 10973  0B31                     l466:
 10974  0B31  0008               	return
 10975  0B32                     __end_of_ADCC_Initialize:
 10976                           
 10977                           	psect	text45
 10978  0924                     __ptext45:	
 10979 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 10980 ;; Defined at:
 10981 ;;		line 292 in file "system/adcc.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10984 ;;		 -> ADCC_DefaultInterruptHandler(1), SoundLevel_GetSample(1), 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11000 ;;Total ram usage:        2 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    5
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_SoundLevel_Init
 11007 ;;		_ADCC_Initialize
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           
 11012                           ;psect for function _ADCC_SetADIInterruptHandler
 11013  0924                     _ADCC_SetADIInterruptHandler:
 11014  0924                     l5699:	
 11015                           ;incstack = 0
 11016                           ; Regs used in _ADCC_SetADIInterruptHandler: [wreg]
 11017                           
 11018                           
 11019                           ;adcc.c: 293: ADCC_ADI_InterruptHandler = InterruptHandler;
 11020  0924  0140               	movlb	0	; select bank0
 11021  0925  0821               	movf	ADCC_SetADIInterruptHandler@InterruptHandler+1,w
 11022  0926  0141               	movlb	1	; select bank1
 11023  0927  00C8               	movwf	(_ADCC_ADI_InterruptHandler+1)^(0+128)
 11024  0928  0140               	movlb	0	; select bank0
 11025  0929  0820               	movf	ADCC_SetADIInterruptHandler@InterruptHandler,w
 11026  092A  0141               	movlb	1	; select bank1
 11027  092B  00C7               	movwf	_ADCC_ADI_InterruptHandler^(0+128)
 11028  092C                     l554:
 11029  092C  0008               	return
 11030  092D                     __end_of_ADCC_SetADIInterruptHandler:
 11031                           
 11032                           	psect	text46
 11033  0A01                     __ptext46:	
 11034 ;; *************** function _SoundLevel_GetData *****************
 11035 ;; Defined at:
 11036 ;;		line 468 in file "Sensors/sound_level.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  data            1    0[BANK0 ] PTR unsigned char 
 11039 ;;		 -> mData(2), 
 11040 ;;  length          1    1[BANK0 ] PTR unsigned char 
 11041 ;;		 -> mDataLength(1), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;		None
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		wreg, fsr1l, fsr1h
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11056 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11057 ;;Total ram usage:        3 bytes
 11058 ;; Hardware stack levels used:    1
 11059 ;; Hardware stack levels required when called:    5
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_main
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           
 11068                           ;psect for function _SoundLevel_GetData
 11069  0A01                     _SoundLevel_GetData:
 11070  0A01                     l6037:	
 11071                           ;incstack = 0
 11072                           ; Regs used in _SoundLevel_GetData: [wregfsr1]
 11073                           
 11074                           
 11075                           ;sound_level.c: 469: *length = 2;
 11076  0A01  3002               	movlw	2
 11077  0A02  0140               	movlb	0	; select bank0
 11078  0A03  00A2               	movwf	??_SoundLevel_GetData
 11079  0A04  0821               	movf	SoundLevel_GetData@length,w
 11080  0A05  0086               	movwf	6
 11081  0A06  0187               	clrf	7
 11082  0A07  0822               	movf	??_SoundLevel_GetData,w
 11083  0A08  0081               	movwf	1
 11084                           
 11085                           ;sound_level.c: 470: data[0] = measurementData[0];
 11086  0A09  0141               	movlb	1	; select bank1
 11087  0A0A  0849               	movf	_measurementData^(0+128),w	;volatile
 11088  0A0B  0140               	movlb	0	; select bank0
 11089  0A0C  00A2               	movwf	??_SoundLevel_GetData
 11090  0A0D  0820               	movf	SoundLevel_GetData@data,w
 11091  0A0E  0086               	movwf	6
 11092  0A0F  0187               	clrf	7
 11093  0A10  0822               	movf	??_SoundLevel_GetData,w
 11094  0A11  0081               	movwf	1
 11095                           
 11096                           ;sound_level.c: 471: data[1] = measurementData[1];
 11097  0A12  0141               	movlb	1	; select bank1
 11098  0A13  084A               	movf	(_measurementData^(0+128)+1),w	;volatile
 11099  0A14  0140               	movlb	0	; select bank0
 11100  0A15  00A2               	movwf	??_SoundLevel_GetData
 11101  0A16  0A20               	incf	SoundLevel_GetData@data,w
 11102  0A17  0086               	movwf	6
 11103  0A18  0187               	clrf	7
 11104  0A19  0822               	movf	??_SoundLevel_GetData,w
 11105  0A1A  0081               	movwf	1
 11106  0A1B                     l314:
 11107  0A1B  0008               	return
 11108  0A1C                     __end_of_SoundLevel_GetData:
 11109                           
 11110                           	psect	text47
 11111  0A9F                     __ptext47:	
 11112 ;; *************** function _SYSTEM_Initialize *****************
 11113 ;; Defined at:
 11114 ;;		line 25 in file "system/system.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  slave_addres    1    wreg     unsigned char 
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;  slave_addres    1    1[BANK0 ] unsigned char 
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  1    wreg      void 
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0, pclath, cstack
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11131 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11132 ;;Total ram usage:        1 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; Hardware stack levels required when called:    6
 11135 ;; This function calls:
 11136 ;;		_I2C1_Initialize
 11137 ;;		_OSCILLATOR_Initialize
 11138 ;;		_PMD_Initialize
 11139 ;; This function is called by:
 11140 ;;		_main
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           
 11145                           ;psect for function _SYSTEM_Initialize
 11146  0A9F                     _SYSTEM_Initialize:
 11147                           
 11148                           ;incstack = 0
 11149                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11150                           ;SYSTEM_Initialize@slave_address stored from wreg
 11151  0A9F  0140               	movlb	0	; select bank0
 11152  0AA0  00A1               	movwf	SYSTEM_Initialize@slave_address
 11153  0AA1                     l5847:
 11154                           
 11155                           ;system.c: 27: PMD_Initialize();
 11156  0AA1  3189  21D8  318A   	fcall	_PMD_Initialize
 11157                           
 11158                           ;system.c: 28: OSCILLATOR_Initialize();
 11159  0AA4  3188  20EE  318A   	fcall	_OSCILLATOR_Initialize
 11160  0AA7                     l5849:
 11161                           
 11162                           ;system.c: 30: VREGCONbits.VREGPM = 1;
 11163  0AA7  0150               	movlb	16	; select bank16
 11164  0AA8  1492               	bsf	18,1	;volatile
 11165  0AA9                     l5851:
 11166                           
 11167                           ;system.c: 36: ANSELA = 0x00;
 11168  0AA9  017E               	movlb	62	; select bank62
 11169  0AAA  01B8               	clrf	56	;volatile
 11170  0AAB                     l5853:
 11171                           
 11172                           ;system.c: 37: ANSELB = 0x00;
 11173  0AAB  01C3               	clrf	67	;volatile
 11174  0AAC                     l5855:
 11175                           
 11176                           ;system.c: 38: ANSELC = 0x00;
 11177  0AAC  01CE               	clrf	78	;volatile
 11178  0AAD                     l5857:
 11179                           
 11180                           ;system.c: 39: ANSELCbits.ANSC1 = 1;
 11181  0AAD  14CE               	bsf	78,1	;volatile
 11182  0AAE                     l5859:
 11183                           
 11184                           ;system.c: 41: TRISA = 0x00;
 11185  0AAE  0140               	movlb	0	; select bank0
 11186  0AAF  0192               	clrf	18	;volatile
 11187  0AB0                     l5861:
 11188                           
 11189                           ;system.c: 42: TRISB = 0x00;
 11190  0AB0  0193               	clrf	19	;volatile
 11191  0AB1                     l5863:
 11192                           
 11193                           ;system.c: 43: TRISC = 0x00;
 11194  0AB1  0194               	clrf	20	;volatile
 11195  0AB2                     l5865:
 11196                           
 11197                           ;system.c: 44: TRISCbits.TRISC1 = 1;
 11198  0AB2  1494               	bsf	20,1	;volatile
 11199  0AB3                     l5867:
 11200                           
 11201                           ;system.c: 46: LATA = 0xFF;
 11202  0AB3  30FF               	movlw	255
 11203  0AB4  0098               	movwf	24	;volatile
 11204  0AB5                     l5869:
 11205                           
 11206                           ;system.c: 47: LATB = 0xFF;
 11207  0AB5  30FF               	movlw	255
 11208  0AB6  0099               	movwf	25	;volatile
 11209  0AB7                     l5871:
 11210                           
 11211                           ;system.c: 48: LATC = 0xFF;
 11212  0AB7  30FF               	movlw	255
 11213  0AB8  009A               	movwf	26	;volatile
 11214  0AB9                     l5873:
 11215                           
 11216                           ;system.c: 49: LATCbits.LATC1 = 0;
 11217  0AB9  109A               	bcf	26,1	;volatile
 11218  0ABA                     l5875:
 11219                           
 11220                           ;system.c: 51: I2C1_Initialize(slave_address);
 11221  0ABA  0821               	movf	SYSTEM_Initialize@slave_address,w
 11222  0ABB  318B  2384  318A   	fcall	_I2C1_Initialize
 11223  0ABE                     l5877:
 11224                           
 11225                           ;system.c: 54: (INTCONbits.GIE = 1);
 11226  0ABE  178B               	bsf	11,7	;volatile
 11227  0ABF                     l5879:
 11228                           
 11229                           ;system.c: 56: (INTCONbits.PEIE = 1);
 11230  0ABF  170B               	bsf	11,6	;volatile
 11231  0AC0                     l832:
 11232  0AC0  0008               	return
 11233  0AC1                     __end_of_SYSTEM_Initialize:
 11234                           
 11235                           	psect	text48
 11236  09D8                     __ptext48:	
 11237 ;; *************** function _PMD_Initialize *****************
 11238 ;; Defined at:
 11239 ;;		line 68 in file "system/system.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;		None
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		wreg
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11257 ;;Total ram usage:        0 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:    5
 11260 ;; This function calls:
 11261 ;;		Nothing
 11262 ;; This function is called by:
 11263 ;;		_SYSTEM_Initialize
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           
 11268                           ;psect for function _PMD_Initialize
 11269  09D8                     _PMD_Initialize:
 11270  09D8                     l5841:	
 11271                           ;incstack = 0
 11272                           ; Regs used in _PMD_Initialize: [wreg]
 11273                           
 11274                           
 11275                           ;system.c: 71: PMD0 = 0xFF;
 11276  09D8  30FF               	movlw	255
 11277  09D9  014F               	movlb	15	; select bank15
 11278  09DA  0096               	movwf	22	;volatile
 11279  09DB                     l5843:
 11280                           
 11281                           ;system.c: 72: PMD0bits.SYSCMD = 0;
 11282  09DB  1396               	bcf	22,7	;volatile
 11283                           
 11284                           ;system.c: 74: PMD1 = 0xFF;
 11285  09DC  30FF               	movlw	255
 11286  09DD  0097               	movwf	23	;volatile
 11287                           
 11288                           ;system.c: 75: PMD2 = 0xFF;
 11289  09DE  30FF               	movlw	255
 11290  09DF  0098               	movwf	24	;volatile
 11291                           
 11292                           ;system.c: 76: PMD3 = 0xFF;
 11293  09E0  30FF               	movlw	255
 11294  09E1  0099               	movwf	25	;volatile
 11295                           
 11296                           ;system.c: 77: PMD4 = 0xFF;
 11297  09E2  30FF               	movlw	255
 11298  09E3  009A               	movwf	26	;volatile
 11299                           
 11300                           ;system.c: 78: PMD5 = 0xFF;
 11301  09E4  30FF               	movlw	255
 11302  09E5  009B               	movwf	27	;volatile
 11303                           
 11304                           ;system.c: 79: PMD6 = 0xFF;
 11305  09E6  30FF               	movlw	255
 11306  09E7  009C               	movwf	28	;volatile
 11307                           
 11308                           ;system.c: 80: PMD7 = 0xFF;
 11309  09E8  30FF               	movlw	255
 11310  09E9  009D               	movwf	29	;volatile
 11311  09EA                     l838:
 11312  09EA  0008               	return
 11313  09EB                     __end_of_PMD_Initialize:
 11314                           
 11315                           	psect	text49
 11316  08EE                     __ptext49:	
 11317 ;; *************** function _OSCILLATOR_Initialize *****************
 11318 ;; Defined at:
 11319 ;;		line 60 in file "system/system.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      void 
 11326 ;; Registers used:
 11327 ;;		wreg
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    5
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_SYSTEM_Initialize
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           
 11348                           ;psect for function _OSCILLATOR_Initialize
 11349  08EE                     _OSCILLATOR_Initialize:
 11350  08EE                     l5845:	
 11351                           ;incstack = 0
 11352                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
 11353                           
 11354                           
 11355                           ;system.c: 63: OSCCON1 = 0x60;
 11356  08EE  3060               	movlw	96
 11357  08EF  0151               	movlb	17	; select bank17
 11358  08F0  008D               	movwf	13	;volatile
 11359                           
 11360                           ;system.c: 65: OSCFRQ = 0x06;
 11361  08F1  3006               	movlw	6
 11362  08F2  0093               	movwf	19	;volatile
 11363  08F3                     l835:
 11364  08F3  0008               	return
 11365  08F4                     __end_of_OSCILLATOR_Initialize:
 11366                           
 11367                           	psect	text50
 11368  0B84                     __ptext50:	
 11369 ;; *************** function _I2C1_Initialize *****************
 11370 ;; Defined at:
 11371 ;;		line 91 in file "system/i2c1.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;  slave_addres    1    wreg     unsigned char 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  slave_addres    1    0[BANK0 ] unsigned char 
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11389 ;;Total ram usage:        1 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    5
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_SYSTEM_Initialize
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           
 11400                           ;psect for function _I2C1_Initialize
 11401  0B84                     _I2C1_Initialize:
 11402                           
 11403                           ;incstack = 0
 11404                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
 11405                           ;I2C1_Initialize@slave_address stored from wreg
 11406  0B84  0140               	movlb	0	; select bank0
 11407  0B85  00A0               	movwf	I2C1_Initialize@slave_address
 11408  0B86                     l5815:
 11409                           
 11410                           ;i2c1.c: 93: PMD6bits.MSSP1MD = 0;
 11411  0B86  014F               	movlb	15	; select bank15
 11412  0B87  101C               	bcf	28,0	;volatile
 11413                           
 11414                           ;i2c1.c: 95: ANSELBbits.ANSB5 = 0;
 11415  0B88  017E               	movlb	62	; select bank62
 11416  0B89  12C3               	bcf	67,5	;volatile
 11417                           
 11418                           ;i2c1.c: 96: ANSELBbits.ANSB7 = 0;
 11419  0B8A  13C3               	bcf	67,7	;volatile
 11420                           
 11421                           ;i2c1.c: 98: TRISBbits.TRISB5 = 1;
 11422  0B8B  0140               	movlb	0	; select bank0
 11423  0B8C  1693               	bsf	19,5	;volatile
 11424                           
 11425                           ;i2c1.c: 99: TRISBbits.TRISB7 = 1;
 11426  0B8D  1793               	bsf	19,7	;volatile
 11427  0B8E                     l5817:
 11428                           
 11429                           ;i2c1.c: 101: SSP1CLKPPS = 0x0F;
 11430  0B8E  300F               	movlw	15
 11431  0B8F  017D               	movlb	61	; select bank61
 11432  0B90  00C5               	movwf	69	;volatile
 11433                           
 11434                           ;i2c1.c: 102: RB7PPS = 0x13;
 11435  0B91  3013               	movlw	19
 11436  0B92  017E               	movlb	62	; select bank62
 11437  0B93  009F               	movwf	31	;volatile
 11438                           
 11439                           ;i2c1.c: 103: RB5PPS = 0x14;
 11440  0B94  3014               	movlw	20
 11441  0B95  009D               	movwf	29	;volatile
 11442                           
 11443                           ;i2c1.c: 104: SSP1DATPPS = 0x0D;
 11444  0B96  300D               	movlw	13
 11445  0B97  017D               	movlb	61	; select bank61
 11446  0B98  00C6               	movwf	70	;volatile
 11447  0B99                     l5819:
 11448                           
 11449                           ;i2c1.c: 107: SSP1STAT = 0x00;
 11450  0B99  0143               	movlb	3	; select bank3
 11451  0B9A  018F               	clrf	15	;volatile
 11452  0B9B                     l5821:
 11453                           
 11454                           ;i2c1.c: 109: SSP1CON1 = 0x26;
 11455  0B9B  3026               	movlw	38
 11456  0B9C  0090               	movwf	16	;volatile
 11457  0B9D                     l5823:
 11458                           
 11459                           ;i2c1.c: 111: SSP1CON2 = 0x01;
 11460  0B9D  3001               	movlw	1
 11461  0B9E  0091               	movwf	17	;volatile
 11462  0B9F                     l5825:
 11463                           
 11464                           ;i2c1.c: 113: SSP1CON3 = 0x00;
 11465  0B9F  0192               	clrf	18	;volatile
 11466  0BA0                     l5827:
 11467                           
 11468                           ;i2c1.c: 115: SSP1CON3bits.DHEN = 1;
 11469  0BA0  1412               	bsf	18,0	;volatile
 11470                           
 11471                           ;i2c1.c: 117: SSP1MSK = (0x7F << 1);
 11472  0BA1  30FE               	movlw	254
 11473  0BA2  008E               	movwf	14	;volatile
 11474  0BA3                     l5829:
 11475                           
 11476                           ;i2c1.c: 119: SSP1ADD = (slave_address << 1);
 11477  0BA3  0140               	movlb	0	; select bank0
 11478  0BA4  3520               	lslf	I2C1_Initialize@slave_address,w
 11479  0BA5  0143               	movlb	3	; select bank3
 11480  0BA6  008D               	movwf	13	;volatile
 11481  0BA7                     l5831:
 11482                           
 11483                           ;i2c1.c: 123: PIR3bits.SSP1IF = 0;
 11484  0BA7  014E               	movlb	14	; select bank14
 11485  0BA8  100F               	bcf	15,0	;volatile
 11486  0BA9                     l5833:
 11487                           
 11488                           ;i2c1.c: 125: PIE3bits.SSP1IE = 1;
 11489  0BA9  1419               	bsf	25,0	;volatile
 11490  0BAA                     l5835:
 11491                           
 11492                           ;i2c1.c: 127: txCnt = 0;
 11493  0BAA  01F6               	clrf	_txCnt
 11494  0BAB                     l5837:
 11495                           
 11496                           ;i2c1.c: 128: rxLen = 0;
 11497  0BAB  01F8               	clrf	_rxLen
 11498  0BAC                     l5839:
 11499                           
 11500                           ;i2c1.c: 129: cmdReceived = 0;
 11501  0BAC  01F9               	clrf	_cmdReceived
 11502  0BAD                     l620:
 11503  0BAD  0008               	return
 11504  0BAE                     __end_of_I2C1_Initialize:
 11505                           
 11506                           	psect	text51
 11507  0914                     __ptext51:	
 11508 ;; *************** function _I2C1_TxBufferEmpty *****************
 11509 ;; Defined at:
 11510 ;;		line 179 in file "system/i2c1.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;		None
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;		None
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      unsigned char 
 11517 ;; Registers used:
 11518 ;;		wreg, status,2, status,0
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11528 ;;Total ram usage:        0 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    5
 11531 ;; This function calls:
 11532 ;;		Nothing
 11533 ;; This function is called by:
 11534 ;;		_main
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           
 11539                           ;psect for function _I2C1_TxBufferEmpty
 11540  0914                     _I2C1_TxBufferEmpty:
 11541  0914                     l5903:	
 11542                           ;incstack = 0
 11543                           ; Regs used in _I2C1_TxBufferEmpty: [wreg+status,2+status,0]
 11544                           
 11545                           
 11546                           ;i2c1.c: 180: return (txCnt != 0);
 11547  0914  0876               	movf	_txCnt,w
 11548  0915  1D03               	btfss	3,2
 11549  0916  2918               	goto	u5891
 11550  0917  291A               	goto	u5890
 11551  0918                     u5891:
 11552  0918  3001               	movlw	1
 11553  0919  291B               	goto	u5900
 11554  091A                     u5890:
 11555  091A  3000               	movlw	0
 11556  091B                     u5900:
 11557  091B                     l638:
 11558  091B  0008               	return
 11559  091C                     __end_of_I2C1_TxBufferEmpty:
 11560                           
 11561                           	psect	text52
 11562  0B5A                     __ptext52:	
 11563 ;; *************** function _I2C1_SetTransmitData *****************
 11564 ;; Defined at:
 11565 ;;		line 193 in file "system/i2c1.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11568 ;;		 -> main@mnr(1), main@type(1), main@ack(1), mData(2), 
 11569 ;;  len             1    2[BANK0 ] unsigned char 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;		None
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11581 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11583 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11585 ;;Total ram usage:        6 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    5
 11588 ;; This function calls:
 11589 ;;		Nothing
 11590 ;; This function is called by:
 11591 ;;		_main
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595                           
 11596                           ;psect for function _I2C1_SetTransmitData
 11597  0B5A                     _I2C1_SetTransmitData:
 11598  0B5A                     l6095:	
 11599                           ;incstack = 0
 11600                           ; Regs used in _I2C1_SetTransmitData: [wreg+fsr1l+fsr1h+status,2+status,0]
 11601                           
 11602                           
 11603                           ;i2c1.c: 195: while((txCnt < len) && (txCnt < 32)){
 11604  0B5A  2B71               	goto	l6101
 11605  0B5B                     l6097:
 11606                           
 11607                           ;i2c1.c: 196: i2c1_tx_buffer[txCnt] = data[txCnt];
 11608  0B5B  0876               	movf	_txCnt,w
 11609  0B5C  00A3               	movwf	??_I2C1_SetTransmitData
 11610  0B5D  01A4               	clrf	??_I2C1_SetTransmitData+1
 11611  0B5E  0823               	movf	??_I2C1_SetTransmitData,w
 11612  0B5F  0720               	addwf	I2C1_SetTransmitData@data,w
 11613  0B60  0086               	movwf	6
 11614  0B61  0824               	movf	??_I2C1_SetTransmitData+1,w
 11615  0B62  3D21               	addwfc	I2C1_SetTransmitData@data+1,w
 11616  0B63  0087               	movwf	7
 11617  0B64  0801               	movf	1,w
 11618  0B65  00A5               	movwf	??_I2C1_SetTransmitData+2
 11619  0B66  0876               	movf	_txCnt,w
 11620  0B67  3EA0               	addlw	(low (_i2c1_tx_buffer| (0+256)))& (0+255)
 11621  0B68  0086               	movwf	6
 11622  0B69  3001               	movlw	1	; select bank3/4
 11623  0B6A  0087               	movwf	7
 11624  0B6B  0825               	movf	??_I2C1_SetTransmitData+2,w
 11625  0B6C  0081               	movwf	1
 11626  0B6D                     l6099:
 11627                           
 11628                           ;i2c1.c: 197: txCnt++;
 11629  0B6D  3001               	movlw	1
 11630  0B6E  00A3               	movwf	??_I2C1_SetTransmitData
 11631  0B6F  0823               	movf	??_I2C1_SetTransmitData,w
 11632  0B70  07F6               	addwf	_txCnt,f
 11633  0B71                     l6101:
 11634  0B71  0140               	movlb	0	; select bank0
 11635  0B72  0822               	movf	I2C1_SetTransmitData@len,w
 11636  0B73  0276               	subwf	_txCnt,w
 11637  0B74  1803               	skipnc
 11638  0B75  2B77               	goto	u6091
 11639  0B76  2B78               	goto	u6090
 11640  0B77                     u6091:
 11641  0B77  2B7E               	goto	l6105
 11642  0B78                     u6090:
 11643  0B78                     l6103:
 11644  0B78  3020               	movlw	32
 11645  0B79  0276               	subwf	_txCnt,w
 11646  0B7A  1C03               	skipc
 11647  0B7B  2B7D               	goto	u6101
 11648  0B7C  2B7E               	goto	u6100
 11649  0B7D                     u6101:
 11650  0B7D  2B5B               	goto	l6097
 11651  0B7E                     u6100:
 11652  0B7E                     l6105:
 11653                           
 11654                           ;i2c1.c: 198: };i2c1.c: 199: txLen = txCnt;
 11655  0B7E  0876               	movf	_txCnt,w
 11656  0B7F  00A3               	movwf	??_I2C1_SetTransmitData
 11657  0B80  0823               	movf	??_I2C1_SetTransmitData,w
 11658  0B81  00F7               	movwf	_txLen
 11659  0B82                     l6107:
 11660                           
 11661                           ;i2c1.c: 200: txCnt = 0;
 11662  0B82  01F6               	clrf	_txCnt
 11663  0B83                     l652:
 11664  0B83  0008               	return
 11665  0B84                     __end_of_I2C1_SetTransmitData:
 11666                           
 11667                           	psect	text53
 11668  0A5D                     __ptext53:	
 11669 ;; *************** function _I2C1_GetCommandData *****************
 11670 ;; Defined at:
 11671 ;;		line 188 in file "system/i2c1.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;  data            1    wreg     PTR unsigned char 
 11674 ;;		 -> main@data(20), 
 11675 ;;  len             1    0[BANK0 ] PTR unsigned char 
 11676 ;;		 -> main@len(1), 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  data            1    2[BANK0 ] PTR unsigned char 
 11679 ;;		 -> main@data(20), 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  1    wreg      void 
 11682 ;; Registers used:
 11683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11689 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11692 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11693 ;;Total ram usage:        3 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:    5
 11696 ;; This function calls:
 11697 ;;		Nothing
 11698 ;; This function is called by:
 11699 ;;		_main
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function _I2C1_GetCommandData
 11705  0A5D                     _I2C1_GetCommandData:
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _I2C1_GetCommandData: [wreg-fsr1h]
 11709                           ;I2C1_GetCommandData@data stored from wreg
 11710  0A5D  0140               	movlb	0	; select bank0
 11711  0A5E  00A2               	movwf	I2C1_GetCommandData@data
 11712  0A5F                     l5909:
 11713                           
 11714                           ;i2c1.c: 189: __builtin_memcpy(data,i2c1_rx_buffer,rxLen);
 11715  0A5F  0822               	movf	I2C1_GetCommandData@data,w
 11716  0A60  0086               	movwf	6
 11717  0A61  3001               	movlw	1	; select bank2/3
 11718  0A62  0087               	movwf	7
 11719  0A63  2A73               	goto	mcp0
 11720  0A64                     mcp0b:
 11721  0A64  302B               	movlw	low (_i2c1_rx_buffer| (0+256))
 11722  0A65  0084               	movwf	4
 11723  0A66  3001               	movlw	1	; select bank2/3
 11724  0A67  0085               	movwf	5
 11725  0A68  0878               	movf	_rxLen,w
 11726  0A69  0140               	movlb	0	; select bank0
 11727  0A6A  00A1               	movwf	??_I2C1_GetCommandData
 11728  0A6B  0821               	movf	??_I2C1_GetCommandData,w
 11729  0A6C  1903               	skipnz
 11730  0A6D  2A74               	goto	mcp0z
 11731  0A6E                     u593m0:
 11732  0A6E  0012               	moviw fsr0++
 11733  0A6F  001E               	movwi fsr1++
 11734  0A70  0BA1               	decfsz	??_I2C1_GetCommandData,f
 11735  0A71  2A6E               	goto	u593m0
 11736  0A72  2A74               	goto	u593m1
 11737  0A73                     mcp0:
 11738  0A73  2A64               	goto	mcp0b
 11739  0A74                     u593m1:
 11740  0A74                     mcp0z:
 11741  0A74                     l5911:
 11742                           
 11743                           ;i2c1.c: 190: *len = rxLen;
 11744  0A74  0878               	movf	_rxLen,w
 11745  0A75  0140               	movlb	0	; select bank0
 11746  0A76  00A1               	movwf	??_I2C1_GetCommandData
 11747  0A77  0820               	movf	I2C1_GetCommandData@len,w
 11748  0A78  0086               	movwf	6
 11749  0A79  3001               	movlw	1	; select bank2/3
 11750  0A7A  0087               	movwf	7
 11751  0A7B  0821               	movf	??_I2C1_GetCommandData,w
 11752  0A7C  0081               	movwf	1
 11753  0A7D                     l644:
 11754  0A7D  0008               	return
 11755  0A7E                     __end_of_I2C1_GetCommandData:
 11756                           
 11757                           	psect	text54
 11758  0969                     __ptext54:	
 11759 ;; *************** function _I2C1_GetCommand *****************
 11760 ;; Defined at:
 11761 ;;		line 183 in file "system/i2c1.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  cmd             1    wreg     PTR unsigned char 
 11764 ;;		 -> main@cmd(1), 
 11765 ;; Auto vars:     Size  Location     Type
 11766 ;;  cmd             1    1[BANK0 ] PTR unsigned char 
 11767 ;;		 -> main@cmd(1), 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      void 
 11770 ;; Registers used:
 11771 ;;		wreg, fsr1l, fsr1h, status,2
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11780 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11781 ;;Total ram usage:        2 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    5
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_main
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           
 11792                           ;psect for function _I2C1_GetCommand
 11793  0969                     _I2C1_GetCommand:
 11794                           
 11795                           ;incstack = 0
 11796                           ; Regs used in _I2C1_GetCommand: [wreg+fsr1l+fsr1h+status,2]
 11797                           ;I2C1_GetCommand@cmd stored from wreg
 11798  0969  0140               	movlb	0	; select bank0
 11799  096A  00A1               	movwf	I2C1_GetCommand@cmd
 11800  096B                     l5899:
 11801                           
 11802                           ;i2c1.c: 184: *cmd = cmdByte;
 11803  096B  087A               	movf	_cmdByte,w
 11804  096C  00A0               	movwf	??_I2C1_GetCommand
 11805  096D  0821               	movf	I2C1_GetCommand@cmd,w
 11806  096E  0086               	movwf	6
 11807  096F  3001               	movlw	1	; select bank2/3
 11808  0970  0087               	movwf	7
 11809  0971  0820               	movf	??_I2C1_GetCommand,w
 11810  0972  0081               	movwf	1
 11811  0973                     l5901:
 11812                           
 11813                           ;i2c1.c: 185: cmdReceived = 0;
 11814  0973  01F9               	clrf	_cmdReceived
 11815  0974                     l641:
 11816  0974  0008               	return
 11817  0975                     __end_of_I2C1_GetCommand:
 11818                           
 11819                           	psect	text55
 11820  0002                     __ptext55:	
 11821 ;; *************** function _I2C1_CommandReceived *****************
 11822 ;; Defined at:
 11823 ;;		line 175 in file "system/i2c1.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;		None
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;		None
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      unsigned char 
 11830 ;; Registers used:
 11831 ;;		wreg
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11841 ;;Total ram usage:        0 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:    5
 11844 ;; This function calls:
 11845 ;;		Nothing
 11846 ;; This function is called by:
 11847 ;;		_main
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851                           
 11852                           ;psect for function _I2C1_CommandReceived
 11853  0002                     _I2C1_CommandReceived:
 11854  0002                     l5895:	
 11855                           ;incstack = 0
 11856                           ; Regs used in _I2C1_CommandReceived: [wreg]
 11857                           
 11858                           
 11859                           ;i2c1.c: 176: return cmdReceived;
 11860  0002  0879               	movf	_cmdReceived,w
 11861  0003                     l635:
 11862  0003  0008               	return
 11863  0004                     __end_of_I2C1_CommandReceived:
 11864                           
 11865                           	psect	intentry
 11866  0004                     __pintentry:	
 11867 ;; *************** function _INTERRUPT_InterruptManager *****************
 11868 ;; Defined at:
 11869 ;;		line 25 in file "system/interrupt.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;		None
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;		None
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  1    wreg      void 
 11876 ;; Registers used:
 11877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11887 ;;Total ram usage:        0 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:    4
 11890 ;; This function calls:
 11891 ;;		_ADCC_ISR
 11892 ;;		_I2C1_ISR
 11893 ;;		_PIN_MANAGER_IOC
 11894 ;; This function is called by:
 11895 ;;		Interrupt level 1
 11896 ;; This function uses a non-reentrant model
 11897 ;;
 11898                           
 11899  0004                     _INTERRUPT_InterruptManager:
 11900                           
 11901                           ;incstack = 0
 11902  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11903                           
 11904                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11905  0005  3180               	pagesel	$
 11906  0006                     i1l3519:
 11907                           
 11908                           ;interrupt.c: 28: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 11909  0006  014E               	movlb	14	; select bank14
 11910  0007  1E16               	btfss	22,4	;volatile
 11911  0008  280A               	goto	u263_21
 11912  0009  280B               	goto	u263_20
 11913  000A                     u263_21:
 11914  000A  2813               	goto	i1l765
 11915  000B                     u263_20:
 11916  000B                     i1l3521:
 11917  000B  1E0C               	btfss	12,4	;volatile
 11918  000C  280E               	goto	u264_21
 11919  000D  280F               	goto	u264_20
 11920  000E                     u264_21:
 11921  000E  2813               	goto	i1l765
 11922  000F                     u264_20:
 11923  000F                     i1l3523:
 11924                           
 11925                           ;interrupt.c: 29: {;interrupt.c: 30: PIN_MANAGER_IOC();
 11926  000F  318A  223C  3180   	fcall	_PIN_MANAGER_IOC
 11927                           
 11928                           ;interrupt.c: 31: }
 11929  0012  282F               	goto	i1l773
 11930  0013                     i1l765:
 11931                           
 11932                           ;interrupt.c: 32: else if(INTCONbits.PEIE == 1)
 11933  0013  1F0B               	btfss	11,6	;volatile
 11934  0014  2816               	goto	u265_21
 11935  0015  2817               	goto	u265_20
 11936  0016                     u265_21:
 11937  0016  282F               	goto	i1l773
 11938  0017                     u265_20:
 11939  0017                     i1l3525:
 11940                           
 11941                           ;interrupt.c: 33: {;interrupt.c: 34: if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 11942  0017  1C19               	btfss	25,0	;volatile
 11943  0018  281A               	goto	u266_21
 11944  0019  281B               	goto	u266_20
 11945  001A                     u266_21:
 11946  001A  2823               	goto	i1l768
 11947  001B                     u266_20:
 11948  001B                     i1l3527:
 11949  001B  1C0F               	btfss	15,0	;volatile
 11950  001C  281E               	goto	u267_21
 11951  001D  281F               	goto	u267_20
 11952  001E                     u267_21:
 11953  001E  2823               	goto	i1l768
 11954  001F                     u267_20:
 11955  001F                     i1l3529:
 11956                           
 11957                           ;interrupt.c: 35: {;interrupt.c: 36: I2C1_ISR();
 11958  001F  318C  2483  3180   	fcall	_I2C1_ISR
 11959                           
 11960                           ;interrupt.c: 37: }
 11961  0022  282F               	goto	i1l773
 11962  0023                     i1l768:
 11963                           
 11964                           ;interrupt.c: 38: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11965  0023  1C17               	btfss	23,0	;volatile
 11966  0024  2826               	goto	u268_21
 11967  0025  2827               	goto	u268_20
 11968  0026                     u268_21:
 11969  0026  282F               	goto	i1l772
 11970  0027                     u268_20:
 11971  0027                     i1l3531:
 11972  0027  1C0D               	btfss	13,0	;volatile
 11973  0028  282A               	goto	u269_21
 11974  0029  282B               	goto	u269_20
 11975  002A                     u269_21:
 11976  002A  282F               	goto	i1l772
 11977  002B                     u269_20:
 11978  002B                     i1l3533:
 11979                           
 11980                           ;interrupt.c: 39: {;interrupt.c: 40: ADCC_ISR();
 11981  002B  3189  21A8  3180   	fcall	_ADCC_ISR
 11982                           
 11983                           ;interrupt.c: 41: }
 11984  002E  282F               	goto	i1l773
 11985  002F                     i1l772:	
 11986                           ;interrupt.c: 47: else;interrupt.c: 48: {
 11987                           
 11988  002F                     i1l773:
 11989  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11990  0030  0009               	retfie
 11991  0031                     __end_of_INTERRUPT_InterruptManager:
 11992                           
 11993                           	psect	text57
 11994  0A3C                     __ptext57:	
 11995 ;; *************** function _PIN_MANAGER_IOC *****************
 11996 ;; Defined at:
 11997 ;;		line 30 in file "system/pin_manager.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;		None
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;		None
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      void 
 12004 ;; Registers used:
 12005 ;;		wreg, status,2, status,0, pclath, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12015 ;;Total ram usage:        0 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:    2
 12018 ;; This function calls:
 12019 ;;		_IOCCF0_ISR
 12020 ;;		_IOCCF2_ISR
 12021 ;;		_IOCCF4_ISR
 12022 ;;		_IOCCF6_ISR
 12023 ;; This function is called by:
 12024 ;;		_INTERRUPT_InterruptManager
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           
 12029                           ;psect for function _PIN_MANAGER_IOC
 12030  0A3C                     _PIN_MANAGER_IOC:
 12031  0A3C                     i1l3453:	
 12032                           ;incstack = 0
 12033                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 12034                           
 12035                           
 12036                           ;pin_manager.c: 33: if(IOCCFbits.IOCCF0 == 1)
 12037  0A3C  017E               	movlb	62	; select bank62
 12038  0A3D  1C55               	btfss	85,0	;volatile
 12039  0A3E  2A40               	goto	u255_21
 12040  0A3F  2A41               	goto	u255_20
 12041  0A40                     u255_21:
 12042  0A40  2A44               	goto	i1l3457
 12043  0A41                     u255_20:
 12044  0A41                     i1l3455:
 12045                           
 12046                           ;pin_manager.c: 34: {;pin_manager.c: 35: IOCCF0_ISR();
 12047  0A41  3188  20C9  318A   	fcall	_IOCCF0_ISR
 12048  0A44                     i1l3457:
 12049                           
 12050                           ;pin_manager.c: 36: };pin_manager.c: 38: if(IOCCFbits.IOCCF2 == 1)
 12051  0A44  017E               	movlb	62	; select bank62
 12052  0A45  1D55               	btfss	85,2	;volatile
 12053  0A46  2A48               	goto	u256_21
 12054  0A47  2A49               	goto	u256_20
 12055  0A48                     u256_21:
 12056  0A48  2A4C               	goto	i1l3461
 12057  0A49                     u256_20:
 12058  0A49                     i1l3459:
 12059                           
 12060                           ;pin_manager.c: 39: {;pin_manager.c: 40: IOCCF2_ISR();
 12061  0A49  3188  20CC  318A   	fcall	_IOCCF2_ISR
 12062  0A4C                     i1l3461:
 12063                           
 12064                           ;pin_manager.c: 41: };pin_manager.c: 43: if(IOCCFbits.IOCCF4 == 1)
 12065  0A4C  017E               	movlb	62	; select bank62
 12066  0A4D  1E55               	btfss	85,4	;volatile
 12067  0A4E  2A50               	goto	u257_21
 12068  0A4F  2A51               	goto	u257_20
 12069  0A50                     u257_21:
 12070  0A50  2A54               	goto	i1l3465
 12071  0A51                     u257_20:
 12072  0A51                     i1l3463:
 12073                           
 12074                           ;pin_manager.c: 44: {;pin_manager.c: 45: IOCCF4_ISR();
 12075  0A51  3188  20CF  318A   	fcall	_IOCCF4_ISR
 12076  0A54                     i1l3465:
 12077                           
 12078                           ;pin_manager.c: 46: };pin_manager.c: 48: if(IOCCFbits.IOCCF6 == 1)
 12079  0A54  017E               	movlb	62	; select bank62
 12080  0A55  1F55               	btfss	85,6	;volatile
 12081  0A56  2A58               	goto	u258_21
 12082  0A57  2A59               	goto	u258_20
 12083  0A58                     u258_21:
 12084  0A58  2A5C               	goto	i1l700
 12085  0A59                     u258_20:
 12086  0A59                     i1l3467:
 12087                           
 12088                           ;pin_manager.c: 49: {;pin_manager.c: 50: IOCCF6_ISR();
 12089  0A59  3189  21B7  318A   	fcall	_IOCCF6_ISR
 12090  0A5C                     i1l700:
 12091  0A5C  0008               	return
 12092  0A5D                     __end_of_PIN_MANAGER_IOC:
 12093                           
 12094                           	psect	text58
 12095  09B7                     __ptext58:	
 12096 ;; *************** function _IOCCF6_ISR *****************
 12097 ;; Defined at:
 12098 ;;		line 147 in file "system/pin_manager.c"
 12099 ;; Parameters:    Size  Location     Type
 12100 ;;		None
 12101 ;; Auto vars:     Size  Location     Type
 12102 ;;		None
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      void 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0, pclath, cstack
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12116 ;;Total ram usage:        0 bytes
 12117 ;; Hardware stack levels used:    1
 12118 ;; Hardware stack levels required when called:    1
 12119 ;; This function calls:
 12120 ;;		Absolute function
 12121 ;;		_ISR_MIC_Wake
 12122 ;; This function is called by:
 12123 ;;		_PIN_MANAGER_IOC
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           
 12128                           ;psect for function _IOCCF6_ISR
 12129  09B7                     _IOCCF6_ISR:
 12130  09B7                     i1l3203:	
 12131                           ;incstack = 0
 12132                           ; Regs used in _IOCCF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 12133                           
 12134                           
 12135                           ;pin_manager.c: 152: if(IOCCF6_InterruptHandler)
 12136  09B7  0141               	movlb	1	; select bank1
 12137  09B8  0845               	movf	_IOCCF6_InterruptHandler^(0+128),w
 12138  09B9  0446               	iorwf	(_IOCCF6_InterruptHandler+1)^(0+128),w
 12139  09BA  1903               	btfsc	3,2
 12140  09BB  29BD               	goto	u230_21
 12141  09BC  29BE               	goto	u230_20
 12142  09BD                     u230_21:
 12143  09BD  29C3               	goto	i1l3207
 12144  09BE                     u230_20:
 12145  09BE                     i1l3205:
 12146                           
 12147                           ;pin_manager.c: 153: {;pin_manager.c: 154: IOCCF6_InterruptHandler();
 12148  09BE  0846               	movf	(_IOCCF6_InterruptHandler+1)^(0+128),w
 12149  09BF  008A               	movwf	10
 12150  09C0  0845               	movf	_IOCCF6_InterruptHandler^(0+128),w
 12151  09C1  000A               	callw
 12152  09C2  3189               	pagesel	$
 12153  09C3                     i1l3207:
 12154                           
 12155                           ;pin_manager.c: 155: };pin_manager.c: 156: IOCCFbits.IOCCF6 = 0;
 12156  09C3  017E               	movlb	62	; select bank62
 12157  09C4  1355               	bcf	85,6	;volatile
 12158  09C5                     i1l734:
 12159  09C5  0008               	return
 12160  09C6                     __end_of_IOCCF6_ISR:
 12161                           
 12162                           	psect	text59
 12163  093F                     __ptext59:	
 12164 ;; *************** function _ISR_MIC_Wake *****************
 12165 ;; Defined at:
 12166 ;;		line 618 in file "Sensors/sound_level.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;		None
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      void 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2, status,0
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12184 ;;Total ram usage:        0 bytes
 12185 ;; Hardware stack levels used:    1
 12186 ;; This function calls:
 12187 ;;		Nothing
 12188 ;; This function is called by:
 12189 ;;		_SoundLevel_Init
 12190 ;;		_IOCCF6_ISR
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           
 12195                           ;psect for function _ISR_MIC_Wake
 12196  093F                     _ISR_MIC_Wake:
 12197  093F                     i1l3073:	
 12198                           ;incstack = 0
 12199                           ; Regs used in _ISR_MIC_Wake: [wreg+status,2+status,0]
 12200                           
 12201                           
 12202                           ;sound_level.c: 620: __nop();
 12203  093F  0000               	nop
 12204  0940                     i1l3075:
 12205                           
 12206                           ;sound_level.c: 621: if(!measurementRunning)
 12207  0940  0141               	movlb	1	; select bank1
 12208  0941  0852               	movf	_measurementRunning^(0+128),w
 12209  0942  1D03               	btfss	3,2
 12210  0943  2945               	goto	u225_21
 12211  0944  2946               	goto	u225_20
 12212  0945                     u225_21:
 12213  0945  2948               	goto	i1l375
 12214  0946                     u225_20:
 12215  0946                     i1l3077:
 12216                           
 12217                           ;sound_level.c: 622: {;sound_level.c: 623: soundinterrupt = 1;
 12218  0946  01D3               	clrf	_soundinterrupt^(0+128)
 12219  0947  0AD3               	incf	_soundinterrupt^(0+128),f
 12220  0948                     i1l375:
 12221  0948  0008               	return
 12222  0949                     __end_of_ISR_MIC_Wake:
 12223                           
 12224                           	psect	text60
 12225  08CF                     __ptext60:	
 12226 ;; *************** function _IOCCF4_ISR *****************
 12227 ;; Defined at:
 12228 ;;		line 117 in file "system/pin_manager.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;		None
 12231 ;; Auto vars:     Size  Location     Type
 12232 ;;		None
 12233 ;; Return value:  Size  Location     Type
 12234 ;;                  1    wreg      void 
 12235 ;; Registers used:
 12236 ;;		wreg, status,2, status,0
 12237 ;; Tracked objects:
 12238 ;;		On entry : 0/0
 12239 ;;		On exit  : 0/0
 12240 ;;		Unchanged: 0/0
 12241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12246 ;;Total ram usage:        0 bytes
 12247 ;; Hardware stack levels used:    1
 12248 ;; This function calls:
 12249 ;;		Nothing
 12250 ;; This function is called by:
 12251 ;;		_PIN_MANAGER_IOC
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255                           
 12256                           ;psect for function _IOCCF4_ISR
 12257  08CF                     _IOCCF4_ISR:
 12258  08CF                     i1l3201:	
 12259                           ;incstack = 0
 12260                           ; Regs used in _IOCCF4_ISR: [wreg+status,2+status,0]
 12261                           
 12262  08CF                     i1l723:
 12263                           
 12264                           ;pin_manager.c: 125: };pin_manager.c: 126: IOCCFbits.IOCCF4 = 0;
 12265  08CF  017E               	movlb	62	; select bank62
 12266  08D0  1255               	bcf	85,4	;volatile
 12267  08D1                     i1l724:
 12268  08D1  0008               	return
 12269  08D2                     __end_of_IOCCF4_ISR:
 12270                           
 12271                           	psect	text61
 12272  08CC                     __ptext61:	
 12273 ;; *************** function _IOCCF2_ISR *****************
 12274 ;; Defined at:
 12275 ;;		line 87 in file "system/pin_manager.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;		None
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      void 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; This function calls:
 12296 ;;		Nothing
 12297 ;; This function is called by:
 12298 ;;		_PIN_MANAGER_IOC
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           
 12303                           ;psect for function _IOCCF2_ISR
 12304  08CC                     _IOCCF2_ISR:
 12305  08CC                     i1l3199:	
 12306                           ;incstack = 0
 12307                           ; Regs used in _IOCCF2_ISR: [wreg+status,2+status,0]
 12308                           
 12309  08CC                     i1l713:
 12310                           
 12311                           ;pin_manager.c: 95: };pin_manager.c: 96: IOCCFbits.IOCCF2 = 0;
 12312  08CC  017E               	movlb	62	; select bank62
 12313  08CD  1155               	bcf	85,2	;volatile
 12314  08CE                     i1l714:
 12315  08CE  0008               	return
 12316  08CF                     __end_of_IOCCF2_ISR:
 12317                           
 12318                           	psect	text62
 12319  08C9                     __ptext62:	
 12320 ;; *************** function _IOCCF0_ISR *****************
 12321 ;; Defined at:
 12322 ;;		line 57 in file "system/pin_manager.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;		None
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  1    wreg      void 
 12329 ;; Registers used:
 12330 ;;		wreg, status,2, status,0
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;Total ram usage:        0 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; This function calls:
 12343 ;;		Nothing
 12344 ;; This function is called by:
 12345 ;;		_PIN_MANAGER_IOC
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _IOCCF0_ISR
 12351  08C9                     _IOCCF0_ISR:
 12352  08C9                     i1l3197:	
 12353                           ;incstack = 0
 12354                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0]
 12355                           
 12356  08C9                     i1l703:
 12357                           
 12358                           ;pin_manager.c: 65: };pin_manager.c: 66: IOCCFbits.IOCCF0 = 0;
 12359  08C9  017E               	movlb	62	; select bank62
 12360  08CA  1055               	bcf	85,0	;volatile
 12361  08CB                     i1l704:
 12362  08CB  0008               	return
 12363  08CC                     __end_of_IOCCF0_ISR:
 12364                           
 12365                           	psect	text63
 12366  0C83                     __ptext63:	
 12367 ;; *************** function _I2C1_ISR *****************
 12368 ;; Defined at:
 12369 ;;		line 132 in file "system/i2c1.c"
 12370 ;; Parameters:    Size  Location     Type
 12371 ;;		None
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;  i2c_data        1    3[COMMON] unsigned char 
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      void 
 12376 ;; Registers used:
 12377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12387 ;;Total ram usage:        2 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; Hardware stack levels required when called:    1
 12390 ;; This function calls:
 12391 ;;		_I2C1_StatusCallback
 12392 ;; This function is called by:
 12393 ;;		_INTERRUPT_InterruptManager
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           
 12398                           ;psect for function _I2C1_ISR
 12399  0C83                     _I2C1_ISR:
 12400  0C83                     i1l3425:	
 12401                           ;incstack = 0
 12402                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12403                           
 12404  0C83                     i1l3427:
 12405                           
 12406                           ;i2c1.c: 138: PIE3bits.SSP1IE = 0;
 12407  0C83  014E               	movlb	14	; select bank14
 12408  0C84  1019               	bcf	25,0	;volatile
 12409  0C85                     i1l3429:
 12410                           
 12411                           ;i2c1.c: 139: PIR3bits.SSP1IF = 0;
 12412  0C85  100F               	bcf	15,0	;volatile
 12413  0C86                     i1l3431:
 12414                           
 12415                           ;i2c1.c: 140: i2c_data = SSP1BUF;
 12416  0C86  0143               	movlb	3	; select bank3
 12417  0C87  080C               	movf	12,w	;volatile
 12418  0C88  00F2               	movwf	??_I2C1_ISR
 12419  0C89  0872               	movf	??_I2C1_ISR,w
 12420  0C8A  00F3               	movwf	I2C1_ISR@i2c_data
 12421  0C8B                     i1l3433:
 12422                           
 12423                           ;i2c1.c: 141: if(1 == SSP1STATbits.R_nW){
 12424  0C8B  1D0F               	btfss	15,2	;volatile
 12425  0C8C  2C8E               	goto	u250_21
 12426  0C8D  2C8F               	goto	u250_20
 12427  0C8E                     u250_21:
 12428  0C8E  2CA3               	goto	i1l623
 12429  0C8F                     u250_20:
 12430  0C8F                     i1l3435:
 12431                           
 12432                           ;i2c1.c: 142: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT)){
 12433  0C8F  1E8F               	btfss	15,5	;volatile
 12434  0C90  2C92               	goto	u251_21
 12435  0C91  2C93               	goto	u251_20
 12436  0C92                     u251_21:
 12437  0C92  2C9C               	goto	i1l3441
 12438  0C93                     u251_20:
 12439  0C93                     i1l3437:
 12440  0C93  1F11               	btfss	17,6	;volatile
 12441  0C94  2C96               	goto	u252_21
 12442  0C95  2C97               	goto	u252_20
 12443  0C96                     u252_21:
 12444  0C96  2C9C               	goto	i1l3441
 12445  0C97                     u252_20:
 12446  0C97                     i1l3439:
 12447                           
 12448                           ;i2c1.c: 144: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 12449  0C97  3003               	movlw	3
 12450  0C98  318D  258D  318C   	fcall	_I2C1_StatusCallback
 12451                           
 12452                           ;i2c1.c: 145: }
 12453  0C9B  2CBB               	goto	i1l626
 12454  0C9C                     i1l3441:
 12455                           
 12456                           ;i2c1.c: 146: else{;i2c1.c: 148: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUEST);
 12457  0C9C  3001               	movlw	1
 12458  0C9D  318D  258D  318C   	fcall	_I2C1_StatusCallback
 12459  0CA0                     i1l3443:
 12460                           
 12461                           ;i2c1.c: 149: SSP1CON1bits.CKP = 1;
 12462  0CA0  0143               	movlb	3	; select bank3
 12463  0CA1  1610               	bsf	16,4	;volatile
 12464  0CA2  2CBB               	goto	i1l626
 12465  0CA3                     i1l623:
 12466                           
 12467                           ;i2c1.c: 153: else if(0 == SSP1STATbits.D_nA){
 12468  0CA3  1A8F               	btfsc	15,5	;volatile
 12469  0CA4  2CA6               	goto	u253_21
 12470  0CA5  2CA7               	goto	u253_20
 12471  0CA6                     u253_21:
 12472  0CA6  2CAC               	goto	i1l3447
 12473  0CA7                     u253_20:
 12474  0CA7                     i1l3445:
 12475                           
 12476                           ;i2c1.c: 157: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 12477  0CA7  3000               	movlw	0
 12478  0CA8  318D  258D  318C   	fcall	_I2C1_StatusCallback
 12479                           
 12480                           ;i2c1.c: 158: }
 12481  0CAB  2CBB               	goto	i1l626
 12482  0CAC                     i1l3447:
 12483                           
 12484                           ;i2c1.c: 159: else{;i2c1.c: 160: I2C1_slaveWriteData = i2c_data;
 12485  0CAC  0873               	movf	I2C1_ISR@i2c_data,w
 12486  0CAD  00F2               	movwf	??_I2C1_ISR
 12487  0CAE  0872               	movf	??_I2C1_ISR,w
 12488  0CAF  00FB               	movwf	_I2C1_slaveWriteData	;volatile
 12489  0CB0                     i1l3449:
 12490                           
 12491                           ;i2c1.c: 163: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 12492  0CB0  3002               	movlw	2
 12493  0CB1  318D  258D  318C   	fcall	_I2C1_StatusCallback
 12494  0CB4                     i1l3451:
 12495                           
 12496                           ;i2c1.c: 164: SSP1CON1bits.CKP = 1;
 12497  0CB4  0143               	movlb	3	; select bank3
 12498  0CB5  1610               	bsf	16,4	;volatile
 12499  0CB6                     i1l629:	
 12500                           ;i2c1.c: 165: while(!PIR3bits.SSP1IF);
 12501                           
 12502  0CB6  014E               	movlb	14	; select bank14
 12503  0CB7  1C0F               	btfss	15,0	;volatile
 12504  0CB8  2CBA               	goto	u254_21
 12505  0CB9  2CBB               	goto	u254_20
 12506  0CBA                     u254_21:
 12507  0CBA  2CB6               	goto	i1l629
 12508  0CBB                     u254_20:
 12509  0CBB                     i1l626:
 12510                           
 12511                           ;i2c1.c: 166: };i2c1.c: 169: PIR3bits.SSP1IF = 0;
 12512  0CBB  014E               	movlb	14	; select bank14
 12513  0CBC  100F               	bcf	15,0	;volatile
 12514                           
 12515                           ;i2c1.c: 170: SSP1CON1bits.CKP = 1;
 12516  0CBD  0143               	movlb	3	; select bank3
 12517  0CBE  1610               	bsf	16,4	;volatile
 12518                           
 12519                           ;i2c1.c: 172: PIE3bits.SSP1IE = 1;
 12520  0CBF  014E               	movlb	14	; select bank14
 12521  0CC0  1419               	bsf	25,0	;volatile
 12522  0CC1                     i1l632:
 12523  0CC1  0008               	return
 12524  0CC2                     __end_of_I2C1_ISR:
 12525                           
 12526                           	psect	text64
 12527  0D8D                     __ptext64:	
 12528 ;; *************** function _I2C1_StatusCallback *****************
 12529 ;; Defined at:
 12530 ;;		line 209 in file "system/i2c1.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  i2c_bus_stat    1    wreg     enum E10841
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;  i2c_bus_stat    1    1[COMMON] enum E10841
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12548 ;;Total ram usage:        2 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		_I2C1_ISR
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557                           
 12558                           ;psect for function _I2C1_StatusCallback
 12559  0D8D                     _I2C1_StatusCallback:
 12560                           
 12561                           ;incstack = 0
 12562                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr1h+status,2+status,0]
 12563                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 12564  0D8D  00F1               	movwf	I2C1_StatusCallback@i2c_bus_state
 12565  0D8E                     i1l3167:
 12566                           
 12567                           ;i2c1.c: 211: static uint8_t slaveWriteType = SLAVE_COMMAND_DATA;;i2c1.c: 214: switch (i
      +                          2c_bus_state){
 12568  0D8E  2DD0               	goto	i1l3195
 12569  0D8F                     i1l661:	
 12570                           ;i2c1.c: 216: case I2C1_SLAVE_WRITE_REQUEST:
 12571                           
 12572                           
 12573                           ;i2c1.c: 218: slaveWriteType = SLAVE_COMMAND;
 12574  0D8F  0141               	movlb	1	; select bank1
 12575  0D90  01CD               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 12576  0D91  0ACD               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 12577                           
 12578                           ;i2c1.c: 219: break;
 12579  0D92  2DDE               	goto	i1l675
 12580  0D93                     i1l3169:
 12581                           
 12582                           ;i2c1.c: 226: cmdByte = I2C1_slaveWriteData;
 12583  0D93  087B               	movf	_I2C1_slaveWriteData,w	;volatile
 12584  0D94  00F0               	movwf	??_I2C1_StatusCallback
 12585  0D95  0870               	movf	??_I2C1_StatusCallback,w
 12586  0D96  00FA               	movwf	_cmdByte
 12587  0D97                     i1l3171:
 12588                           
 12589                           ;i2c1.c: 227: rxLen = 0;
 12590  0D97  01F8               	clrf	_rxLen
 12591  0D98                     i1l3173:
 12592                           
 12593                           ;i2c1.c: 228: cmdReceived = 1;
 12594  0D98  01F9               	clrf	_cmdReceived
 12595  0D99  0AF9               	incf	_cmdReceived,f
 12596                           
 12597                           ;i2c1.c: 229: break;
 12598  0D9A  2DB8               	goto	i1l3185
 12599  0D9B                     i1l3175:
 12600                           
 12601                           ;i2c1.c: 234: if(rxLen <= 32)
 12602  0D9B  3021               	movlw	33
 12603  0D9C  0278               	subwf	_rxLen,w
 12604  0D9D  1803               	skipnc
 12605  0D9E  2DA0               	goto	u228_21
 12606  0D9F  2DA1               	goto	u228_20
 12607  0DA0                     u228_21:
 12608  0DA0  2DB8               	goto	i1l3185
 12609  0DA1                     u228_20:
 12610  0DA1                     i1l3177:
 12611                           
 12612                           ;i2c1.c: 235: {;i2c1.c: 236: i2c1_rx_buffer[rxLen++] = I2C1_slaveWriteData;
 12613  0DA1  087B               	movf	_I2C1_slaveWriteData,w	;volatile
 12614  0DA2  00F0               	movwf	??_I2C1_StatusCallback
 12615  0DA3  0878               	movf	_rxLen,w
 12616  0DA4  3E2B               	addlw	(low (_i2c1_rx_buffer| (0+256)))& (0+255)
 12617  0DA5  0086               	movwf	6
 12618  0DA6  3001               	movlw	1	; select bank2/3
 12619  0DA7  0087               	movwf	7
 12620  0DA8  0870               	movf	??_I2C1_StatusCallback,w
 12621  0DA9  0081               	movwf	1
 12622  0DAA                     i1l3179:
 12623  0DAA  3001               	movlw	1
 12624  0DAB  00F0               	movwf	??_I2C1_StatusCallback
 12625  0DAC  0870               	movf	??_I2C1_StatusCallback,w
 12626  0DAD  07F8               	addwf	_rxLen,f
 12627  0DAE  2DB8               	goto	i1l3185
 12628  0DAF                     i1l3183:
 12629  0DAF  0141               	movlb	1	; select bank1
 12630  0DB0  084D               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 12631                           
 12632                           ; Switch size 1, requested type "simple"
 12633                           ; Number of cases is 2, Range of values is 0 to 1
 12634                           ; switch strategies available:
 12635                           ; Name         Instructions Cycles
 12636                           ; simple_byte            7     4 (average)
 12637                           ; direct_byte           10     6 (fixed)
 12638                           ; jumptable            260     6 (fixed)
 12639                           ;	Chosen strategy is simple_byte
 12640  0DB1  3A00               	xorlw	0	; case 0
 12641  0DB2  1903               	skipnz
 12642  0DB3  2D9B               	goto	i1l3175
 12643  0DB4  3A01               	xorlw	1	; case 1
 12644  0DB5  1903               	skipnz
 12645  0DB6  2D93               	goto	i1l3169
 12646  0DB7  2D9B               	goto	i1l3175
 12647  0DB8                     i1l3185:
 12648                           
 12649                           ;i2c1.c: 242: slaveWriteType = SLAVE_COMMAND_DATA;
 12650  0DB8  01CD               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 12651                           
 12652                           ;i2c1.c: 243: break;
 12653  0DB9  2DDE               	goto	i1l675
 12654  0DBA                     i1l3187:
 12655                           
 12656                           ;i2c1.c: 246: if(txCnt<txLen){
 12657  0DBA  0877               	movf	_txLen,w
 12658  0DBB  0276               	subwf	_txCnt,w
 12659  0DBC  1803               	skipnc
 12660  0DBD  2DBF               	goto	u229_21
 12661  0DBE  2DC0               	goto	u229_20
 12662  0DBF                     u229_21:
 12663  0DBF  2DCD               	goto	i1l3193
 12664  0DC0                     u229_20:
 12665  0DC0                     i1l3189:
 12666                           
 12667                           ;i2c1.c: 247: SSP1BUF = i2c1_tx_buffer[txCnt++];
 12668  0DC0  0876               	movf	_txCnt,w
 12669  0DC1  3EA0               	addlw	(low (_i2c1_tx_buffer| (0+256)))& (0+255)
 12670  0DC2  0086               	movwf	6
 12671  0DC3  3001               	movlw	1	; select bank3/4
 12672  0DC4  0087               	movwf	7
 12673  0DC5  0801               	movf	1,w
 12674  0DC6  0143               	movlb	3	; select bank3
 12675  0DC7  008C               	movwf	12	;volatile
 12676  0DC8                     i1l3191:
 12677  0DC8  3001               	movlw	1
 12678  0DC9  00F0               	movwf	??_I2C1_StatusCallback
 12679  0DCA  0870               	movf	??_I2C1_StatusCallback,w
 12680  0DCB  07F6               	addwf	_txCnt,f
 12681                           
 12682                           ;i2c1.c: 248: }
 12683  0DCC  2DDE               	goto	i1l675
 12684  0DCD                     i1l3193:
 12685                           
 12686                           ;i2c1.c: 249: else{;i2c1.c: 250: SSP1BUF = 0x00;
 12687  0DCD  0143               	movlb	3	; select bank3
 12688  0DCE  018C               	clrf	12	;volatile
 12689  0DCF  2DDE               	goto	i1l675
 12690  0DD0                     i1l3195:
 12691  0DD0  0871               	movf	I2C1_StatusCallback@i2c_bus_state,w
 12692                           
 12693                           ; Switch size 1, requested type "simple"
 12694                           ; Number of cases is 4, Range of values is 0 to 3
 12695                           ; switch strategies available:
 12696                           ; Name         Instructions Cycles
 12697                           ; simple_byte           13     7 (average)
 12698                           ; direct_byte           14     6 (fixed)
 12699                           ; jumptable            260     6 (fixed)
 12700                           ;	Chosen strategy is simple_byte
 12701  0DD1  3A00               	xorlw	0	; case 0
 12702  0DD2  1903               	skipnz
 12703  0DD3  2D8F               	goto	i1l661
 12704  0DD4  3A01               	xorlw	1	; case 1
 12705  0DD5  1903               	skipnz
 12706  0DD6  2DBA               	goto	i1l3187
 12707  0DD7  3A03               	xorlw	3	; case 2
 12708  0DD8  1903               	skipnz
 12709  0DD9  2DAF               	goto	i1l3183
 12710  0DDA  3A01               	xorlw	1	; case 3
 12711  0DDB  1903               	skipnz
 12712  0DDC  2DDE               	goto	i1l675
 12713  0DDD  2DDE               	goto	i1l675
 12714  0DDE                     i1l675:
 12715  0DDE  0008               	return
 12716  0DDF                     __end_of_I2C1_StatusCallback:
 12717                           
 12718                           	psect	text65
 12719  09A8                     __ptext65:	
 12720 ;; *************** function _ADCC_ISR *****************
 12721 ;; Defined at:
 12722 ;;		line 283 in file "system/adcc.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;		None
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;		None
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  1    wreg      void 
 12729 ;; Registers used:
 12730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12740 ;;Total ram usage:        0 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    3
 12743 ;; This function calls:
 12744 ;;		Absolute function
 12745 ;;		_ADCC_DefaultInterruptHandler
 12746 ;;		_SoundLevel_GetSample
 12747 ;; This function is called by:
 12748 ;;		_INTERRUPT_InterruptManager
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           
 12753                           ;psect for function _ADCC_ISR
 12754  09A8                     _ADCC_ISR:
 12755  09A8                     i1l3419:	
 12756                           ;incstack = 0
 12757                           ; Regs used in _ADCC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12758                           
 12759                           
 12760                           ;adcc.c: 286: PIR1bits.ADIF = 0;
 12761  09A8  014E               	movlb	14	; select bank14
 12762  09A9  100D               	bcf	13,0	;volatile
 12763  09AA                     i1l3421:
 12764                           
 12765                           ;adcc.c: 288: if (ADCC_ADI_InterruptHandler)
 12766  09AA  0141               	movlb	1	; select bank1
 12767  09AB  0847               	movf	_ADCC_ADI_InterruptHandler^(0+128),w
 12768  09AC  0448               	iorwf	(_ADCC_ADI_InterruptHandler+1)^(0+128),w
 12769  09AD  1903               	btfsc	3,2
 12770  09AE  29B0               	goto	u249_21
 12771  09AF  29B1               	goto	u249_20
 12772  09B0                     u249_21:
 12773  09B0  29B6               	goto	i1l551
 12774  09B1                     u249_20:
 12775  09B1                     i1l3423:
 12776                           
 12777                           ;adcc.c: 289: ADCC_ADI_InterruptHandler();
 12778  09B1  0848               	movf	(_ADCC_ADI_InterruptHandler+1)^(0+128),w
 12779  09B2  008A               	movwf	10
 12780  09B3  0847               	movf	_ADCC_ADI_InterruptHandler^(0+128),w
 12781  09B4  000A               	callw
 12782  09B5  3189               	pagesel	$
 12783  09B6                     i1l551:
 12784  09B6  0008               	return
 12785  09B7                     __end_of_ADCC_ISR:
 12786                           
 12787                           	psect	text66
 12788  08C1                     __ptext66:	
 12789 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 12790 ;; Defined at:
 12791 ;;		line 296 in file "system/adcc.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;		None
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;		None
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  1    wreg      void 
 12798 ;; Registers used:
 12799 ;;		None
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12809 ;;Total ram usage:        0 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_ADCC_Initialize
 12815 ;;		_ADCC_ISR
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           
 12820                           ;psect for function _ADCC_DefaultInterruptHandler
 12821  08C1                     _ADCC_DefaultInterruptHandler:
 12822  08C1                     i1l557:	
 12823                           ;incstack = 0
 12824                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 12825                           
 12826  08C1  0008               	return
 12827  08C2                     __end_of_ADCC_DefaultInterruptHandler:
 12828                           
 12829                           	psect	text67
 12830  0BAE                     __ptext67:	
 12831 ;; *************** function _SoundLevel_GetSample *****************
 12832 ;; Defined at:
 12833 ;;		line 537 in file "Sensors/sound_level.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;		None
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12850 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12851 ;;Total ram usage:        4 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:    2
 12854 ;; This function calls:
 12855 ;;		_ADCC_GetConversionResult
 12856 ;;		_SoundLevel_StopADC
 12857 ;; This function is called by:
 12858 ;;		_SoundLevel_Init
 12859 ;;		_ADCC_ISR
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           
 12864                           ;psect for function _SoundLevel_GetSample
 12865  0BAE                     _SoundLevel_GetSample:
 12866  0BAE                     i1l3131:	
 12867                           ;incstack = 0
 12868                           ; Regs used in _SoundLevel_GetSample: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12869                           
 12870                           
 12871                           ;sound_level.c: 539: sampleArray[sampleCounter] = ADCC_GetConversionResult();
 12872  0BAE  3188  20E8  318B   	fcall	_ADCC_GetConversionResult
 12873  0BB1  0141               	movlb	1	; select bank1
 12874  0BB2  084C               	movf	(_sampleCounter+1)^(0+128),w
 12875  0BB3  00F3               	movwf	??_SoundLevel_GetSample+1
 12876  0BB4  084B               	movf	_sampleCounter^(0+128),w
 12877  0BB5  00F2               	movwf	??_SoundLevel_GetSample
 12878  0BB6  35F2               	lslf	??_SoundLevel_GetSample,f
 12879  0BB7  0DF3               	rlf	??_SoundLevel_GetSample+1,f
 12880  0BB8  30D0               	movlw	208
 12881  0BB9  00F4               	movwf	??_SoundLevel_GetSample+2
 12882  0BBA  3024               	movlw	36
 12883  0BBB  00F5               	movwf	??_SoundLevel_GetSample+3
 12884  0BBC  0872               	movf	??_SoundLevel_GetSample,w
 12885  0BBD  0774               	addwf	??_SoundLevel_GetSample+2,w
 12886  0BBE  0086               	movwf	6
 12887  0BBF  0873               	movf	??_SoundLevel_GetSample+1,w
 12888  0BC0  3D75               	addwfc	??_SoundLevel_GetSample+3,w
 12889  0BC1  0087               	movwf	7
 12890  0BC2  0870               	movf	?_ADCC_GetConversionResult,w
 12891  0BC3  3FC0               	movwi [0]fsr1
 12892  0BC4  0871               	movf	?_ADCC_GetConversionResult+1,w
 12893  0BC5  3FC1               	movwi [1]fsr1
 12894  0BC6                     i1l3133:
 12895                           
 12896                           ;sound_level.c: 545: sampleCounter++;
 12897  0BC6  3001               	movlw	1
 12898  0BC7  07CB               	addwf	_sampleCounter^(0+128),f
 12899  0BC8  3000               	movlw	0
 12900  0BC9  3DCC               	addwfc	(_sampleCounter+1)^(0+128),f
 12901  0BCA                     i1l3135:
 12902                           
 12903                           ;sound_level.c: 546: if(sampleCounter>400-1){
 12904  0BCA  3001               	movlw	1
 12905  0BCB  024C               	subwf	(_sampleCounter+1)^(0+128),w
 12906  0BCC  3090               	movlw	144
 12907  0BCD  1903               	skipnz
 12908  0BCE  024B               	subwf	_sampleCounter^(0+128),w
 12909  0BCF  1C03               	skipc
 12910  0BD0  2BD2               	goto	u227_21
 12911  0BD1  2BD3               	goto	u227_20
 12912  0BD2                     u227_21:
 12913  0BD2  2BD8               	goto	i1l337
 12914  0BD3                     u227_20:
 12915  0BD3                     i1l3137:
 12916                           
 12917                           ;sound_level.c: 547: SoundLevel_StopADC();
 12918  0BD3  3189  2106  318B   	fcall	_SoundLevel_StopADC
 12919  0BD6                     i1l3139:
 12920                           
 12921                           ;sound_level.c: 548: sampling = 0;
 12922  0BD6  0141               	movlb	1	; select bank1
 12923  0BD7  01D1               	clrf	_sampling^(0+128)
 12924  0BD8                     i1l337:
 12925  0BD8  0008               	return
 12926  0BD9                     __end_of_SoundLevel_GetSample:
 12927                           
 12928                           	psect	text68
 12929  0906                     __ptext68:	
 12930 ;; *************** function _SoundLevel_StopADC *****************
 12931 ;; Defined at:
 12932 ;;		line 559 in file "Sensors/sound_level.c"
 12933 ;; Parameters:    Size  Location     Type
 12934 ;;		None
 12935 ;; Auto vars:     Size  Location     Type
 12936 ;;		None
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  1    wreg      void 
 12939 ;; Registers used:
 12940 ;;		status,2, status,0, pclath, cstack
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;Total ram usage:        0 bytes
 12951 ;; Hardware stack levels used:    1
 12952 ;; Hardware stack levels required when called:    1
 12953 ;; This function calls:
 12954 ;;		_ADCC_DisableContinuousConversion
 12955 ;;		_ADCC_StopConversion
 12956 ;; This function is called by:
 12957 ;;		_SoundLevel_GetSample
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _SoundLevel_StopADC
 12963  0906                     _SoundLevel_StopADC:
 12964  0906                     i1l3067:	
 12965                           ;incstack = 0
 12966                           ; Regs used in _SoundLevel_StopADC: [status,2+status,0+pclath+cstack]
 12967                           
 12968                           
 12969                           ;sound_level.c: 560: ADCC_StopConversion();
 12970  0906  3188  20C6  3189   	fcall	_ADCC_StopConversion
 12971                           
 12972                           ;sound_level.c: 561: ADCC_DisableContinuousConversion();
 12973  0909  3188  20C3  3189   	fcall	_ADCC_DisableContinuousConversion
 12974  090C                     i1l343:
 12975  090C  0008               	return
 12976  090D                     __end_of_SoundLevel_StopADC:
 12977                           
 12978                           	psect	text69
 12979  08C6                     __ptext69:	
 12980 ;; *************** function _ADCC_StopConversion *****************
 12981 ;; Defined at:
 12982 ;;		line 146 in file "system/adcc.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;		None
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;		None
 12987 ;; Return value:  Size  Location     Type
 12988 ;;                  1    wreg      void 
 12989 ;; Registers used:
 12990 ;;		None
 12991 ;; Tracked objects:
 12992 ;;		On entry : 0/0
 12993 ;;		On exit  : 0/0
 12994 ;;		Unchanged: 0/0
 12995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13000 ;;Total ram usage:        0 bytes
 13001 ;; Hardware stack levels used:    1
 13002 ;; This function calls:
 13003 ;;		Nothing
 13004 ;; This function is called by:
 13005 ;;		_SoundLevel_StopADC
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           
 13010                           ;psect for function _ADCC_StopConversion
 13011  08C6                     _ADCC_StopConversion:
 13012  08C6                     i1l2921:	
 13013                           ;incstack = 0
 13014                           ; Regs used in _ADCC_StopConversion: []
 13015                           
 13016                           
 13017                           ;adcc.c: 149: ADCON0bits.ADGO = 0;
 13018  08C6  0142               	movlb	2	; select bank2
 13019  08C7  1011               	bcf	17,0	;volatile
 13020  08C8                     i1l484:
 13021  08C8  0008               	return
 13022  08C9                     __end_of_ADCC_StopConversion:
 13023                           
 13024                           	psect	text70
 13025  08C3                     __ptext70:	
 13026 ;; *************** function _ADCC_DisableContinuousConversion *****************
 13027 ;; Defined at:
 13028 ;;		line 259 in file "system/adcc.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		None
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13046 ;;Total ram usage:        0 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; This function calls:
 13049 ;;		Nothing
 13050 ;; This function is called by:
 13051 ;;		_SoundLevel_StopADC
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           
 13056                           ;psect for function _ADCC_DisableContinuousConversion
 13057  08C3                     _ADCC_DisableContinuousConversion:
 13058  08C3                     i1l2923:	
 13059                           ;incstack = 0
 13060                           ; Regs used in _ADCC_DisableContinuousConversion: []
 13061                           
 13062                           
 13063                           ;adcc.c: 262: ADCON0bits.ADCONT = 0;
 13064  08C3  0142               	movlb	2	; select bank2
 13065  08C4  1311               	bcf	17,6	;volatile
 13066  08C5                     i1l538:
 13067  08C5  0008               	return
 13068  08C6                     __end_of_ADCC_DisableContinuousConversion:
 13069                           
 13070                           	psect	text71
 13071  08E8                     __ptext71:	
 13072 ;; *************** function _ADCC_GetConversionResult *****************
 13073 ;; Defined at:
 13074 ;;		line 115 in file "system/adcc.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;		None
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;		None
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  2    0[COMMON] unsigned int 
 13081 ;; Registers used:
 13082 ;;		wreg
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13092 ;;Total ram usage:        2 bytes
 13093 ;; Hardware stack levels used:    1
 13094 ;; This function calls:
 13095 ;;		Nothing
 13096 ;; This function is called by:
 13097 ;;		_SoundLevel_GetSample
 13098 ;; This function uses a non-reentrant model
 13099 ;;
 13100                           
 13101                           
 13102                           ;psect for function _ADCC_GetConversionResult
 13103  08E8                     _ADCC_GetConversionResult:
 13104  08E8                     i1l3063:	
 13105                           ;incstack = 0
 13106                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 13107                           
 13108                           
 13109                           ;adcc.c: 118: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13110  08E8  0141               	movlb	1	; select bank1
 13111  08E9  081E               	movf	30,w	;volatile
 13112  08EA  00F1               	movwf	?_ADCC_GetConversionResult+1
 13113  08EB  081D               	movf	29,w	;volatile
 13114  08EC  00F0               	movwf	?_ADCC_GetConversionResult
 13115  08ED                     i1l475:
 13116  08ED  0008               	return
 13117  08EE                     __end_of_ADCC_GetConversionResult:
 13118  007E                     btemp	set	126	;btemp
 13119  007E                     int$flags	set	126
 13120  007E                     wtemp0	set	126
 13121  24D0                     
 13122                           	psect	config
 13123                           
 13124                           ;Config register CONFIG1 @ 0x8007
 13125                           ;	External Oscillator mode selection bits
 13126                           ;	FEXTOSC = OFF, Oscillator not enabled
 13127                           ;	Power-up default value for COSC bits
 13128                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 13129                           ;	Clock Out Enable bit
 13130                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 13131                           ;	Clock Switch Enable bit
 13132                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13133                           ;	Fail-Safe Clock Monitor Enable bit
 13134                           ;	FCMEN = ON, FSCM timer enabled
 13135  8007                     	org	32775
 13136  8007  3FEC               	dw	16364
 13137                           
 13138                           ;Config register CONFIG2 @ 0x8008
 13139                           ;	Master Clear Enable bit
 13140                           ;	MCLRE = ON, MCLR pin is Master Clear function
 13141                           ;	Power-up Timer Enable bit
 13142                           ;	PWRTS = OFF, PWRT disabled
 13143                           ;	Low-Power BOR enable bit
 13144                           ;	LPBOREN = OFF, ULPBOR disabled
 13145                           ;	Brown-out reset enable bits
 13146                           ;	BOREN = OFF, Brown-out reset disabled
 13147                           ;	Brown-out Reset Voltage Selection
 13148                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 13149                           ;	Zero-cross detect disable
 13150                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 13151                           ;	Peripheral Pin Select one-way control
 13152                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 13153                           ;	Stack Overflow/Underflow Reset Enable bit
 13154                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13155  8008                     	org	32776
 13156  8008  3F3F               	dw	16191
 13157                           
 13158                           ;Config register CONFIG3 @ 0x8009
 13159                           ;	WDT Period Select bits
 13160                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13161                           ;	WDT operating mode
 13162                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit in WDTCON0
 13163                           ;	WDT Window Select bits
 13164                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13165                           ;	WDT input clock selector
 13166                           ;	WDTCCS = SC, Software Control
 13167  8009                     	org	32777
 13168  8009  3FBF               	dw	16319
 13169                           
 13170                           ;Config register CONFIG4 @ 0x800A
 13171                           ;	Boot Block Size Selection bits
 13172                           ;	BBSIZE = BB512, 512 words boot block size
 13173                           ;	Boot Block Enable bit
 13174                           ;	BBEN = OFF, Boot Block disabled
 13175                           ;	SAF Enable bit
 13176                           ;	SAFEN = OFF, SAF disabled
 13177                           ;	Application Block Write Protection bit
 13178                           ;	WRTAPP = OFF, Application Block not write protected
 13179                           ;	Boot Block Write Protection bit
 13180                           ;	WRTB = OFF, Boot Block not write protected
 13181                           ;	Configuration Register Write Protection bit
 13182                           ;	WRTC = OFF, Configuration Register not write protected
 13183                           ;	Data EEPROM write protection bit
 13184                           ;	WRTD = OFF, Data EEPROM NOT write protected
 13185                           ;	Storage Area Flash Write Protection bit
 13186                           ;	WRTSAF = OFF, SAF not write protected
 13187                           ;	Low Voltage Programming Enable bit
 13188                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13189  800A                     	org	32778
 13190  800A  3FFF               	dw	16383
 13191                           
 13192                           ;Config register CONFIG5 @ 0x800B
 13193                           ;	UserNVM Program memory code protection bit
 13194                           ;	CP = OFF, UserNVM code protection disabled
 13195  800B                     	org	32779
 13196  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    27
    Data        11
    BSS         101
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     77      77
    BANK1            80     34      56
    BANK2            80      0      55
    BANK3            80     26      58
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           32      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 32
		 -> i2c1_rx_buffer(BANK2[32]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 20
		 -> main@data(BANK3[20]), 

    S27$4$1	PTR unsigned char  size(1) Largest target is 20
		 -> main@data(BANK3[20]), 

    S27$3$1	PTR unsigned char  size(1) Largest target is 1
		 -> mDataLength(BANK1[1]), 

    S27$3$0	PTR unsigned char  size(1) Largest target is 2
		 -> mData(BANK1[2]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    IOCCF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_MIC_Wake(), 

    IOCCF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), ISR_MIC_Wake(), 

    IOCCF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetTransmitData@data	PTR unsigned char  size(2) Largest target is 2
		 -> main@mnr(BANK3[1]), main@type(BANK3[1]), main@ack(BANK3[1]), mData(BANK1[2]), 

    I2C1_GetCommandData@len	PTR unsigned char  size(1) Largest target is 1
		 -> main@len(BANK3[1]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_GetCommandData@data	PTR unsigned char  size(1) Largest target is 20
		 -> main@data(BANK3[20]), 

    I2C1_GetCommand@cmd	PTR unsigned char  size(1) Largest target is 1
		 -> main@cmd(BANK3[1]), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), SoundLevel_GetSample(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), ADCC_DefaultInterruptHandler(), SoundLevel_GetSample(), 

    SoundLevel_SetThreshold@thresholdData	PTR unsigned char  size(1) Largest target is 20
		 -> main@data(BANK3[20]), 

    SoundLevel_GetData@data	PTR unsigned char  size(1) Largest target is 2
		 -> mData(BANK1[2]), 

    SoundLevel_GetData@length	PTR unsigned char  size(1) Largest target is 1
		 -> mDataLength(BANK1[1]), 

    S27devApi$UpdateThreshold	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> SoundLevel_SetThreshold(), 

    sensorAPI.UpdateThreshold	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> SoundLevel_SetThreshold(), 

    S27devApi$GetData	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> SoundLevel_GetData(), 

    sensorAPI.GetData	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> SoundLevel_GetData(), 

    S27devApi$Loop	PTR FTN()void  size(2) Largest target is 1
		 -> SoundLevel_Loop(), 

    sensorAPI.Loop	PTR FTN()void  size(2) Largest target is 1
		 -> SoundLevel_Loop(), 

    S27devApi$Measure	PTR FTN()void  size(2) Largest target is 1
		 -> SoundLevel_Measure(), 

    sensorAPI.Measure	PTR FTN()void  size(2) Largest target is 1
		 -> SoundLevel_Measure(), 

    S27devApi$Init	PTR FTN()void  size(2) Largest target is 1
		 -> SoundLevel_Init(), 

    sensorAPI.Init	PTR FTN()void  size(2) Largest target is 1
		 -> SoundLevel_Init(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_StatusCallback
    _ADCC_ISR->_SoundLevel_GetSample
    _SoundLevel_GetSample->_ADCC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_SoundLevel_Loop
    _SoundLevel_SetThreshold->_MIC_Mode
    _SoundLevel_Loop->_measure
    _SoundLevel_StartADC->_ADCC_StartConversion
    _SoundLevel_PrepareData->_log10
    _round->___ftmul
    _trunc->___altoft
    ___altoft->___fttol
    ___ftsub->_trunc
    _log10->_log
    _log->_eval_poly
    _eval_poly->___ftmul
    ___ftmul->___ftsub
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    _SoundLevel_Init->_ADCC_SetADIInterruptHandler
    _SoundLevel_Init->_IOCCF6_SetInterruptHandler
    _LED_Init->_LED_Blink
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler
    _SYSTEM_Initialize->_I2C1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _measure->_SoundLevel_PrepareData

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0  109715
                                             32 BANK1      2     2      0
                                              0 BANK3     26    26      0
               _I2C1_CommandReceived
                    _I2C1_GetCommand
                _I2C1_GetCommandData
               _I2C1_SetTransmitData
                 _I2C1_TxBufferEmpty
                  _SYSTEM_Initialize
                 _SoundLevel_GetData *
                    _SoundLevel_Init *
                    _SoundLevel_Loop *
                 _SoundLevel_Measure *
            _SoundLevel_SetThreshold *
                          _toggleInt
 ---------------------------------------------------------------------------------
 (1) _toggleInt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SoundLevel_SetThreshold                              7     5      2     447
                                              1 BANK0      7     5      2
                           _MIC_Mode
 ---------------------------------------------------------------------------------
 (1) _SoundLevel_Measure                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SoundLevel_Loop                                      1     1      0  105495
                                             76 BANK0      1     1      0
                         _EnterSleep
                           _MIC_Mode
                        _generateInt
                            _measure
 ---------------------------------------------------------------------------------
 (2) _measure                                              1     1      0  105440
                                             75 BANK0      1     1      0
                        _AMPS_enable
                           _MIC_Mode
                  _SoundLevel_LedOff
                   _SoundLevel_LedOn
             _SoundLevel_PrepareData
                _SoundLevel_StartADC
 ---------------------------------------------------------------------------------
 (3) _SoundLevel_StartADC                                  0     0      0      55
    _ADCC_EnableContinuousConversion
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADCC_StartConversion                                 1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADCC_EnableContinuousConversion                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SoundLevel_PrepareData                              32    32      0  105275
                                              0 BANK1     32    32      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                              _log10
                              _round
 ---------------------------------------------------------------------------------
 (4) _round                                                6     3      3   24011
                                             53 BANK0      6     3      3
                            ___ftadd
                            ___ftmul (ARG)
                            ___ftsub
                              _trunc
 ---------------------------------------------------------------------------------
 (5) _trunc                                                9     6      3    7212
                                             22 BANK0      9     6      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     923
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___altoft                                             8     4      4    4570
                                             14 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    8503
                                             31 BANK0      6     0      6
                            ___ftadd
                           ___lwtoft (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (4) _log10                                                6     3      3   44795
                                             69 BANK0      6     3      3
                            ___ftdiv (ARG)
                            ___ftmul
                                _log
 ---------------------------------------------------------------------------------
 (5) _log                                                  6     3      3   37801
                                             63 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                6     2      4    1026
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           10     3      7   16140
                                             53 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     696
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             16    10      6    6765
                                             37 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                            ___ftsub (ARG)
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    7892
                                             14 BANK0     13     7      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               6     0      6     944
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    4430
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    4344
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    5763
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    4071
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _MIC_Mode                                             1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _AMPS_enable                                          3     3      0      55
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _generateInt                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EnterSleep                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SoundLevel_Init                                      1     1      0     710
                                              2 BANK0      1     1      0
                    _ADCC_Initialize
        _ADCC_SetADIInterruptHandler
                          _DOUT_Init
         _IOCCF6_SetInterruptHandler
                           _LED_Init
                         _READY_Init
                        _VDDAMP_Init
                       _VDDBIAS_Init
                           _WDT_Init
                      _nWakeMic_Init
                      _powerMic_Init
 ---------------------------------------------------------------------------------
 (2) _powerMic_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nWakeMic_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _WDT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VDDBIAS_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VDDAMP_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _READY_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             0     0      0       0
                          _LED_Blink
                  _SoundLevel_LedOff
 ---------------------------------------------------------------------------------
 (3) _LED_Blink                                            2     2      0       0
                                              0 BANK0      2     2      0
                  _SoundLevel_LedOff
                   _SoundLevel_LedOn
 ---------------------------------------------------------------------------------
 (3) _SoundLevel_LedOn                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SoundLevel_LedOff                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOCCF6_SetInterruptHandler                           2     0      2     164
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DOUT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     273
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          2     0      2     273
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SoundLevel_GetData                                   3     1      2     337
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0     110
                                              1 BANK0      1     1      0
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_TxBufferEmpty                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C1_SetTransmitData                                 6     3      3    1030
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _I2C1_GetCommandData                                  3     2      1     262
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _I2C1_GetCommand                                      2     2      0      94
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_CommandReceived                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      46
                           _ADCC_ISR
                           _I2C1_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCCF0_ISR
                         _IOCCF2_ISR
                         _IOCCF4_ISR
                         _IOCCF6_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCCF6_ISR                                          0     0      0       0
                   Absolute function *
                       _ISR_MIC_Wake *
 ---------------------------------------------------------------------------------
 (12) _ISR_MIC_Wake                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF4_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            2     2      0      46
                                              2 COMMON     2     2      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (11) _I2C1_StatusCallback                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
               _SoundLevel_GetSample *
 ---------------------------------------------------------------------------------
 (11) _SoundLevel_GetSample                                4     4      0       0
                                              2 COMMON     4     4      0
           _ADCC_GetConversionResult
                 _SoundLevel_StopADC
 ---------------------------------------------------------------------------------
 (12) _SoundLevel_StopADC                                  0     0      0       0
   _ADCC_DisableContinuousConversion
                _ADCC_StopConversion
 ---------------------------------------------------------------------------------
 (13) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_DisableContinuousConversion                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_GetConversionResult                            2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C1_CommandReceived
   _I2C1_GetCommand
   _I2C1_GetCommandData
   _I2C1_SetTransmitData
   _I2C1_TxBufferEmpty
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PMD_Initialize
   _SoundLevel_GetData *
   _SoundLevel_Init *
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _ADCC_SetADIInterruptHandler
     _DOUT_Init
     _IOCCF6_SetInterruptHandler
     _LED_Init
       _LED_Blink
         _SoundLevel_LedOff
         _SoundLevel_LedOn
       _SoundLevel_LedOff
     _READY_Init
     _VDDAMP_Init
     _VDDBIAS_Init
     _WDT_Init
     _nWakeMic_Init
     _powerMic_Init
   _SoundLevel_Loop *
     _EnterSleep
     _MIC_Mode
     _generateInt
     _measure
       _AMPS_enable
       _MIC_Mode
       _SoundLevel_LedOff
       _SoundLevel_LedOn
       _SoundLevel_PrepareData
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _trunc (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___fttol
               _frexp
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___fttol
             _frexp
         ___fttol
         ___lwtoft
           ___ftpack
         _log10
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftsub (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _trunc (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___fttol
                 _frexp
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftsub (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _trunc (ARG)
                   ___altoft
                     ___ftpack
                     ___fttol (ARG)
                   ___fttol
                   _frexp
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftsub (ARG)
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _trunc (ARG)
                     ___altoft
                       ___ftpack
                       ___fttol (ARG)
                     ___fttol
                     _frexp
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
             _frexp
         _round
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftsub (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _trunc (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___fttol
                 _frexp
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _trunc (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___fttol
               _frexp
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___fttol
             _frexp
       _SoundLevel_StartADC
         _ADCC_EnableContinuousConversion
         _ADCC_StartConversion
   _SoundLevel_Measure *
   _SoundLevel_SetThreshold *
     _MIC_Mode
   _toggleInt *

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ISR
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _SoundLevel_GetSample *
       _ADCC_GetConversionResult
       _SoundLevel_StopADC
         _ADCC_DisableContinuousConversion
         _ADCC_StopConversion
   _I2C1_ISR
     _I2C1_StatusCallback
   _PIN_MANAGER_IOC
     _IOCCF0_ISR
     _IOCCF2_ISR
     _IOCCF4_ISR
     _IOCCF6_ISR
       Absolute function(Fake) *
       _ISR_MIC_Wake *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     102       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      38       8       70.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      37      10       68.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     1A      3A      12       72.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              20      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     102      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 28 13:43:57 2020

                               ___altoft@exp 0034                                ___altoft@sign 0035  
                                         l40 04C5                                           l44 0432  
                                         l45 043F                                           l62 098D  
                                         l64 0999                          ___wmul@multiplicand 0022  
               __size_of_I2C1_GetCommandData 0021                                 ___ftadd@exp1 003A  
                               ___ftadd@exp2 0039                                 ___ftadd@sign 0038  
                                        l200 09C9                                          l212 08DB  
                                        l204 09CB                                          l221 08E5  
                                        l214 08DD                                          l230 08F8  
                                        l223 08E7                                          l311 0913  
                                        l207 09CD                                          l216 08DE  
                                        l232 08F9                                          l241 0963  
                                        l209 09D7                                          l305 0577  
                                        l321 0D45                                          l314 0A1B  
                                        l226 08F4                                          l219 08E3  
                                        l171 095D                                          l243 0965  
                                        l235 095E                                          l228 08F6  
                                        l180 07FA                                          l260 0AD4  
                                        l252 0AC4                                          l340 0923  
                                        l308 0589                                          l245 0967  
                                        l237 0960                                          l333 02BB  
                                        l182 07FC                                          l262 0AD5  
                                        l254 0AC5                                          l351 08D2  
                                        l167 0953                                          l247 0968  
                                        l239 0962                                          l191 0902  
                                        l271 0ADA                                          l319 0D36  
                                        l184 07FE                                          l264 0AD6  
                                        l256 0AC6                            ??_I2C1_GetCommand 0020  
                                        l353 08D4                                          l177 0F05  
                                        l169 0955                                          l193 0904  
                                        l361 099A                                          l273 0AE4  
                                        l346 08D5                                          l186 07FF  
                                        l282 08E2                                          l195 0905  
                                        l267 0AD8                                          l371 0C0B  
                                        l620 0BAD                                          l348 08D7  
                                        l276 08FF                                          l189 0900  
                                        l365 09A7                                          l269 0AD9  
                                        l279 0E34                                          l535 08DA  
                                        l295 0520                                          l641 0974  
                                        l289 04EF                                          l554 092C  
                                        l466 0B31                                          l298 0570  
                                        l635 0003                                          l644 0A7D  
                                        l652 0B83                                          l469 093E  
                                        l638 091B                                          l832 0AC0  
                                        l737 0935                                          l835 08F3  
                                        l838 09EA                                          l990 0A27  
                                        l992 0A3B              __size_of_SoundLevel_PrepareData 0242  
                                        _log 064B                                          mcp0 0A73  
                    __size_of_PMD_Initialize 0013                                          wreg 0009  
                      ?_SoundLevel_GetSample 0070                                  ?_READY_Init 0070  
               ?_ADCC_SetADIInterruptHandler 0020           __end_of_IOCCF6_SetInterruptHandler 0936  
                 _IOCCF6_SetInterruptHandler 092D                                 ___ftdiv@cntr 0032  
                           __end_of_I2C1_ISR 0CC2                                 ___ftdiv@sign 0037  
                                       l1210 0F62                                         l1202 0F3F  
                                       l1211 0F7A                                         l1222 0306  
                                       l1223 0310                                         l1224 0315  
                                       l1209 0F58                                         l1233 037E  
                                       l1250 07B1                                         l1219 03DB  
                                       l1413 0A00                                         l1093 0D03  
                                       l1192 0B09                                         l1265 064A  
                                       l1425 06FF                                         l1282 0A9E  
                                       l1259 0C44                                         l1443 0C82  
                                       l1437 0E97                                         l1429 0B59  
                                       l1293 0FE2                                         l1198 0F7A  
                                       l1286 0FFF                                         l1464 0D8C  
                                       l1458 07F9                                         l6001 053D  
                                       l6011 054F                                         l6003 0543  
                                       l6101 0B71                                         l5301 0A23  
                                       l6021 0560                                         l6013 0552  
                                       l6005 0545                         _ADCC_StartConversion 0936  
                                       l6103 0B78                                         l5311 02BC  
                                       l5303 0A2C                                         l6031 0582  
                                       l6023 0569                                         l6015 0555  
                                       l6007 0548                                         l6111 03E6  
                                       l6105 0B7E                                         l5321 02F1  
                                       l5313 02DA                                         l5401 05EC  
                                       l5305 0A31                                         l6033 0586  
                                       l6025 056D                                         l6017 0557  
                                       l6009 054A                                         l6041 0D0A  
                                       l6121 0421                                         l6113 03F0  
                                       l6107 0B82                                         l5331 030F  
                                       l5323 02F6                                         l5315 02E0  
                                       l5411 0606                                         l5403 05F2  
                                       l5307 0A37                                         l6027 0575  
                                       l6019 055C                                         l6043 0D13  
                                       l6131 0457                                         l6123 0427  
                                       l6115 0406                                         l6037 0A01  
                                       l5341 0331                                         l5333 0314  
                                       l5325 02FC                                         l5317 02EA  
                                       l5421 0620                                         l5413 060C  
                                       l5405 05F6                                         l6029 0579  
                                       l6045 0D30                                         l6141 047C  
                                       l6133 045E                                         l6125 0434  
                                       l6117 0414                                         l6109 03DC  
                                       l5351 0357                                         l5343 0337  
                                       l5335 0316                                         l5327 0307  
                                       l5423 0626                                         l5415 0612  
                                       l5407 05FA                                         l5431 0CC2  
                                       l5511 0FD9                                         l5503 0FC2  
                                       l6047 0D38                                         l6039 0D04  
                                       l6143 0485                                         l6135 0467  
                                       l6127 0441                                         l6151 04AD  
                                       l6119 041C                                         l5281 0F39  
                                       l5273 0F1A                                         l5265 0F06  
                                       l5361 0382                                         l5353 035F  
                                       l5345 0340                                         l5337 031C  
                                       l5329 030B                                         l5425 062C  
                                       l5417 0616                                         l5409 0600  
                                       l5521 0C45                                         l5601 0B43  
                                       l5441 0CE5                                         l5433 0CC4  
                                       l5513 0FE7                                         l5505 0FD2  
                                       l6049 0D41                                         l6145 048F  
                                       l6137 046F                                         l6129 044C  
                                       l5291 0F64                                         l5283 0F46  
                                       l5275 0F24                                         l5267 0F0C  
                                       l5451 0AEB                                         l5371 03AD  
                                       l5363 0392                                         l5355 0365  
                                       l5347 034A                                         l5339 0329  
                                       l5427 0632                                         l5419 061A  
                                       l5531 0C74                                         l5523 0C4D  
                                       l5443 0CEB                                         l5435 0CC8  
                                       l5515 0FEC                                         l6147 0496  
                                       l6139 0478                                         l5293 0F74  
                                       l5285 0F4E                                         l5277 0F2B  
                                       l5269 0F13                                         l5621 0700  
                                       l5453 0AF0                                         l5461 0C11  
                                       l5373 03B1                                         l5365 0396  
                                       l5357 036E                                         l5349 0351  
                                       l5381 058A                                         l5541 0E35  
                                       l5533 0C7D                                         l5525 0C53  
                                       l5437 0CCC                                         l5517 0FF7  
                                       l5605 07B2                                         l5701 007A  
                                       l5613 08D8                                         l6095 0B5A  
                                       l5295 0F79                                         l5287 0F52  
                                       l5279 0F2F                                         l5623 0712  
                                       l5455 0AF2                                         l5447 0AE5  
                                       l5471 0C33                                         l5463 0C1E  
                                       l5375 03C1                                         l5367 03A6  
                                       l5359 0378                                         l5383 059C  
                                       l5543 0E4F                                         l5535 0C81  
                                       l5551 0A7E                                         l5439 0CDA  
                                       l5607 07D3                                         l5711 00C6  
                                       l5703 0089                                         l5615 0938  
                                       l6097 0B5B                                         l5289 0F5C  
                                       l5641 075C                                         l5633 0731  
                                       l5449 0AE7                                         l5473 0C41  
                                       l5465 0C22                                         l5377 03C3  
                                       l5369 03A7                                         l5393 05BB  
                                       l5297 0A1C                                         l5545 0E8B  
                                       l5537 0C82                                         l5529 0C5A  
                                       l5561 065F                                         l5553 0A86  
                                       l5481 0F8D                                         l5609 07E9  
                                       l5713 00CA                                         l5617 093B  
                                       l5801 0BFB                                         l6099 0B6D  
                                       l5811 09A5                                         l5651 0786  
                                       l5643 0760                                         l5635 0737  
                                       l5627 0719                                         l5475 0C43  
                                       l5467 0C2F                                         l5459 0C0C  
                                       l5395 05E4                                         l5387 05A3  
                                       l5299 0A1F                                         l5547 0E91  
                                       l5571 0681                                         l5555 0A88  
                                       l5491 0FAD                                         l5731 019C  
                                       l5723 00FB                                         l5715 00D7  
                                       l5619 093D                                         l5803 0C01  
                                       l5901 0973                                         l5821 0B9B  
                                       l5813 090D                                         l5653 078C  
                                       l5645 0767                                         l5637 073C  
                                       l5629 072A                                         l5469 0C31  
                                       l5397 05E5                                         l5389 05B4  
                                       l5573 06B5                                         l5565 066C  
                                       l5493 0FB4                                         l5485 0F96  
                                       l5581 0D46                                         l5741 023E  
                                       l5733 01A9                                         l5725 014C  
                                       l5717 00F9                                         l5709 008B  
                                       l5805 0C05                                         ?_log 005F  
                                       l5911 0A74                                         l5903 0914  
                                       l5831 0BA7                                         l5823 0B9D  
                                       l5815 0B86                                         l5671 0EA7  
                                       l5655 078D                                         l5647 0772  
                                       l5639 074C                                         l5663 09EB  
                                       l5399 05E6                                         l5575 06B9  
                                       l5567 0674                                         l5559 064B  
                                       l5495 0FB6                                         l5487 0FA6  
                                       l5479 0F7B                                         l5591 0D69  
                                       l5583 0D54                                         l5751 02A4  
                                       l5743 0258                                         l5735 01E9  
                                       l5727 0172                                         l5807 0C08  
                                       l5833 0BA9                                         l5825 0B9F  
                                       l5817 0B8E                                         l5841 09D8  
                                       l5681 0EE4                                         l5673 0EB6  
                                       l5921 0DF3                                         l5913 0DDF  
                                       l5809 099C                                         l5657 0793  
                                       l5649 0778                                         l5577 06D1  
                                       l5497 0FBA                                         l5489 0FA7  
                                       l5593 0D6A                                         l5585 0D59  
                                       l5753 02A8                                         l5745 025F  
                                       l5737 0214                                         l5729 0198  
                                       l5761 091F                                         l5835 0BAA  
                                       l5827 0BA0                                         l5819 0B99  
                                       l5843 09DB                                         l5851 0AA9  
                                       l5771 0B0A                                         l5683 0EE7  
                                       l5675 0EB9                                         l5667 0E98  
                                       l5763 0957                                         l5931 0E16  
                                       l5923 0E08                                         l5915 0DE2  
                                       l5691 09CF                                         l5659 0799  
                                       l5595 0D86                                         l5755 02B5  
                                       l5747 028A                                         l5739 0237  
                                       l5907 098D                                         l5909 0A5F  
                                       l5837 0BAB                                         l5829 0BA3  
                                       l5845 08EE                                         l5861 0AB0  
                                       l5853 0AAB                                         l5781 0B28  
                                       l5773 0B0C                                         l5685 0EF6  
                                       l5677 0EC8                                         l5669 0E9B  
                                       l5765 095A                                         l5933 0E1F  
                                       l5925 0E11                                         l5917 0DE4  
                                       l5693 0AC3                                         l5589 0D60  
                                       l5757 02B9                                         l5749 02A0  
                                       l5941 08DF                                         l5839 0BAC  
                                       l5871 0AB7                                         l5863 0AB1  
                                       l5855 0AAC                                         l5847 0AA1  
                                       l5783 0B29                                         l5775 0B22  
                                       l5687 0F02                                         l5679 0ED5  
                                       l5767 08FA                                         l5935 0E26  
                                       l5927 0E13                                         l5919 0DF0  
                                       l5695 0AC7                                         l5599 0B32  
                                       l5759 091C                                         l5791 0BE9  
                                       l5951 04DB                                         l5943 04C8  
                                       l5873 0AB9                                         l5865 0AB2  
                                       l5857 0AAD                                         l5849 0AA7  
                                       l5777 0B24                                         l5769 092D  
                                       l5937 0E29                                         l5929 0E15  
                                       l5697 0ADC                                         l5689 09C8  
                                       l5793 0BED                                         l5785 0BD9  
                                       l5953 04DE                                         l5961 04EA  
                                       l5945 04CE                                         l5875 0ABA  
                                       l5867 0AB3                                         l5859 0AAE  
                                       l5699 0924                                         l5779 0B26  
                                       l5939 0E31                                         l5795 0BF0  
                                       l5787 0BDC                                         l5971 0502  
                                       l5963 04F1                                         l5955 04E0  
                                       l5947 04D3                                         l5877 0ABE  
                                       l5869 0AB5                                         l5797 0BF2  
                                       l5789 0BE0                                         l5973 0505  
                                       l5965 04FA                                         l5957 04E3  
                                       l5949 04D9                                         l5981 0515  
                                       l5895 0002                                         l5879 0ABF  
                                       l5799 0BF8                                         l5991 0531  
                                       l5983 051B                                         l5975 0507  
                                       l5967 04FD                                         l5959 04E7  
                                       l5993 0533                                         l5985 0522  
                                       l5977 0510                                         l5969 0500  
                                       l5899 096B                                         l5995 0536  
                                       l5987 052B                                         l5997 053A  
                                       l5989 052E                                         _LATA 0018  
                                       _LATB 0019                                         _LATC 001A  
                                       u5010 0F2A                                         u5011 0F29  
                                       u5100 0A23                                         u5005 0F1F  
                                       u5101 0A22                                         u5030 0F45  
                                       u5031 0F44                                         u5200 030F  
                                       u6000 0543                                         u5025 0F3A  
                                       u5201 030E                                         u6001 0542  
                                       u5050 0F52                                         u5210 0314  
                                       u5130 0A37                                         u6010 054F  
                                       u5051 0F51                                         u5211 0313  
                                       u5131 0A36                                         u5115 0A28  
                                       u6011 054E                                         u6100 0B7E  
                                       u5060 0F58                                         u5300 0365  
                                       u5220 0329                                         u5140 02DA  
                                       u6020 0575                                         u6101 0B7D  
                                       u5061 0F57                                         u5045 0F49  
                                       u5301 0364                                         u5221 0328  
                                       u5141 02D9                                         u5125 0A2D  
                                       u6021 0574                                         u5070 0F5C  
                                       u5310 036D                                         u5150 02E0  
                                       u6030 0D0A                                         u6110 041C  
                                       u5071 0F5B                                         u5311 036C  
                                       u5151 02DF                                         u6031 0D09  
                                       u6111 041B                                         u5080 0F6C  
                                       u5240 0337                                         u5160 02EA  
                                       u5400 05DA                                         u6040 0D36  
                                       u6120 046F                                         u5241 0336  
                                       u5161 02E9                                         u6041 0D35  
                                       u6121 046E                                         u5090 0F79  
                                       u5330 037E                                         u5250 033F  
                                       u5170 02F6                                         u5410 05FA  
                                       u6130 0477                                         u5091 0F78  
                                       u5331 037D                                         u5251 033E  
                                       u5235 032A                                         u5171 02F5  
                                       u5411 05F9                                         u6131 0476  
                                       u5340 0382                                         u5180 02FC  
                                       u6140 0496                                         _PMD0 0796  
                                       u5085 0F69                                         u5341 0381  
                                       u5325 036F                                         u5181 02FB  
                                       u5405 05D7                                         u6141 0495  
                                       _PMD1 0797                                         u5350 0396  
                                       u5270 0350                                         u5190 0306  
                                       u5510 0CEB                                         _PMD2 0798  
                                       u5351 0395                                         u5271 034F  
                                       u5191 0305                                         u5511 0CEA  
                                       u6207 0526                                         _PMD3 0799  
                                       u5520 0AEB                                         u5360 03B1  
                                       u5280 0357                                         u5440 0612  
                                       _PMD4 079A                                         u5521 0AEA  
                                       u5361 03B0                                         u5281 0356  
                                       u5265 0341                                         u5441 0611  
                                       u5425 0601                                         u5505 0CDB  
                                       u6217 0564                                         _PMD5 079B  
                                       u6090 0B78                                         u5530 0C11  
                                       u5450 061A                                         u5370 059C  
                                       u5610 0FD1                                         _PMD6 079C  
                                       u6091 0B77                                         u6307 0EB0  
                                       u5531 0C10                                         u5451 0619  
                                       u5435 0607                                         u5371 059B  
                                       u5611 0FD0                                         u6227 057D  
                                       _PMD7 079D                                         u5540 0C22  
                                       u5380 05B4                                         u5700 0674  
                                       u5620 0FD8                                         u6317 0EBF  
                                       u5541 0C21                                         u5381 05B3  
                                       u5701 0673                                         u5621 0FD7  
                                       u5605 0FC3                                         u6237 0BE4  
                                       u6157 0462                                         u5550 0C41  
                                       u5390 05CA                                         u5710 0D59  
                                       u6327 0ECE                                         u6247 0ACD  
                                       u5551 0C40                                         u5295 0358  
                                       u5711 0D58                                         u6167 0480  
                                       u5800 0799                                         u5480 0632  
                                       u5640 0FE7                                         u5560 0F8D  
                                       u5720 0D69                                         u6337 0EDE  
                                       u6257 09A0                                         u5801 0798  
                                       u5481 0631                                         u5465 0621  
                                       u5641 0FE6                                         u5561 0F8C  
                                       u5721 0D68                                         u6177 0D3C  
                                       u5730 0712                                         u5490 0CCC  
                                       u5650 0FEC                                         u5570 0FA0  
                                       u5810 00D7                                         u6347 0EED  
                                       u6267 0DEB                                         u5731 0711  
                                       u5555 0C3D                                         u5475 0627  
                                       u5395 05C7                                         u5491 0CCB  
                                       u5651 0FEB                                         u5635 0FDA  
                                       u5811 00D6                                         u6187 04F5  
                                       u5900 091B                                         u5740 072A  
                                       u5660 0C4D                                         u5580 0FBA  
                                       u5820 01A9                                         u6357 0EFC  
                                       u6277 0DF7                                         u5741 0729  
                                       u5661 0C4C                                         u5581 0FB9  
                                       u5821 01A8                                         u6197 050B  
                                       u5750 0746                                         u5670 0E91  
                                       u5590 0FC1                                         u5830 01E9  
                                       u5910 0997                                         u6287 0E0C  
                                       u5671 0E90                                         u5591 0FC0  
                                       u5575 0F9D                                         u5831 01E8  
                                       u5815 00D3                                         u5911 0994  
                                       u5760 0756                                         u5680 0A86  
                                       u5840 0258                                         u6297 0EA1  
                                       u5681 0A85                                         u5841 0257  
                                       u5825 01A5                                         u5690 065F  
                                       u5850 02B5                                         u5755 0743  
                                       u5691 065E                                         u5851 02B4  
                                       u4980 0F0C                                         u5780 0786  
                                       u5860 0C01                                         u5940 04CE  
                                       u5924 0999                                         u4981 0F0B  
                                       u5781 0785                                         u5765 0753  
                                       u5861 0C00                                         u5941 04CD  
                                       u4990 0F13                                         u5950 04D3  
                                       u4991 0F12                                         u5775 0773  
                                       u5855 02B1                                         u5951 04D2  
                                       u5960 04D9                                         u5785 0782  
                                       u5961 04D8                                         u5890 091A  
                                       u5970 04EF                                         u5891 0918  
                                       u5795 078E                                         u5971 04EE  
                                       u5980 051B                                         u5981 051A  
                                       u5990 0520                                         u5991 051F  
           SoundLevel_PrepareData@dataToSend 00B1                             __end_of_ADCC_ISR 09B7  
                                       _dLen 00D0                                         _main 03DC  
                               ___ftpack@arg 0020                                 ___ftpack@exp 0023  
                                       mcp0b 0A64                                         mcp0z 0A74  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                    SoundLevel_PrepareData@i 00B9                                         btemp 007E  
                                main@retries 01D4                                         log@x 005F  
                         __size_of_LED_Blink 006E                                         start 0031  
                         __size_of_DOUT_Init 0005                                 ___ftmul@cntr 0053  
                               ___ftmul@sign 0054                          _I2C1_StatusCallback 0D8D  
                               ___fttol@exp1 002D                                        ??_log 0062  
                               ___fttol@lval 0029                             __end_of_LED_Init 095E  
             __size_of_OSCILLATOR_Initialize 0006                __end_of_OSCILLATOR_Initialize 08F4  
                        __size_of_IOCCF0_ISR 0003                          __size_of_IOCCF2_ISR 0003  
                        __size_of_IOCCF4_ISR 0003                          __size_of_IOCCF6_ISR 000F  
                                      _ADCAP 010E                                        _ADACT 0117  
                                      ?_main 0070                                        _ADCLK 0118  
                                      _ADCNT 0099                                        _ADPCH 009F  
                                      _ADREF 0116                             __end_of_MIC_Mode 09D8  
                            __end_of___ftadd 03DC                                        _ADRPT 009A  
                            __end_of___ftdiv 07B2                              __end_of___ftmul 064B  
                            __end_of___ftsub 0A9F                              __end_of___fttol 1000  
                                      i1l343 090C                                        i1l337 0BD8  
                                      i1l700 0A5C                                        i1l551 09B6  
                                      i1l623 0CA3                                        i1l703 08C9  
                                      i1l375 0948                                        i1l632 0CC1  
                                      i1l704 08CB                                        i1l713 08CC  
                                      i1l538 08C5                                        i1l626 0CBB  
                                      i1l714 08CE                                        i1l475 08ED  
                                      i1l723 08CF                                        i1l484 08C8  
                                      i1l724 08D1                                        i1l557 08C1  
                                      i1l661 0D8F                                        i1l629 0CB6  
                                      i1l734 09C5                                        i1l675 0DDE  
                                      i1l772 002F                                        i1l773 002F  
                                      i1l765 0013                                        i1l768 0023  
                                      u593m0 0A6E                                        u593m1 0A74  
                                      _TRISA 0012                                        _TRISB 0013  
                                      _TRISC 0014                             ?_SoundLevel_Init 0070  
                           ?_SoundLevel_Loop 0070                            ??_I2C1_Initialize 0020  
                       ?_I2C1_StatusCallback 0070                                        _mData 00D4  
                              ___awtoft@sign 002D                                        _log10 0B32  
                    __end_of_PIN_MANAGER_IOC 0A5D                              __end_of_measure 0C0C  
                                      _frexp 0C45                                        _errno 0123  
                      ?_ADCC_StartConversion 0070                                        _rxLen 0078  
                                      _txCnt 0076                                ___ftpack@sign 0024  
                                      _txLen 0077                                        _round 07B2  
                                      _trunc 0D46                                 ?_VDDAMP_Init 0070  
                           __end_of_WDT_Init 0900                                        pclath 000A  
                                      status 0003                                   _EnterSleep 090D  
                                      wtemp0 007E                              ??_powerMic_Init 0020  
                __size_of_SoundLevel_GetData 001B                       _SoundLevel_PrepareData 007A  
                __size_of_SoundLevel_Measure 0004                              __initialization 0033  
                                log@exponent 0063                          __size_of_READY_Init 0004  
                               __end_of_main 04C8                        __end_of_nWakeMic_Init 0906  
                __size_of_SoundLevel_StopADC 0007                  ?_INTERRUPT_InterruptManager 0070  
                                     ??_main 00C0                                ___fttol@sign1 0028  
               __end_of_I2C1_SetTransmitData 0B84                       ??_SoundLevel_GetSample 0072  
                          __end_of_LED_Blink 0F06                      _IOCCF2_InterruptHandler 0127  
                          __end_of_DOUT_Init 08E8                      _SoundLevel_SetThreshold 0D04  
                      ??_I2C1_StatusCallback 0070                         __size_of_AMPS_enable 0024  
                         _I2C1_TxBufferEmpty 0914                                       _ADACCH 0097  
                                     ?_log10 0065                                       _ADACCL 0096  
                                     _ADACCU 0098                                       _ADACQH 010D  
                                     _ADACQL 010C                                       _ADCON0 0111  
                                     _ADCON1 0112                                       _ADCON2 0113  
                                     _ADCON3 0114                                       _ADERRH 0091  
                                     _ADERRL 0090                                       ?_frexp 0020  
                           __end_of___altoft 0D04                                       _ADLTHH 008D  
                                     _ADLTHL 008C                                       _ADRESH 009E  
                                     _ADRESL 009D                                       _ADPREH 0110  
                                     _ADPREL 010F                                       _ADSTAT 0115  
                                     _ADUTHH 008F                                       _ADUTHL 008E  
                           __end_of___awtoft 0B0A                                       _ANSELA 1F38  
                                     _ANSELB 1F43                                       _ANSELC 1F4E  
                           __end_of___ftpack 0F7B                                       ?_round 0055  
                                     ?_trunc 0036                                       _RB5PPS 1F1D  
                                     _RB7PPS 1F1F                                       i1l3201 08CF  
                                     i1l3131 0BAE                                       i1l3203 09B7  
                                     i1l3133 0BC6                                       i1l3205 09BE  
                                     i1l3063 08E8                                       i1l3135 0BCA  
                                     i1l3207 09C3                                       i1l3137 0BD3  
                                     i1l3073 093F                                       i1l3067 0906  
                                     i1l3139 0BD6                                       i1l3171 0D97  
                                     i1l3075 0940                                       i1l3421 09AA  
                                     i1l3173 0D98                                       i1l3077 0946  
                                     i1l3423 09B1                                       i1l3191 0DC8  
                                     i1l3183 0DAF                                       i1l3175 0D9B  
                                     i1l3167 0D8E                                       i1l3431 0C86  
                                     i1l3193 0DCD                                       i1l3177 0DA1  
                                     i1l3185 0DB8                                       i1l3169 0D93  
                                     i1l3441 0C9C                                       i1l3433 0C8B  
                                     i1l3425 0C83                                       i1l3521 000B  
                                     i1l3419 09A8                                       i1l3187 0DBA  
                                     i1l3179 0DAA                                       i1l3195 0DD0  
                                     i1l3451 0CB4                                       i1l3443 0CA0  
                                     i1l3435 0C8F                                       i1l3427 0C83  
                                     i1l3531 0027                                       i1l3523 000F  
                                     i1l3189 0DC0                                       i1l3445 0CA7  
                                     i1l3437 0C93                                       i1l3429 0C85  
                                     i1l3197 08C9                                       i1l3461 0A4C  
                                     i1l3453 0A3C                                       i1l3533 002B  
                                     i1l3525 0017                                       i1l3447 0CAC  
                                     i1l3439 0C97                                       i1l3199 08CC  
                                     i1l3463 0A51                                       i1l3455 0A41  
                                     i1l3527 001B                                       i1l3519 0006  
                                     i1l2921 08C6                                       i1l3449 0CB0  
                                     i1l3465 0A54                                       i1l3457 0A44  
                                     i1l3529 001F                                       i1l2923 08C3  
                                     i1l3467 0A59                                       i1l3459 0A49  
                                     u230_20 09BE                                       u230_21 09BD  
                                     u225_20 0946                                       u225_21 0945  
                                     u250_20 0C8F                                       u250_21 0C8E  
                                     u227_20 0BD3                                       u251_20 0C93  
                                     u227_21 0BD2                                       u251_21 0C92  
                                     u228_20 0DA1                                       u252_20 0C97  
                                     u228_21 0DA0                                       u252_21 0C96  
                                     u229_20 0DC0                                       u253_20 0CA7  
                                     u229_21 0DBF                                       u253_21 0CA6  
                                     u254_20 0CBB                                       u254_21 0CBA  
                                     u255_20 0A41                                       u263_20 000B  
                                     u255_21 0A40                                       u263_21 000A  
                                     u256_20 0A49                                       u264_20 000F  
                                     u256_21 0A48                                       u264_21 000E  
                                     u249_20 09B1                                       u257_20 0A51  
                                     u265_20 0017                                       u249_21 09B0  
                                     u257_21 0A50                                       u265_21 0016  
                                     u258_20 0A59                                       u266_20 001B  
                                     u258_21 0A58                                       u266_21 001A  
                           __end_of___lwtoft 0A01                                       u267_20 001F  
                                     u267_21 001E                                       u268_20 0027  
                                     u268_21 0026                                       u269_20 002B  
                                     u269_21 002A                          ?_I2C1_TxBufferEmpty 0070  
                                     _OSCFRQ 0893                            ?_SoundLevel_LedOn 0070  
                 ??_ADCC_GetConversionResult 0072                         __size_of_generateInt 000E  
                         ??_SoundLevel_LedOn 0020                                ?_VDDBIAS_Init 0070  
       __size_of_ADCC_SetADIInterruptHandler 0009                                       ___ftge 0C0C  
                                     ___wmul 0A1C                                    ??___ftadd 0034  
                                  ??___ftdiv 002E                                    ??___ftmul 004B  
                                  ??___ftsub 0045                                    ??___fttol 0024  
                 SoundLevel_PrepareData@mean 00BD                                    ?_I2C1_ISR 0070  
                       ??_I2C1_TxBufferEmpty 0020                                       log10@x 0065  
                                  ?_ADCC_ISR 0070                        ___ftmul@f3_as_product 0050  
                            _ADCC_Initialize 0B0A                                    ??_measure 006B  
                             _PMD_Initialize 09D8                                 __pdataCOMMON 007B  
                        _ADCC_StopConversion 08C6                       ??_ADCC_StartConversion 0020  
                                     round@f 0058                                       round@x 0055  
 IOCCF6_SetInterruptHandler@InterruptHandler 0020  ADCC_SetADIInterruptHandler@InterruptHandler 0020  
                           ?_PIN_MANAGER_IOC 0070                                       trunc@i 003A  
                                     trunc@x 0036                                 ??_IOCCF0_ISR 0070  
                               ??_IOCCF2_ISR 0070                                 ??_IOCCF4_ISR 0070  
                               ??_IOCCF6_ISR 0070                            _SYSTEM_Initialize 0A9F  
                           __end_oflog@coeff 101B                 __end_of_I2C1_CommandReceived 0004  
                        _I2C1_GetCommandData 0A5D                      __end_of__initialization 0076  
                                 ___altoft@c 002E                                  ?_EnterSleep 0070  
              SoundLevel_SetThreshold@metric 0021                                   ___ftadd@f1 002E  
                                 ___ftadd@f2 0031                                    ?_LED_Init 0070  
                                 ___ftge@ff1 0020                                   ___ftge@ff2 0023  
                         ?_SYSTEM_Initialize 0070                                 eval_poly@res 005C  
                                 ___ftdiv@f1 002B                                   ___ftdiv@f2 0028  
                                 ___ftdiv@f3 0034                                    ?_MIC_Mode 0070  
                             ??_VDDBIAS_Init 0020                                ?_ISR_MIC_Wake 0070  
                                 ___awtoft@c 0028                         ?_ADCC_StopConversion 0070  
                                 ___ftmul@f1 0045                                   ___ftmul@f2 0048  
                            _I2C1_GetCommand 0969                               _i2c1_rx_buffer 012B  
                                 ___ftsub@f1 0042                                   ___ftsub@f2 003F  
                                 ___fttol@f1 0020                               __pcstackCOMMON 0070  
                               __pidataBANK2 0949                          ??_SYSTEM_Initialize 0021  
                              __end_of_log10 0B5A                               _i2c1_tx_buffer 01A0  
                              __end_of_frexp 0C83                                __end_of_round 07FA  
                                 ??_I2C1_ISR 0072                                __end_of_trunc 0D8D  
                       ?_I2C1_GetCommandData 0020                       __end_of_PMD_Initialize 09EB  
                     I2C1_GetCommandData@len 0020                                    ?_WDT_Init 0070  
                                 ___lwtoft@c 0028                 __size_of_SoundLevel_StartADC 0008  
                         __end_of_IOCCF0_ISR 08CC                                   ??_ADCC_ISR 0076  
                         __end_of_IOCCF2_ISR 08CF                           __end_of_IOCCF4_ISR 08D2  
                  ??_SoundLevel_SetThreshold 0023                           __end_of_IOCCF6_ISR 09C6  
                               ??_READY_Init 0020                  ADCC_StartConversion@channel 0020  
                                    ??_log10 0068                  ?_IOCCF6_SetInterruptHandler 0020  
                                    ??_frexp 0024                    __end_of_SYSTEM_Initialize 0AC1  
                                    ??_round 0058                                      ??_trunc 0039  
                                 _log10$2653 0068                                   __pbssBANK1 00C2  
                                 __pbssBANK2 0120                                   __pbssBANK3 01A0  
                         __size_of_eval_poly 0063                                   ??_LED_Init 0022  
                       __size_of_VDDAMP_Init 0006                               ??_ISR_MIC_Wake 0070  
                                 ??_MIC_Mode 0020                         _I2C1_SetTransmitData 0B5A  
                      ??_ADCC_StopConversion 0070                                   __pmaintext 03DC  
                                    ?___ftge 0020                                      ?___wmul 0020  
                         __end_of_READY_Init 08DF                      __end_of_ADCC_Initialize 0B32  
                                 __pintentry 0004                              _I2C1_Initialize 0B84  
                                    _ADFLTRH 0095                                      _ADFLTRL 0094  
                      ??_I2C1_GetCommandData 0021                                    ?___altoft 002E  
                                    _ADPREVH 009C                                      _ADPREVL 009B  
                                  ?___awtoft 0028                                    ?___ftpack 0020  
                                    _ADSTPTH 0093                                      _ADSTPTL 0092  
                                 ??_WDT_Init 0020                              ?_PMD_Initialize 0070  
                                  ?___lwtoft 0028                          __size_of_EnterSleep 0007  
               I2C1_Initialize@slave_address 0020            I2C1_StatusCallback@slaveWriteType 00CD  
                                    _OSCCON1 088D                           __size_of_toggleInt 000D  
                                    _SSP1ADD 018D                                      _WDTCON0 080C  
                                    _SSP1BUF 018C                                      _WDTCON1 080D  
                          _SoundLevel_LedOff 08D2                                      _SSP1MSK 018E  
                    ?_SoundLevel_PrepareData 0070                           ?_SoundLevel_LedOff 0070  
                    __end_of_I2C1_GetCommand 0975                                 MIC_Mode@mode 0020  
                      ?_I2C1_SetTransmitData 0020                          ??_SoundLevel_LedOff 0020  
                             _soundinterrupt 00D3                              __size_of___ftge 0039  
                                    ___ftadd 02BC                                      ___ftdiv 0700  
                            __size_of___wmul 0020                                      ___ftmul 058A  
                                    ___ftsub 0A7E                                      ___fttol 0F7B  
                                 ??___altoft 0032                                      _cmdByte 007A  
                SoundLevel_PrepareData@i_663 00BB                                   ??___awtoft 002B  
                                 ??___ftpack 0025                            __end_of_eval_poly 0E98  
                                    __ptext1 098D                                      __ptext2 0D04  
                                    __ptext3 08DF                                      __ptext4 04C8  
                                    __ptext5 0BD9                                      __ptext6 091C  
                                    __ptext7 0936                                      __ptext8 08D8  
                                    __ptext9 007A                         _I2C1_CommandReceived 0002  
                                 ??___lwtoft 002B                                      _measure 0BD9  
                      _OSCILLATOR_Initialize 08EE                                 __size_of_log 00B5  
                  __end_of_SoundLevel_LedOff 08D5                         __end_of_VDDBIAS_Init 0969  
                                  _IOCCFbits 1F55                                    _IOCCNbits 1F54  
                                  _IOCCPbits 1F53               __end_of_SoundLevel_PrepareData 02BC  
                                    main@ack 01D5                                    _LED_Blink 0E98  
                                    main@cmd 01D8                   __size_of_SYSTEM_Initialize 0022  
                                    main@len 01D9                                      main@mnr 01D7  
                                    clrloop0 0976                                    _DOUT_Init 08E3  
                       end_of_initialization 0076                   __end_of_SoundLevel_GetData 0A1C  
                   __size_of_SoundLevel_Init 0056                     __size_of_SoundLevel_Loop 00C2  
                                    init_ram 0981                                      initloop 0982  
                          _polledMeasurement 00CF                   __end_of_SoundLevel_Measure 08E3  
                    __end_of_I2C1_Initialize 0BAE                        __end_of_powerMic_Init 0800  
                          __end_of_toggleInt 099A                   __end_of_SoundLevel_StopADC 090D  
                           ?_ADCC_Initialize 0070                  __end_of_I2C1_StatusCallback 0DDF  
                      ?_I2C1_CommandReceived 0070                    __size_of_SoundLevel_LedOn 0003  
                              ??_AMPS_enable 0020                            __size_of_I2C1_ISR 003F  
                                _mDataLength 00D6                         __end_of_ISR_MIC_Wake 0949  
                    _IOCCF4_InterruptHandler 0125                            __size_of_ADCC_ISR 000F  
        __end_of_ADCC_SetADIInterruptHandler 092D                  _ADCC_SetADIInterruptHandler 0924  
                                  _TRISBbits 0013                                    _TRISCbits 0014  
              __size_of_SoundLevel_GetSample 002B                                   ?_LED_Blink 0070  
                                 ?_DOUT_Init 0070                       __size_of_nWakeMic_Init 0006  
              ??_ADCC_SetADIInterruptHandler 0022                             ?_I2C1_GetCommand 0070  
                               ??_EnterSleep 0020                                ??_generateInt 0020  
                     ??_I2C1_SetTransmitData 0023                          _SoundLevel_StartADC 091C  
                                ___ftdiv@exp 0033                            __size_of_LED_Init 000B  
                                ___ftmul@exp 004F                            __size_of_MIC_Mode 0012  
    __end_of_ADCC_EnableContinuousConversion 08DB     __size_of_ADCC_EnableContinuousConversion 0003  
          ??_ADCC_EnableContinuousConversion 0020             ?_ADCC_EnableContinuousConversion 0070  
            _ADCC_EnableContinuousConversion 08D8               ??_ADCC_DefaultInterruptHandler 0070  
                             __end_of___ftge 0C45                               __end_of___wmul 0A3C  
                              __pidataCOMMON 08C2                  __size_of_I2C1_TxBufferEmpty 0008  
                       ?_SoundLevel_StartADC 0070                       ?_OSCILLATOR_Initialize 0070  
          __size_of_ADCC_GetConversionResult 0006                    ?_ADCC_GetConversionResult 0070  
                          __size_of_WDT_Init 0006                           __end_of_EnterSleep 0914  
                         _measurementRunning 00D2                   __size_of_SoundLevel_LedOff 0003  
                        start_initialization 0033                                   eval_poly@d 0058  
                                 eval_poly@n 005A                                   eval_poly@x 0055  
                    I2C1_GetCommandData@data 0022                                  __end_of_log 0700  
                        __end_of_AMPS_enable 0AE5                __size_of_ADCC_StartConversion 0009  
                                 frexp@value 0020                                _sampleCounter 00CB  
                   __size_of_PIN_MANAGER_IOC 0021                             ?_I2C1_Initialize 0070  
                          ??_SoundLevel_Init 0022                            ??_SoundLevel_Loop 006C  
                           ??_PMD_Initialize 0020                                     ??___ftge 0026  
                        __end_of_generateInt 09A8                             I2C1_ISR@i2c_data 0073  
                   I2C1_SetTransmitData@data 0020                                     ??___wmul 0024  
                              _nWakeMic_Init 0900                                  __pdataBANK2 014B  
                     ??_I2C1_CommandReceived 0020                               _presSumSquared 00C2  
                      ??_SoundLevel_StartADC 0021                        __size_of_VDDBIAS_Init 000B  
                          __size_of___altoft 0042                            __size_of___awtoft 0025  
                          __size_of___ftpack 0075                                  _cmdReceived 0079  
                                __pbssBIGRAM 24D0                                    _adcScaler 0120  
                                __pbssCOMMON 0076                                    ___latbits 0003  
                          __size_of___lwtoft 0016                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK3 01C0  
           I2C1_StatusCallback@i2c_bus_state 0071                                  ??_LED_Blink 0020  
                                ??_DOUT_Init 0020                                ??_VDDAMP_Init 0020  
                           _thresholdEnabled 00D7                  __end_of_ADCC_StopConversion 08C9  
                                  __pnvBANK1 00D7                                    __pnvBANK2 0155  
   __end_of_ADCC_DisableContinuousConversion 08C6    __size_of_ADCC_DisableContinuousConversion 0003  
         ??_ADCC_DisableContinuousConversion 0070            ?_ADCC_DisableContinuousConversion 0070  
           _ADCC_DisableContinuousConversion 08C3                  __end_of_I2C1_GetCommandData 0A7E  
                               _VDDBIAS_Init 095E                               ?_nWakeMic_Init 0070  
                                   ?___ftadd 002E                                     ?___ftdiv 0028  
                                   ?___ftmul 0045                                     ?___ftsub 003F  
                                   ?___fttol 0020                     ?_SoundLevel_SetThreshold 0021  
                                   _I2C1_ISR 0C83                        __size_of_ISR_MIC_Wake 000A  
               ??_INTERRUPT_InterruptManager 0076                             _SoundLevel_LedOn 08D5  
                                   _ADCC_ISR 09A8                                  _AMPS_enable 0AC1  
                                   ?_measure 0070                                    _eval_poly 0E35  
                             __size_of_log10 0028                               __size_of_frexp 003E  
                                _CPUDOZEbits 088C                               __size_of_round 0048  
                             __size_of_trunc 0047                               ___wmul@product 0024  
                                   _LATBbits 0019                                     _LED_Init 0953  
                                   _LATCbits 001A                                  _generateInt 099A  
                                  clear_ram0 0975                                     _PIE0bits 0716  
                                   _PIE1bits 0717                                     _PIE3bits 0719  
                                   _MIC_Mode 09C6                          __end_of_VDDAMP_Init 08FA  
                                   _PMD0bits 0796                                     _PMD3bits 0799  
                                   _PMD6bits 079C                                 _ISR_MIC_Wake 093F  
        __size_of_INTERRUPT_InterruptManager 002D                                     _PIR0bits 070C  
                                   _PIR1bits 070D                                     _PIR3bits 070F  
                                  _sensorAPI 014B                           _SoundLevel_GetData 0A01  
                                   _SSP1CON1 0190                                     _SSP1CON2 0191  
                                   _SSP1CON3 0192                                     _SSP1STAT 018F  
                          ??_PIN_MANAGER_IOC 0070                                    _toggleInt 098D  
                        _I2C1_slaveWriteData 007B                           _SoundLevel_Measure 08DF  
                                   _WDT_Init 08FA                                   _ADCON0bits 0111  
                                 _ADCON1bits 0112                                   _ADCON2bits 0113  
                                 _ADCON3bits 0114                            ___wmul@multiplier 0020  
                        ?_SoundLevel_GetData 0020                           _SoundLevel_StopADC 0906  
                                 ?_eval_poly 0055                          ?_SoundLevel_Measure 0070  
       SoundLevel_PrepareData@presAvgSquared 00AE                     SoundLevel_GetData@length 0021  
                        ?_SoundLevel_StopADC 0070                         ??_SoundLevel_GetData 0022  
                                  frexp@eptr 0023                                   _ADSTATbits 0115  
            __end_of_SoundLevel_SetThreshold 0D46                 __end_of_SoundLevel_GetSample 0BD9  
                       ??_SoundLevel_Measure 0020             __end_of_ADCC_GetConversionResult 08EE  
                            ??_nWakeMic_Init 0020              SoundLevel_PrepareData@sampleSum 00A4  
                    I2C1_SetTransmitData@len 0022                         ??_SoundLevel_StopADC 0070  
                  SoundLevel_PrepareData@dBZ 00B3                      ??_OSCILLATOR_Initialize 0020  
                           __size_of___ftadd 0120                             __size_of___ftdiv 00B2  
                                   ___altoft 0CC2                             __size_of___ftmul 00C1  
                           __size_of___ftsub 0021                             __size_of___fttol 0085  
                                 ?_toggleInt 0070                                     ___awtoft 0AE5  
                                   ___ftpack 0F06                            AMPS_enable@enable 0022  
                                   ___lwtoft 09EB                                   _ANSELBbits 1F43  
                                 _ANSELCbits 1F4E                      _IOCCF0_InterruptHandler 0129  
                    _IOCCF6_InterruptHandler 00C5                     __size_of_ADCC_Initialize 0028  
                           __size_of_measure 0033                       __size_of_powerMic_Init 0006  
               __size_of_I2C1_StatusCallback 0052                                     __ptext10 07B2  
                                   __ptext11 0D46                                     __ptext20 058A  
                                   __ptext12 0F7B                                     __ptext21 02BC  
                                   __ptext13 0CC2                                     __ptext30 090D  
                                   __ptext22 0C0C                                     __ptext14 0A7E  
                                   __ptext31 0DDF                                     __ptext23 0AE5  
                                   __ptext15 0B32                                     __ptext40 08D5  
                                   __ptext32 07FA                                     __ptext24 09EB  
                                   __ptext16 064B                                     __ptext41 08D2  
                                   __ptext33 0900                                     __ptext25 0700  
                                   __ptext17 0C45                                     __ptext50 0B84  
                                   __ptext42 092D                                     __ptext34 08FA  
                                   __ptext26 0F06                                     __ptext18 0E35  
                                   __ptext51 0914                                     __ptext43 08E3  
                                   __ptext35 095E                                     __ptext27 09C6  
                                   __ptext19 0A1C                                     __ptext60 08CF  
                                   __ptext52 0B5A                                     __ptext44 0B0A  
                                   __ptext36 08F4                                     __ptext28 0AC1  
                                   __ptext61 08CC                                     __ptext53 0A5D  
                                   __ptext45 0924                                     __ptext37 08DB  
                                   __ptext29 099A                                     __ptext70 08C3  
                                   __ptext62 08C9                                     __ptext54 0969  
                                   __ptext46 0A01                                     __ptext38 0953  
                                   __ptext71 08E8                                     __ptext63 0C83  
                                   __ptext55 0002                                     __ptext47 0A9F  
                                   __ptext39 0E98                                     __ptext64 0D8D  
                                   __ptext48 09D8                                     __ptext65 09A8  
                                   __ptext57 0A3C                                     __ptext49 08EE  
                                   __ptext66 08C1                                     __ptext58 09B7  
                                   __ptext67 0BAE                                     __ptext59 093F  
                                   __ptext68 0906                                     __ptext69 08C6  
                               _SSP1CON1bits 0190                                 _SSP1CON2bits 0191  
                               _SSP1CON3bits 0192                 ??_IOCCF6_SetInterruptHandler 0022  
                            _SoundLevel_Init 0DDF                              _SoundLevel_Loop 04C8  
                                _VDDAMP_Init 08F4                                   _IOCCF0_ISR 08C9  
                                 _IOCCF2_ISR 08CC                                   _IOCCF4_ISR 08CF  
                                 _IOCCF6_ISR 09B7                 SoundLevel_PrepareData@signal 00B6  
                                 trunc@expon 003D                                __size_of_main 00EC  
                              _overThreshold 00CE                __size_of_I2C1_SetTransmitData 002A  
                                   _sampling 00D1                    _ADCC_ADI_InterruptHandler 00C7  
                _SoundLevel_PrepareData$2651 00A8                  _SoundLevel_PrepareData$2652 00AB  
                   __size_of_I2C1_GetCommand 000C                 __end_of_ADCC_StartConversion 093F  
                                   int$flags 007E                   __end_of_I2C1_TxBufferEmpty 091C  
         __end_of_INTERRUPT_InterruptManager 0031                   _INTERRUPT_InterruptManager 0004  
                                   main@data 01C0                                 _SSP1STATbits 018F  
                                   main@type 01D6                                     log@coeff 1000  
        __size_of_IOCCF6_SetInterruptHandler 0009                     ??_SoundLevel_PrepareData 00A0  
                         I2C1_GetCommand@cmd 0021         SoundLevel_SetThreshold@thresholdData 0022  
                                 _INTCONbits 000B                                  ??_eval_poly 005C  
                                _sampleArray 24D0                                   _READY_Init 08DB  
       __end_of_ADCC_DefaultInterruptHandler 08C2        __size_of_ADCC_DefaultInterruptHandler 0001  
               _ADCC_DefaultInterruptHandler 08C1                                     intlevel1 0000  
                             _thresholdLevel 0155                     __end_of_SoundLevel_LedOn 08D8  
                                _WDTCON0bits 080C                                _powerMic_Init 07FA  
                __end_of_SoundLevel_StartADC 0924                              _measurementData 00C9  
                     SoundLevel_GetData@data 0020                     _ADCC_GetConversionResult 08E8  
                                ??_toggleInt 0020                     __size_of_I2C1_Initialize 002A  
                              __pstringtext1 1000                __size_of_I2C1_CommandReceived 0002  
                               ?_AMPS_enable 0070                                   _SSP1DATPPS 1EC6  
                                 _SSP1CLKPPS 1EC5                      __end_of_SoundLevel_Init 0E35  
                    __end_of_SoundLevel_Loop 058A                         _SoundLevel_GetSample 0BAE  
                                _VREGCONbits 0812             __size_of_SoundLevel_SetThreshold 0042  
             SYSTEM_Initialize@slave_address 0021                                  ?_IOCCF0_ISR 0070  
                                ?_IOCCF2_ISR 0070                                  ?_IOCCF4_ISR 0070  
                          ??_ADCC_Initialize 0022                                  ?_IOCCF6_ISR 0070  
              ?_ADCC_DefaultInterruptHandler 0070                                   _STATUSbits 0003  
                               ?_generateInt 0070                              _PIN_MANAGER_IOC 0A3C  
                             ?_powerMic_Init 0070                 __size_of_ADCC_StopConversion 0003  
